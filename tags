!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ALLOC_ZERO	kern/pmap.h	/^	ALLOC_ZERO = 1<<0,$/;"	e	enum:__anon1
ALT	kern/console.c	220;"	d	file:
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
ARRAYSIZE	user/testbss.c	5;"	d	file:
ARRAY_SIZE	inc/types.h	70;"	d
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
ASM	lib/string.c	9;"	d	file:
ASM	obj/kern/kernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/badsegment.asm	/^#define ASM 1$/;"	d
ASM	obj/user/breakpoint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/divzero.asm	/^#define ASM 1$/;"	d
ASM	obj/user/dumbfork.asm	/^#define ASM 1$/;"	d
ASM	obj/user/evilhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/fairness.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultalloc.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultallocbad.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultbadhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultdie.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultevilhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultnostack.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultread.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultreadkernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultregs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwrite.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwritekernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/forktree.asm	/^#define ASM 1$/;"	d
ASM	obj/user/hello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/idle.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpong.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpongs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/primes.asm	/^#define ASM 1$/;"	d
ASM	obj/user/sendpage.asm	/^#define ASM 1$/;"	d
ASM	obj/user/softint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spin.asm	/^#define ASM 1$/;"	d
ASM	obj/user/stresssched.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testbss.asm	/^#define ASM 1$/;"	d
ASM	obj/user/yield.asm	/^#define ASM 1$/;"	d
ASSERT	kern/lapic.c	25;"	d	file:
BACKTRACE_RE	grade-lab1	/^BACKTRACE_RE = r"^ *ebp +f01[0-9a-z]{5} +eip +f0100[0-9a-z]{3} +args +([0-9a-z]+)"$/;"	v
BCAST	kern/lapic.c	28;"	d	file:
BUFLEN	lib/readline.c	4;"	d	file:
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN 1024$/;"	d
BUSY	kern/lapic.c	30;"	d	file:
C	kern/console.c	287;"	d	file:
CAPSLOCK	kern/console.c	222;"	d	file:
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD$/;"	m
CGA_BASE	kern/console.h	13;"	d
CGA_BUF	kern/console.h	14;"	d
CHECK	user/faultregs.c	43;"	d	file:
CHECK	user/faultregs.c	65;"	d	file:
CHECKSUM	kern/entry.S	/^#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))$/;"	d
CMDBUF_SIZE	kern/monitor.c	15;"	d	file:
CMDBYTE	inc/kbdreg.h	60;"	d
COLORS	gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
COM1	kern/console.c	28;"	d	file:
COM_DLL	kern/console.c	32;"	d	file:
COM_DLM	kern/console.c	33;"	d	file:
COM_FCR	kern/console.c	37;"	d	file:
COM_IER	kern/console.c	34;"	d	file:
COM_IER_RDI	kern/console.c	35;"	d	file:
COM_IIR	kern/console.c	36;"	d	file:
COM_LCR	kern/console.c	38;"	d	file:
COM_LCR_DLAB	kern/console.c	39;"	d	file:
COM_LCR_WLEN8	kern/console.c	40;"	d	file:
COM_LSR	kern/console.c	45;"	d	file:
COM_LSR_DATA	kern/console.c	46;"	d	file:
COM_LSR_TSRE	kern/console.c	48;"	d	file:
COM_LSR_TXRDY	kern/console.c	47;"	d	file:
COM_MCR	kern/console.c	41;"	d	file:
COM_MCR_DTR	kern/console.c	43;"	d	file:
COM_MCR_OUT2	kern/console.c	44;"	d	file:
COM_MCR_RTS	kern/console.c	42;"	d	file:
COM_RX	kern/console.c	30;"	d	file:
COM_TX	kern/console.c	31;"	d	file:
CONSBUFSIZE	kern/console.c	390;"	d	file:
CPUS	GNUmakefile	/^CPUS ?= 1$/;"	m
CPU_HALTED	kern/cpu.h	/^	CPU_HALTED,$/;"	e	enum:__anon3
CPU_STARTED	kern/cpu.h	/^	CPU_STARTED,$/;"	e	enum:__anon3
CPU_UNUSED	kern/cpu.h	/^	CPU_UNUSED = 0,$/;"	e	enum:__anon3
CR0_AM	inc/mmu.h	86;"	d
CR0_CD	inc/mmu.h	88;"	d
CR0_EM	inc/mmu.h	81;"	d
CR0_ET	inc/mmu.h	83;"	d
CR0_MP	inc/mmu.h	80;"	d
CR0_NE	inc/mmu.h	84;"	d
CR0_NW	inc/mmu.h	87;"	d
CR0_PE	inc/mmu.h	79;"	d
CR0_PG	inc/mmu.h	89;"	d
CR0_TS	inc/mmu.h	82;"	d
CR0_WP	inc/mmu.h	85;"	d
CR4_DE	inc/mmu.h	94;"	d
CR4_MCE	inc/mmu.h	92;"	d
CR4_PCE	inc/mmu.h	91;"	d
CR4_PSE	inc/mmu.h	93;"	d
CR4_PVI	inc/mmu.h	96;"	d
CR4_TSD	inc/mmu.h	95;"	d
CR4_VME	inc/mmu.h	97;"	d
CRT_COLS	kern/console.h	17;"	d
CRT_ROWS	kern/console.h	16;"	d
CRT_SIZE	kern/console.h	18;"	d
CTL	kern/console.c	219;"	d	file:
CURRENT_TEST	gradelib.py	/^CURRENT_TEST = None$/;"	v
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
CpuInfo	kern/cpu.h	/^struct CpuInfo {$/;"	s
DEASSERT	kern/lapic.c	26;"	d	file:
DEBUG_SPINLOCK	kern/spinlock.h	7;"	d
DELIVS	kern/lapic.c	24;"	d	file:
DEPTH	user/forktree.c	5;"	d	file:
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/badsegment.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/breakpoint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/divzero.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/dumbfork.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/evilhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/fairness.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultalloc.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultallocbad.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultbadhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultdie.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultevilhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultnostack.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultread.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultreadkernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultregs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwrite.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwritekernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/forktree.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/idle.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpong.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpongs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primes.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sendpage.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/softint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spin.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/stresssched.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testbss.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/yield.asm	/^Disassembly of section .text:$/;"	l
E	grade-lab4	/^def E(s, trim=False):$/;"	f
E0ESC	kern/console.c	226;"	d	file:
ELFHDR	boot/main.c	33;"	d	file:
ELF_MAGIC	inc/elf.h	4;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	52;"	d
ELF_PROG_FLAG_READ	inc/elf.h	54;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	53;"	d
ELF_PROG_LOAD	inc/elf.h	49;"	d
ELF_SHN_UNDEF	inc/elf.h	63;"	d
ELF_SHT_NULL	inc/elf.h	57;"	d
ELF_SHT_PROGBITS	inc/elf.h	58;"	d
ELF_SHT_STRTAB	inc/elf.h	60;"	d
ELF_SHT_SYMTAB	inc/elf.h	59;"	d
ENABLE	kern/lapic.c	19;"	d	file:
ENVGENSHIFT	kern/env.c	22;"	d	file:
ENVX	inc/env.h	30;"	d
ENV_CREATE	kern/env.h	29;"	d
ENV_DYING	inc/env.h	/^	ENV_DYING,$/;"	e	enum:__anon4
ENV_FREE	inc/env.h	/^	ENV_FREE = 0,$/;"	e	enum:__anon4
ENV_NOT_RUNNABLE	inc/env.h	/^	ENV_NOT_RUNNABLE$/;"	e	enum:__anon4
ENV_PASTE3	kern/env.h	27;"	d
ENV_RUNNABLE	inc/env.h	/^	ENV_RUNNABLE,$/;"	e	enum:__anon4
ENV_RUNNING	inc/env.h	/^	ENV_RUNNING,$/;"	e	enum:__anon4
ENV_TYPE_USER	inc/env.h	/^	ENV_TYPE_USER = 0,$/;"	e	enum:EnvType
EOI	kern/lapic.c	17;"	d	file:
ERROR	kern/lapic.c	39;"	d	file:
ESR	kern/lapic.c	20;"	d	file:
EXTPHYSMEM	inc/memlayout.h	93;"	d
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon6
E_EOF	inc/error.h	/^	E_EOF		,	\/\/ Unexpected end of file$/;"	e	enum:__anon6
E_FAULT	inc/error.h	/^	E_FAULT		,	\/\/ Memory fault$/;"	e	enum:__anon6
E_INVAL	inc/error.h	/^	E_INVAL		,	\/\/ Invalid parameter$/;"	e	enum:__anon6
E_IPC_NOT_RECV	inc/error.h	/^	E_IPC_NOT_RECV	,	\/\/ Attempt to send to env that is not recving$/;"	e	enum:__anon6
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon6
E_NO_MEM	inc/error.h	/^	E_NO_MEM	,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon6
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon6
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
Elf	inc/elf.h	/^struct Elf {$/;"	s
Env	inc/env.h	/^struct Env {$/;"	s
EnvType	inc/env.h	/^enum EnvType {$/;"	g
FEC_PR	inc/mmu.h	123;"	d
FEC_U	inc/mmu.h	125;"	d
FEC_WR	inc/mmu.h	124;"	d
FIXED	kern/lapic.c	31;"	d	file:
FL_AC	inc/mmu.h	117;"	d
FL_AF	inc/mmu.h	102;"	d
FL_CF	inc/mmu.h	100;"	d
FL_DF	inc/mmu.h	107;"	d
FL_ID	inc/mmu.h	120;"	d
FL_IF	inc/mmu.h	106;"	d
FL_IOPL_0	inc/mmu.h	110;"	d
FL_IOPL_1	inc/mmu.h	111;"	d
FL_IOPL_2	inc/mmu.h	112;"	d
FL_IOPL_3	inc/mmu.h	113;"	d
FL_IOPL_MASK	inc/mmu.h	109;"	d
FL_NT	inc/mmu.h	114;"	d
FL_OF	inc/mmu.h	108;"	d
FL_PF	inc/mmu.h	101;"	d
FL_RF	inc/mmu.h	115;"	d
FL_SF	inc/mmu.h	104;"	d
FL_TF	inc/mmu.h	105;"	d
FL_VIF	inc/mmu.h	118;"	d
FL_VIP	inc/mmu.h	119;"	d
FL_VM	inc/mmu.h	116;"	d
FL_ZF	inc/mmu.h	103;"	d
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDB	GNUmakefile	/^GDB	:= $(GCCPREFIX)gdb$/;"	m
GDBClient	gradelib.py	/^class GDBClient(object):$/;"	c
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
GD_KD	inc/memlayout.h	16;"	d
GD_KT	inc/memlayout.h	15;"	d
GD_TSS0	inc/memlayout.h	19;"	d
GD_UD	inc/memlayout.h	18;"	d
GD_UT	inc/memlayout.h	17;"	d
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
ICRHI	kern/lapic.c	32;"	d	file:
ICRLO	kern/lapic.c	21;"	d	file:
ID	kern/lapic.c	14;"	d	file:
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
INIT	kern/lapic.c	22;"	d	file:
IOPHYSMEM	inc/memlayout.h	92;"	d
IO_PIC1	kern/picirq.h	12;"	d
IO_PIC2	kern/picirq.h	13;"	d
IO_RTC	kern/kclock.h	9;"	d
IO_RTC	kern/lapic.c	137;"	d	file:
IRQ_ERROR	inc/trap.h	40;"	d
IRQ_IDE	inc/trap.h	39;"	d
IRQ_KBD	inc/trap.h	36;"	d
IRQ_OFFSET	inc/trap.h	32;"	d
IRQ_SERIAL	inc/trap.h	37;"	d
IRQ_SLAVE	kern/picirq.h	15;"	d
IRQ_SPURIOUS	inc/trap.h	38;"	d
IRQ_TIMER	inc/trap.h	35;"	d
JOS_INC_ASSERT_H	inc/assert.h	4;"	d
JOS_INC_CPU_H	kern/cpu.h	3;"	d
JOS_INC_ELF_H	inc/elf.h	2;"	d
JOS_INC_ENV_H	inc/env.h	4;"	d
JOS_INC_ERROR_H	inc/error.h	4;"	d
JOS_INC_LIB_H	inc/lib.h	8;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	2;"	d
JOS_INC_MMU_H	inc/mmu.h	2;"	d
JOS_INC_SPINLOCK_H	kern/spinlock.h	2;"	d
JOS_INC_STDARG_H	inc/stdarg.h	4;"	d
JOS_INC_STDIO_H	inc/stdio.h	2;"	d
JOS_INC_STRING_H	inc/string.h	2;"	d
JOS_INC_SYSCALL_H	inc/syscall.h	2;"	d
JOS_INC_TRAP_H	inc/trap.h	2;"	d
JOS_INC_TYPES_H	inc/types.h	2;"	d
JOS_INC_X86_H	inc/x86.h	2;"	d
JOS_KBDREG_H	inc/kbdreg.h	2;"	d
JOS_KERN_ENV_H	kern/env.h	4;"	d
JOS_KERN_KCLOCK_H	kern/kclock.h	4;"	d
JOS_KERN_KDEBUG_H	kern/kdebug.h	2;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	2;"	d
JOS_KERN_PICIRQ_H	kern/picirq.h	4;"	d
JOS_KERN_PMAP_H	kern/pmap.h	4;"	d
JOS_KERN_SCHED_H	kern/sched.h	4;"	d
JOS_KERN_SYSCALL_H	kern/syscall.h	2;"	d
JOS_KERN_TRAP_H	kern/trap.h	4;"	d
JOS_STAB_H	inc/stab.h	2;"	d
KADDR	kern/pmap.h	38;"	d
KADDR	obj/kern/kernel.asm	/^#define KADDR(pa) _kaddr(__FILE__, __LINE__, pa)$/;"	d
KBCMDP	inc/kbdreg.h	29;"	d
KBC_AUXDISABLE	inc/kbdreg.h	32;"	d
KBC_AUXECHO	inc/kbdreg.h	36;"	d
KBC_AUXENABLE	inc/kbdreg.h	33;"	d
KBC_AUXTEST	inc/kbdreg.h	34;"	d
KBC_AUXWRITE	inc/kbdreg.h	37;"	d
KBC_DISABLE	inc/kbdreg.h	66;"	d
KBC_ECHO	inc/kbdreg.h	71;"	d
KBC_ENABLE	inc/kbdreg.h	67;"	d
KBC_KBDDISABLE	inc/kbdreg.h	40;"	d
KBC_KBDECHO	inc/kbdreg.h	35;"	d
KBC_KBDENABLE	inc/kbdreg.h	41;"	d
KBC_KBDTEST	inc/kbdreg.h	39;"	d
KBC_MODEIND	inc/kbdreg.h	70;"	d
KBC_PULSE0	inc/kbdreg.h	42;"	d
KBC_PULSE1	inc/kbdreg.h	43;"	d
KBC_PULSE2	inc/kbdreg.h	44;"	d
KBC_PULSE3	inc/kbdreg.h	45;"	d
KBC_RAMREAD	inc/kbdreg.h	30;"	d
KBC_RAMWRITE	inc/kbdreg.h	31;"	d
KBC_RESEND	inc/kbdreg.h	64;"	d
KBC_RESET	inc/kbdreg.h	63;"	d
KBC_SELFTEST	inc/kbdreg.h	38;"	d
KBC_SETDEFAULT	inc/kbdreg.h	65;"	d
KBC_SETTABLE	inc/kbdreg.h	69;"	d
KBC_TYPEMATIC	inc/kbdreg.h	68;"	d
KBDATAP	inc/kbdreg.h	47;"	d
KBOUTP	inc/kbdreg.h	48;"	d
KBR_ACK	inc/kbdreg.h	76;"	d
KBR_BREAK	inc/kbdreg.h	79;"	d
KBR_ECHO	inc/kbdreg.h	81;"	d
KBR_EXTENDED	inc/kbdreg.h	74;"	d
KBR_FAILURE	inc/kbdreg.h	78;"	d
KBR_OVERRUN	inc/kbdreg.h	77;"	d
KBR_RESEND	inc/kbdreg.h	75;"	d
KBR_RSTDONE	inc/kbdreg.h	80;"	d
KBSTATP	inc/kbdreg.h	19;"	d
KBS_DIB	inc/kbdreg.h	20;"	d
KBS_IBF	inc/kbdreg.h	21;"	d
KBS_NOSEC	inc/kbdreg.h	24;"	d
KBS_OCMD	inc/kbdreg.h	23;"	d
KBS_PERR	inc/kbdreg.h	27;"	d
KBS_RERR	inc/kbdreg.h	26;"	d
KBS_TERR	inc/kbdreg.h	25;"	d
KBS_WARM	inc/kbdreg.h	22;"	d
KC8_CPU	inc/kbdreg.h	57;"	d
KC8_IGNSEC	inc/kbdreg.h	56;"	d
KC8_KDISABLE	inc/kbdreg.h	55;"	d
KC8_KENABLE	inc/kbdreg.h	59;"	d
KC8_MDISABLE	inc/kbdreg.h	54;"	d
KC8_MENABLE	inc/kbdreg.h	58;"	d
KC8_TRANS	inc/kbdreg.h	53;"	d
KERNBASE	inc/memlayout.h	87;"	d
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
KEY_DEL	inc/kbdreg.h	14;"	d
KEY_DN	inc/kbdreg.h	8;"	d
KEY_END	inc/kbdreg.h	6;"	d
KEY_HOME	inc/kbdreg.h	5;"	d
KEY_INS	inc/kbdreg.h	13;"	d
KEY_LF	inc/kbdreg.h	9;"	d
KEY_PGDN	inc/kbdreg.h	12;"	d
KEY_PGUP	inc/kbdreg.h	11;"	d
KEY_RT	inc/kbdreg.h	10;"	d
KEY_UP	inc/kbdreg.h	7;"	d
KSTACKTOP	inc/memlayout.h	96;"	d
KSTKGAP	inc/memlayout.h	98;"	d
KSTKSIZE	inc/memlayout.h	97;"	d
K_LDCMDBYTE	inc/kbdreg.h	51;"	d
K_RDCMDBYTE	inc/kbdreg.h	50;"	d
LAB	conf/lab.mk	/^LAB=4$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
LEVEL	kern/lapic.c	27;"	d	file:
LINT0	kern/lapic.c	37;"	d	file:
LINT1	kern/lapic.c	38;"	d	file:
LOAD_REGS	user/faultregs.c	23;"	d	file:
LOG2NENV	inc/env.h	28;"	d
MAKE_TIMESTAMP	gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
MASKED	kern/lapic.c	40;"	d	file:
MAX	inc/types.h	49;"	d
MAXARGS	kern/monitor.c	108;"	d	file:
MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon6
MAX_IRQS	kern/picirq.h	9;"	d
MC_NVRAM_SIZE	kern/kclock.h	12;"	d
MC_NVRAM_START	kern/kclock.h	11;"	d
MIN	inc/types.h	43;"	d
MMIOBASE	inc/memlayout.h	102;"	d
MMIOLIM	inc/memlayout.h	101;"	d
MONO_BASE	kern/console.h	11;"	d
MONO_BUF	kern/console.h	12;"	d
MPBOOTPHYS	kern/mpentry.S	/^#define MPBOOTPHYS(s) ((s) - mpentry_start + MPENTRY_PADDR)$/;"	d
MPBUS	kern/mpconfig.c	67;"	d	file:
MPENTRY_PADDR	inc/memlayout.h	142;"	d
MPIOAPIC	kern/mpconfig.c	68;"	d	file:
MPIOINTR	kern/mpconfig.c	69;"	d	file:
MPLINTR	kern/mpconfig.c	70;"	d	file:
MPPROC	kern/mpconfig.c	66;"	d	file:
MPPROC_BOOT	kern/mpconfig.c	63;"	d	file:
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS (0)$/;"	d
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)$/;"	d
NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NCPU	kern/cpu.h	11;"	d
NENV	inc/env.h	29;"	d
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NO	kern/console.c	216;"	d	file:
NPDENTRIES	inc/mmu.h	45;"	d
NPTENTRIES	inc/mmu.h	46;"	d
NSYSCALLS	inc/syscall.h	/^	NSYSCALLS$/;"	e	enum:__anon7
NULL	inc/stdio.h	7;"	d
NULL	inc/types.h	5;"	d
NUMLOCK	kern/console.c	223;"	d	file:
NVRAM_BASEHI	kern/kclock.h	16;"	d
NVRAM_BASELO	kern/kclock.h	15;"	d
NVRAM_EXT16HI	kern/kclock.h	24;"	d
NVRAM_EXT16LO	kern/kclock.h	23;"	d
NVRAM_EXTHI	kern/kclock.h	20;"	d
NVRAM_EXTLO	kern/kclock.h	19;"	d
N_BCOMM	inc/stab.h	37;"	d
N_BINCL	inc/stab.h	29;"	d
N_BSLINE	inc/stab.h	25;"	d
N_DSLINE	inc/stab.h	24;"	d
N_ECOML	inc/stab.h	39;"	d
N_ECOMM	inc/stab.h	38;"	d
N_EINCL	inc/stab.h	32;"	d
N_ENTRY	inc/stab.h	33;"	d
N_EXCL	inc/stab.h	35;"	d
N_FNAME	inc/stab.h	16;"	d
N_FUN	inc/stab.h	17;"	d
N_GSYM	inc/stab.h	15;"	d
N_LBRAC	inc/stab.h	34;"	d
N_LCSYM	inc/stab.h	19;"	d
N_LENG	inc/stab.h	40;"	d
N_LSYM	inc/stab.h	28;"	d
N_MAIN	inc/stab.h	20;"	d
N_PC	inc/stab.h	21;"	d
N_PSYM	inc/stab.h	31;"	d
N_RBRAC	inc/stab.h	36;"	d
N_RSYM	inc/stab.h	22;"	d
N_SLINE	inc/stab.h	23;"	d
N_SO	inc/stab.h	27;"	d
N_SOL	inc/stab.h	30;"	d
N_SSYM	inc/stab.h	26;"	d
N_STSYM	inc/stab.h	18;"	d
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
OTHERS	kern/lapic.c	29;"	d	file:
O_ACCMODE	inc/lib.h	84;"	d
O_CREAT	inc/lib.h	86;"	d
O_EXCL	inc/lib.h	88;"	d
O_MKDIR	inc/lib.h	89;"	d
O_RDONLY	inc/lib.h	81;"	d
O_RDWR	inc/lib.h	83;"	d
O_TRUNC	inc/lib.h	87;"	d
O_WRONLY	inc/lib.h	82;"	d
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Mon Oct 8 21:31:51 PDT 2018$/;"	m
PADDR	kern/pmap.h	26;"	d
PADDR	obj/kern/kernel.asm	/^#define PADDR(kva) _paddr(__FILE__, __LINE__, kva)$/;"	d
PCINT	kern/lapic.c	36;"	d	file:
PDX	inc/mmu.h	33;"	d
PDXSHIFT	inc/mmu.h	55;"	d
PERIODIC	kern/lapic.c	35;"	d	file:
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PFTEMP	inc/memlayout.h	137;"	d
PGADDR	inc/mmu.h	42;"	d
PGNUM	inc/mmu.h	30;"	d
PGOFF	inc/mmu.h	39;"	d
PGSHIFT	inc/mmu.h	49;"	d
PGSIZE	inc/mmu.h	48;"	d
PTE_A	inc/mmu.h	63;"	d
PTE_ADDR	inc/mmu.h	76;"	d
PTE_AVAIL	inc/mmu.h	70;"	d
PTE_COW	lib/fork.c	8;"	d	file:
PTE_D	inc/mmu.h	64;"	d
PTE_G	inc/mmu.h	66;"	d
PTE_P	inc/mmu.h	58;"	d
PTE_PCD	inc/mmu.h	62;"	d
PTE_PS	inc/mmu.h	65;"	d
PTE_PWT	inc/mmu.h	61;"	d
PTE_SHARE	inc/lib.h	74;"	d
PTE_SYSCALL	inc/mmu.h	73;"	d
PTE_U	inc/mmu.h	60;"	d
PTE_W	inc/mmu.h	59;"	d
PTSHIFT	inc/mmu.h	52;"	d
PTSIZE	inc/mmu.h	51;"	d
PTX	inc/mmu.h	36;"	d
PTXSHIFT	inc/mmu.h	54;"	d
PageInfo	inc/memlayout.h	/^struct PageInfo {$/;"	s
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
PushRegs	inc/trap.h	/^struct PushRegs {$/;"	s
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu >\/dev\/null 2>&1; \\$/;"	m
QEMU	gradelib.py	/^class QEMU(object):$/;"	c
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -drive file=$(OBJDIR)\/kern\/kernel.img,index=0,media=disk,format=raw -serial mon:stdio -gdb tcp::$(GDBPORT)$/;"	m
RELOC	kern/entry.S	/^#define	RELOC(x) ((x) - KERNBASE)$/;"	d
RELOC	kern/mpentry.S	/^#define RELOC(x) ((x) - KERNBASE)$/;"	d
ROUNDDOWN	inc/types.h	58;"	d
ROUNDUP	inc/types.h	64;"	d
Runner	gradelib.py	/^class Runner():$/;"	c
SAVE_REGS	user/faultregs.c	13;"	d	file:
SCROLLLOCK	kern/console.c	224;"	d	file:
SECTSIZE	boot/main.c	32;"	d	file:
SEG	inc/mmu.h	142;"	d
SEG	inc/mmu.h	172;"	d
SEG16	inc/mmu.h	176;"	d
SEG_FAULT	inc/mmu.h	170;"	d
SEG_NULL	inc/mmu.h	139;"	d
SEG_NULL	inc/mmu.h	168;"	d
SETCALLGATE	inc/mmu.h	296;"	d
SETGATE	inc/mmu.h	282;"	d
SHIFT	kern/console.c	218;"	d	file:
SRL	kern/entry.S	/^#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))$/;"	d
STARTUP	kern/lapic.c	23;"	d	file:
STA_A	inc/mmu.h	189;"	d
STA_C	inc/mmu.h	186;"	d
STA_E	inc/mmu.h	185;"	d
STA_R	inc/mmu.h	188;"	d
STA_W	inc/mmu.h	187;"	d
STA_X	inc/mmu.h	184;"	d
STS_CG16	inc/mmu.h	195;"	d
STS_CG32	inc/mmu.h	201;"	d
STS_IG16	inc/mmu.h	197;"	d
STS_IG32	inc/mmu.h	202;"	d
STS_LDT	inc/mmu.h	193;"	d
STS_T16A	inc/mmu.h	192;"	d
STS_T16B	inc/mmu.h	194;"	d
STS_T32A	inc/mmu.h	199;"	d
STS_T32B	inc/mmu.h	200;"	d
STS_TG	inc/mmu.h	196;"	d
STS_TG16	inc/mmu.h	198;"	d
STS_TG32	inc/mmu.h	203;"	d
SVR	kern/lapic.c	18;"	d	file:
SYS_cgetc	inc/syscall.h	/^	SYS_cgetc,$/;"	e	enum:__anon7
SYS_cputs	inc/syscall.h	/^	SYS_cputs = 0,$/;"	e	enum:__anon7
SYS_env_destroy	inc/syscall.h	/^	SYS_env_destroy,$/;"	e	enum:__anon7
SYS_env_set_pgfault_upcall	inc/syscall.h	/^	SYS_env_set_pgfault_upcall,$/;"	e	enum:__anon7
SYS_env_set_status	inc/syscall.h	/^	SYS_env_set_status,$/;"	e	enum:__anon7
SYS_exofork	inc/syscall.h	/^	SYS_exofork,$/;"	e	enum:__anon7
SYS_getenvid	inc/syscall.h	/^	SYS_getenvid,$/;"	e	enum:__anon7
SYS_ipc_recv	inc/syscall.h	/^	SYS_ipc_recv,$/;"	e	enum:__anon7
SYS_ipc_try_send	inc/syscall.h	/^	SYS_ipc_try_send,$/;"	e	enum:__anon7
SYS_page_alloc	inc/syscall.h	/^	SYS_page_alloc,$/;"	e	enum:__anon7
SYS_page_map	inc/syscall.h	/^	SYS_page_map,$/;"	e	enum:__anon7
SYS_page_unmap	inc/syscall.h	/^	SYS_page_unmap,$/;"	e	enum:__anon7
SYS_yield	inc/syscall.h	/^	SYS_yield,$/;"	e	enum:__anon7
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
Stab	inc/stab.h	/^struct Stab {$/;"	s
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TCCR	kern/lapic.c	42;"	d	file:
TDCR	kern/lapic.c	43;"	d	file:
TEMP_ADDR	obj/user/sendpage.asm	/^#define TEMP_ADDR	((char*)0xa00000)$/;"	d
TEMP_ADDR	user/sendpage.c	9;"	d	file:
TEMP_ADDR_CHILD	obj/user/sendpage.asm	/^#define TEMP_ADDR_CHILD	((char*)0xb00000)$/;"	d
TEMP_ADDR_CHILD	user/sendpage.c	10;"	d	file:
TESTS	gradelib.py	/^TESTS = []$/;"	v
TICR	kern/lapic.c	41;"	d	file:
TIMER	kern/lapic.c	33;"	d	file:
TOP	GNUmakefile	/^TOP = .$/;"	m
TPR	kern/lapic.c	16;"	d	file:
TRAPHANDLER	kern/trapentry.S	/^#define TRAPHANDLER(name, num)						\\$/;"	d
TRAPHANDLER	kern/trapentry.S	/^TRAPHANDLER     (TH_ALIGN, 17)	\/\/$/;"	l
TRAPHANDLER	kern/trapentry.S	/^TRAPHANDLER     (TH_DBLFLT, 8)	\/\/ abort$/;"	l
TRAPHANDLER	kern/trapentry.S	/^TRAPHANDLER     (TH_GPFLT, 13)	\/\/ fault\/abort$/;"	l
TRAPHANDLER	kern/trapentry.S	/^TRAPHANDLER     (TH_PGFLT, 14)	\/\/ fault$/;"	l
TRAPHANDLER	kern/trapentry.S	/^TRAPHANDLER     (TH_SEGNP, 11)	\/\/ fault$/;"	l
TRAPHANDLER	kern/trapentry.S	/^TRAPHANDLER     (TH_STACK, 12)	\/\/ fault$/;"	l
TRAPHANDLER	kern/trapentry.S	/^TRAPHANDLER     (TH_TSS, 10)	\/\/ fault$/;"	l
TRAPHANDLER	obj/kern/kernel.asm	/^TRAPHANDLER     (TH_ALIGN, 17)	\/\/$/;"	l
TRAPHANDLER	obj/kern/kernel.asm	/^TRAPHANDLER     (TH_DBLFLT, 8)	\/\/ abort$/;"	l
TRAPHANDLER	obj/kern/kernel.asm	/^TRAPHANDLER     (TH_GPFLT, 13)	\/\/ fault\/abort$/;"	l
TRAPHANDLER	obj/kern/kernel.asm	/^TRAPHANDLER     (TH_PGFLT, 14)	\/\/ fault$/;"	l
TRAPHANDLER	obj/kern/kernel.asm	/^TRAPHANDLER     (TH_SEGNP, 11)	\/\/ fault$/;"	l
TRAPHANDLER	obj/kern/kernel.asm	/^TRAPHANDLER     (TH_STACK, 12)	\/\/ fault$/;"	l
TRAPHANDLER	obj/kern/kernel.asm	/^TRAPHANDLER     (TH_TSS, 10)	\/\/ fault$/;"	l
TRAPHANDLER_NOEC	kern/trapentry.S	/^#define TRAPHANDLER_NOEC(name, num)					\\$/;"	d
T_ALIGN	inc/trap.h	23;"	d
T_BOUND	inc/trap.h	11;"	d
T_BRKPT	inc/trap.h	9;"	d
T_DBLFLT	inc/trap.h	14;"	d
T_DEBUG	inc/trap.h	7;"	d
T_DEFAULT	inc/trap.h	30;"	d
T_DEVICE	inc/trap.h	13;"	d
T_DIVIDE	inc/trap.h	6;"	d
T_FPERR	inc/trap.h	22;"	d
T_GPFLT	inc/trap.h	19;"	d
T_ILLOP	inc/trap.h	12;"	d
T_MCHK	inc/trap.h	24;"	d
T_NMI	inc/trap.h	8;"	d
T_OFLOW	inc/trap.h	10;"	d
T_PGFLT	inc/trap.h	20;"	d
T_SEGNP	inc/trap.h	17;"	d
T_SIMDERR	inc/trap.h	25;"	d
T_STACK	inc/trap.h	18;"	d
T_SYSCALL	inc/trap.h	29;"	d
T_TSS	inc/trap.h	16;"	d
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
TerminateTest	gradelib.py	/^class TerminateTest(Exception):$/;"	c
Trapframe	inc/trap.h	/^struct Trapframe {$/;"	s
UENVS	inc/memlayout.h	116;"	d
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULIM	inc/memlayout.h	104;"	d
UPAGES	inc/memlayout.h	114;"	d
UPSTREAM	GNUmakefile	/^UPSTREAM := $(shell git remote -v | grep "pdos.csail.mit.edu\/6.828\/2018\/jos.git (fetch)" | awk '{split($$0,a," "); print a[1]}')$/;"	m
USED	inc/lib.h	21;"	d
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
USTABDATA	inc/memlayout.h	139;"	d
USTACKTOP	inc/memlayout.h	128;"	d
UTEMP	inc/memlayout.h	134;"	d
UTEXT	inc/memlayout.h	131;"	d
UTOP	inc/memlayout.h	123;"	d
UTrapframe	inc/trap.h	/^struct UTrapframe {$/;"	s
UVPT	inc/memlayout.h	112;"	d
UXSTACKTOP	inc/memlayout.h	125;"	d
UserStabData	kern/kdebug.c	/^struct UserStabData {$/;"	s	file:
V	conf/env.mk	/^V = @$/;"	m
VER	kern/lapic.c	15;"	d	file:
WEBSUB	GNUmakefile	/^WEBSUB := https:\/\/6828.scripts.mit.edu\/2018\/handin.py$/;"	m
WHITESPACE	kern/monitor.c	107;"	d	file:
X1	kern/lapic.c	34;"	d	file:
_CONSOLE_H_	kern/console.h	4;"	d
_GDBPORT	gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
__all__	gradelib.py	/^__all__ = []$/;"	v
__init__	gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner
__init__	gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU
__init__	gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient
__monitor_start	gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:
__react	gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:
__send	gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:
__send_break	gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:
__spin_initlock	kern/spinlock.c	/^__spin_initlock(struct spinlock *lk, char *name)$/;"	f
_alltraps	kern/trapentry.S	/^_alltraps:$/;"	l
_alltraps	obj/kern/kernel.asm	/^_alltraps:$/;"	l
_kaddr	kern/pmap.h	/^_kaddr(const char *file, int line, physaddr_t pa)$/;"	f
_paddr	kern/pmap.h	/^_paddr(const char *file, int line, void *kva)$/;"	f
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f
_panic	lib/panic.c	/^_panic(const char *file, int line, const char *fmt, ...)$/;"	f
_pgfault_handler	lib/pgfault.c	/^void (*_pgfault_handler)(struct UTrapframe *utf);$/;"	v
_pgfault_handler	obj/user/faultalloc.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultallocbad.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultdie.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultnostack.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultregs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	lib/pfentry.S	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultnostack.asm	/^_pgfault_upcall:$/;"	l
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
_start	lib/entry.S	/^_start:$/;"	l
_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
_start	obj/user/badsegment.asm	/^_start:$/;"	l
_start	obj/user/breakpoint.asm	/^_start:$/;"	l
_start	obj/user/buggyhello.asm	/^_start:$/;"	l
_start	obj/user/buggyhello2.asm	/^_start:$/;"	l
_start	obj/user/divzero.asm	/^_start:$/;"	l
_start	obj/user/dumbfork.asm	/^_start:$/;"	l
_start	obj/user/evilhello.asm	/^_start:$/;"	l
_start	obj/user/fairness.asm	/^_start:$/;"	l
_start	obj/user/faultalloc.asm	/^_start:$/;"	l
_start	obj/user/faultallocbad.asm	/^_start:$/;"	l
_start	obj/user/faultbadhandler.asm	/^_start:$/;"	l
_start	obj/user/faultdie.asm	/^_start:$/;"	l
_start	obj/user/faultevilhandler.asm	/^_start:$/;"	l
_start	obj/user/faultnostack.asm	/^_start:$/;"	l
_start	obj/user/faultread.asm	/^_start:$/;"	l
_start	obj/user/faultreadkernel.asm	/^_start:$/;"	l
_start	obj/user/faultregs.asm	/^_start:$/;"	l
_start	obj/user/faultwrite.asm	/^_start:$/;"	l
_start	obj/user/faultwritekernel.asm	/^_start:$/;"	l
_start	obj/user/forktree.asm	/^_start:$/;"	l
_start	obj/user/hello.asm	/^_start:$/;"	l
_start	obj/user/idle.asm	/^_start:$/;"	l
_start	obj/user/pingpong.asm	/^_start:$/;"	l
_start	obj/user/pingpongs.asm	/^_start:$/;"	l
_start	obj/user/primes.asm	/^_start:$/;"	l
_start	obj/user/sendpage.asm	/^_start:$/;"	l
_start	obj/user/softint.asm	/^_start:$/;"	l
_start	obj/user/spin.asm	/^_start:$/;"	l
_start	obj/user/stresssched.asm	/^_start:$/;"	l
_start	obj/user/testbss.asm	/^_start:$/;"	l
_start	obj/user/yield.asm	/^_start:$/;"	l
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	file:
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
after	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/badsegment.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/badsegment.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/breakpoint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/breakpoint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/divzero.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/divzero.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/dumbfork.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/dumbfork.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/evilhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/evilhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/fairness.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/fairness.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultalloc.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultalloc.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultallocbad.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultallocbad.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultdie.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultdie.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultnostack.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultnostack.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultread.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultread.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultregs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultregs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwrite.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwrite.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/forktree.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/forktree.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/hello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/hello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/idle.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/idle.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpong.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpong.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpongs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpongs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/primes.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primes.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/sendpage.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/sendpage.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/softint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/softint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spin.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spin.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/stresssched.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/stresssched.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testbss.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testbss.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/yield.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/yield.asm	/^		altflag = 0;$/;"	d
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
apicid	kern/mpconfig.c	/^	uint8_t apicid;                 \/\/ local APIC id$/;"	m	struct:mpproc	file:
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
args_exist	lib/entry.S	/^args_exist:$/;"	l
args_exist	obj/user/badsegment.asm	/^args_exist:$/;"	l
args_exist	obj/user/breakpoint.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello2.asm	/^args_exist:$/;"	l
args_exist	obj/user/divzero.asm	/^args_exist:$/;"	l
args_exist	obj/user/dumbfork.asm	/^args_exist:$/;"	l
args_exist	obj/user/evilhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/fairness.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultalloc.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultallocbad.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultbadhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultdie.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultevilhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultnostack.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultread.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultreadkernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultregs.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwrite.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwritekernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/forktree.asm	/^args_exist:$/;"	l
args_exist	obj/user/hello.asm	/^args_exist:$/;"	l
args_exist	obj/user/idle.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpong.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpongs.asm	/^args_exist:$/;"	l
args_exist	obj/user/primes.asm	/^args_exist:$/;"	l
args_exist	obj/user/sendpage.asm	/^args_exist:$/;"	l
args_exist	obj/user/softint.asm	/^args_exist:$/;"	l
args_exist	obj/user/spin.asm	/^args_exist:$/;"	l
args_exist	obj/user/stresssched.asm	/^args_exist:$/;"	l
args_exist	obj/user/testbss.asm	/^args_exist:$/;"	l
args_exist	obj/user/yield.asm	/^args_exist:$/;"	l
assert	inc/assert.h	14;"	d
assert_equal	gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f
assert_lines_match	gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f
assert_lines_match_kw	gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
base	obj/kern/kernel.asm	/^			base = 8;						$/;"	d
base	obj/kern/kernel.asm	/^		base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 16;$/;"	d
base	obj/user/badsegment.asm	/^			base = 8;						$/;"	d
base	obj/user/badsegment.asm	/^		base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 16;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 8;						$/;"	d
base	obj/user/breakpoint.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 8;						$/;"	d
base	obj/user/buggyhello.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 8;						$/;"	d
base	obj/user/buggyhello2.asm	/^		base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 16;$/;"	d
base	obj/user/divzero.asm	/^			base = 8;						$/;"	d
base	obj/user/divzero.asm	/^		base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 16;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 8;						$/;"	d
base	obj/user/dumbfork.asm	/^		base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 16;$/;"	d
base	obj/user/evilhello.asm	/^			base = 8;						$/;"	d
base	obj/user/evilhello.asm	/^		base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 16;$/;"	d
base	obj/user/fairness.asm	/^			base = 8;						$/;"	d
base	obj/user/fairness.asm	/^		base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 16;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 8;						$/;"	d
base	obj/user/faultalloc.asm	/^		base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 16;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 8;						$/;"	d
base	obj/user/faultallocbad.asm	/^		base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 8;						$/;"	d
base	obj/user/faultbadhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 16;$/;"	d
base	obj/user/faultdie.asm	/^			base = 8;						$/;"	d
base	obj/user/faultdie.asm	/^		base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 8;						$/;"	d
base	obj/user/faultevilhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 16;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 8;						$/;"	d
base	obj/user/faultnostack.asm	/^		base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 16;$/;"	d
base	obj/user/faultread.asm	/^			base = 8;						$/;"	d
base	obj/user/faultread.asm	/^		base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 8;						$/;"	d
base	obj/user/faultreadkernel.asm	/^		base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 16;$/;"	d
base	obj/user/faultregs.asm	/^			base = 8;						$/;"	d
base	obj/user/faultregs.asm	/^		base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 16;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 8;						$/;"	d
base	obj/user/faultwrite.asm	/^		base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 8;						$/;"	d
base	obj/user/faultwritekernel.asm	/^		base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 16;$/;"	d
base	obj/user/forktree.asm	/^			base = 8;						$/;"	d
base	obj/user/forktree.asm	/^		base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 16;$/;"	d
base	obj/user/hello.asm	/^			base = 8;						$/;"	d
base	obj/user/hello.asm	/^		base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 16;$/;"	d
base	obj/user/idle.asm	/^			base = 8;						$/;"	d
base	obj/user/idle.asm	/^		base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 16;$/;"	d
base	obj/user/pingpong.asm	/^			base = 8;						$/;"	d
base	obj/user/pingpong.asm	/^		base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 16;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 8;						$/;"	d
base	obj/user/pingpongs.asm	/^		base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 16;$/;"	d
base	obj/user/primes.asm	/^			base = 8;						$/;"	d
base	obj/user/primes.asm	/^		base = 10;$/;"	d
base	obj/user/sendpage.asm	/^			base = 10;$/;"	d
base	obj/user/sendpage.asm	/^			base = 16;$/;"	d
base	obj/user/sendpage.asm	/^			base = 8;						$/;"	d
base	obj/user/sendpage.asm	/^		base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 16;$/;"	d
base	obj/user/softint.asm	/^			base = 8;						$/;"	d
base	obj/user/softint.asm	/^		base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 16;$/;"	d
base	obj/user/spin.asm	/^			base = 8;						$/;"	d
base	obj/user/spin.asm	/^		base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 16;$/;"	d
base	obj/user/stresssched.asm	/^			base = 8;						$/;"	d
base	obj/user/stresssched.asm	/^		base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 16;$/;"	d
base	obj/user/testbss.asm	/^			base = 8;						$/;"	d
base	obj/user/testbss.asm	/^		base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 16;$/;"	d
base	obj/user/yield.asm	/^			base = 8;						$/;"	d
base	obj/user/yield.asm	/^		base = 10;$/;"	d
basemem	obj/kern/kernel.asm	/^	basemem = nvram_read(NVRAM_BASELO);$/;"	d
bda	obj/kern/kernel.asm	/^	bda = (uint8_t *) KADDR(0x40 << 4);$/;"	d
before	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:regs	file:
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v
binaryname	lib/libmain.c	/^const char *binaryname = "<unknown>";$/;"	v
binaryname	obj/user/badsegment.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/breakpoint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/divzero.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/dumbfork.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/evilhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/fairness.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultalloc.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultallocbad.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultbadhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultdie.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultevilhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultnostack.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultread.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultreadkernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultregs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwrite.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwritekernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/forktree.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/hello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^	binaryname = "idle";$/;"	d
binaryname	obj/user/pingpong.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/pingpongs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primes.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/sendpage.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/softint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spin.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/stresssched.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testbss.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/yield.asm	/^		binaryname = argv[0];$/;"	d
bool	inc/types.h	/^typedef _Bool bool;$/;"	t
boot_alloc	kern/pmap.c	/^boot_alloc(uint32_t n)$/;"	f	file:
boot_aps	kern/init.c	/^boot_aps(void)$/;"	f	file:
boot_map_region	kern/pmap.c	/^boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)$/;"	f	file:
bootcpu	kern/mpconfig.c	/^struct CpuInfo *bootcpu;$/;"	v	typeref:struct:CpuInfo
bootcpu	obj/kern/kernel.asm	/^				bootcpu = &cpus[ncpu];$/;"	d
bootcpu	obj/kern/kernel.asm	/^	bootcpu = &cpus[0];$/;"	d
bootmain	boot/main.c	/^bootmain(void)$/;"	f
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
breakpoint	gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon2	file:
buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	file:
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c	obj/kern/kernel.asm	/^	c = page2kva(pp);$/;"	d
c	obj/user/badsegment.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/breakpoint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/divzero.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/dumbfork.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/evilhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/fairness.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultalloc.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultallocbad.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultbadhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultdie.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultevilhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultnostack.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultread.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultreadkernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultregs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwrite.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwritekernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/forktree.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/hello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/idle.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpong.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpongs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/primes.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sendpage.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/softint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spin.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/stresssched.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testbss.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/yield.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
call_on_line	gradelib.py	/^def call_on_line(regexp, callback):$/;"	f
cga_init	kern/console.c	/^cga_init(void)$/;"	f	file:
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	file:
ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/badsegment.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/breakpoint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/divzero.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/dumbfork.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/evilhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/fairness.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultalloc.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultallocbad.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultbadhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultdie.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultevilhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultnostack.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultread.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultreadkernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultregs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwrite.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwritekernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/forktree.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/hello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/idle.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpong.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpongs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/primes.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/sendpage.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/softint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spin.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/stresssched.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testbss.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/yield.asm	/^				ch = *fmt;$/;"	d
char	obj/kern/kernel.asm	/^char *$/;"	l
char	obj/user/badsegment.asm	/^char *$/;"	l
char	obj/user/breakpoint.asm	/^char *$/;"	l
char	obj/user/buggyhello.asm	/^char *$/;"	l
char	obj/user/buggyhello2.asm	/^char *$/;"	l
char	obj/user/divzero.asm	/^char *$/;"	l
char	obj/user/dumbfork.asm	/^char *$/;"	l
char	obj/user/evilhello.asm	/^char *$/;"	l
char	obj/user/fairness.asm	/^char *$/;"	l
char	obj/user/faultalloc.asm	/^char *$/;"	l
char	obj/user/faultallocbad.asm	/^char *$/;"	l
char	obj/user/faultbadhandler.asm	/^char *$/;"	l
char	obj/user/faultdie.asm	/^char *$/;"	l
char	obj/user/faultevilhandler.asm	/^char *$/;"	l
char	obj/user/faultnostack.asm	/^char *$/;"	l
char	obj/user/faultread.asm	/^char *$/;"	l
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
char	obj/user/faultregs.asm	/^char *$/;"	l
char	obj/user/faultwrite.asm	/^char *$/;"	l
char	obj/user/faultwritekernel.asm	/^char *$/;"	l
char	obj/user/forktree.asm	/^char *$/;"	l
char	obj/user/hello.asm	/^char *$/;"	l
char	obj/user/idle.asm	/^char *$/;"	l
char	obj/user/pingpong.asm	/^char *$/;"	l
char	obj/user/pingpongs.asm	/^char *$/;"	l
char	obj/user/primes.asm	/^char *$/;"	l
char	obj/user/sendpage.asm	/^char *$/;"	l
char	obj/user/softint.asm	/^char *$/;"	l
char	obj/user/spin.asm	/^char *$/;"	l
char	obj/user/stresssched.asm	/^char *$/;"	l
char	obj/user/testbss.asm	/^char *$/;"	l
char	obj/user/yield.asm	/^char *$/;"	l
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
check_kern_pgdir	kern/pmap.c	/^check_kern_pgdir(void)$/;"	f	file:
check_page	kern/pmap.c	/^check_page(void)$/;"	f	file:
check_page_alloc	kern/pmap.c	/^check_page_alloc(void)$/;"	f	file:
check_page_free_list	kern/pmap.c	/^check_page_free_list(bool only_low_memory)$/;"	f	file:
check_page_installed_pgdir	kern/pmap.c	/^check_page_installed_pgdir(void)$/;"	f	file:
check_regs	user/faultregs.c	/^check_regs(struct regs* a, const char *an, struct regs* b, const char *bn,$/;"	f	file:
check_va2pa	kern/pmap.c	/^check_va2pa(pde_t *pgdir, uintptr_t va)$/;"	f	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mp	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mpconf	file:
close	gradelib.py	/^    def close(self):$/;"	m	class:GDBClient
cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	file:
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:
cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/badsegment.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/breakpoint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/divzero.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/dumbfork.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/evilhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/fairness.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultalloc.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultallocbad.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultbadhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultdie.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultevilhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultnostack.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultread.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultreadkernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultregs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwrite.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwritekernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/forktree.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/hello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/idle.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpong.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpongs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primes.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sendpage.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/softint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spin.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/stresssched.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testbss.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/yield.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
code	obj/kern/kernel.asm	/^	code = KADDR(MPENTRY_PADDR);$/;"	d
color	gradelib.py	/^def color(name, text):$/;"	f
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command	file:
conf	obj/kern/kernel.asm	/^	conf = (struct mpconf *) KADDR(mp->physaddr);$/;"	d
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon2	file:
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f
cons_init	kern/console.c	/^cons_init(void)$/;"	f
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	file:
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	file:
const	obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
const	obj/user/badsegment.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/badsegment.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/breakpoint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/breakpoint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello2.asm	/^const char *hello = "hello, world\\n";$/;"	l
const	obj/user/buggyhello2.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/divzero.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/divzero.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/dumbfork.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/dumbfork.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/evilhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/evilhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/fairness.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/fairness.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultalloc.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultalloc.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultallocbad.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultallocbad.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultbadhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultbadhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultdie.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultdie.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultevilhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultevilhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultnostack.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultnostack.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultread.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultread.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultreadkernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultreadkernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultregs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultregs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwrite.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwrite.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwritekernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwritekernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/forktree.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/forktree.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/hello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/hello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/idle.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/idle.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpong.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpong.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpongs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpongs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/primes.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/primes.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/sendpage.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/sendpage.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/softint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/softint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/spin.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spin.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/stresssched.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/stresssched.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testbss.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testbss.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/yield.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/yield.asm	/^const volatile struct Env *thisenv;$/;"	l
cont	gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient
counter	user/stresssched.c	/^volatile int counter;$/;"	v
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cprintf	lib/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cpu	kern/spinlock.h	/^	struct CpuInfo *cpu;   \/\/ The CPU holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::CpuInfo
cpu_env	kern/cpu.h	/^	struct Env *cpu_env;            \/\/ The currently-running environment.$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Env
cpu_id	kern/cpu.h	/^	uint8_t cpu_id;                 \/\/ Local APIC ID; index into cpus[] below$/;"	m	struct:CpuInfo
cpu_status	kern/cpu.h	/^	volatile unsigned cpu_status;   \/\/ The status of the CPU$/;"	m	struct:CpuInfo
cpu_ts	kern/cpu.h	/^	struct Taskstate cpu_ts;        \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Taskstate
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f
cpunum	kern/lapic.c	/^cpunum(void)$/;"	f
cpus	kern/mpconfig.c	/^struct CpuInfo cpus[NCPU];$/;"	v	typeref:struct:CpuInfo
cputchar	kern/console.c	/^cputchar(int c)$/;"	f
cputchar	lib/console.c	/^cputchar(int ch)$/;"	f
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	file:
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] =$/;"	v	file:
curenv	kern/env.h	10;"	d
curenv	obj/kern/kernel.asm	/^			curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^		curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^	curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^	curenv = e;$/;"	d
d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
d	obj/user/badsegment.asm	/^	d = dst;$/;"	d
d	obj/user/breakpoint.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello2.asm	/^	d = dst;$/;"	d
d	obj/user/divzero.asm	/^	d = dst;$/;"	d
d	obj/user/dumbfork.asm	/^	d = dst;$/;"	d
d	obj/user/evilhello.asm	/^	d = dst;$/;"	d
d	obj/user/fairness.asm	/^	d = dst;$/;"	d
d	obj/user/faultalloc.asm	/^	d = dst;$/;"	d
d	obj/user/faultallocbad.asm	/^	d = dst;$/;"	d
d	obj/user/faultbadhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultdie.asm	/^	d = dst;$/;"	d
d	obj/user/faultevilhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultnostack.asm	/^	d = dst;$/;"	d
d	obj/user/faultread.asm	/^	d = dst;$/;"	d
d	obj/user/faultreadkernel.asm	/^	d = dst;$/;"	d
d	obj/user/faultregs.asm	/^	d = dst;$/;"	d
d	obj/user/faultwrite.asm	/^	d = dst;$/;"	d
d	obj/user/faultwritekernel.asm	/^	d = dst;$/;"	d
d	obj/user/forktree.asm	/^	d = dst;$/;"	d
d	obj/user/hello.asm	/^	d = dst;$/;"	d
d	obj/user/idle.asm	/^	d = dst;$/;"	d
d	obj/user/pingpong.asm	/^	d = dst;$/;"	d
d	obj/user/pingpongs.asm	/^	d = dst;$/;"	d
d	obj/user/primes.asm	/^	d = dst;$/;"	d
d	obj/user/sendpage.asm	/^	d = dst;$/;"	d
d	obj/user/softint.asm	/^	d = dst;$/;"	d
d	obj/user/spin.asm	/^	d = dst;$/;"	d
d	obj/user/stresssched.asm	/^	d = dst;$/;"	d
d	obj/user/testbss.asm	/^	d = dst;$/;"	d
d	obj/user/yield.asm	/^	d = dst;$/;"	d
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kern/kernel.asm	/^	data = inb(KBDATAP);$/;"	d
dead	obj/kern/kernel.asm	/^dead:$/;"	l
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f
default	obj/kern/kernel.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^	default:$/;"	l
default	obj/user/badsegment.asm	/^		default:$/;"	l
default	obj/user/breakpoint.asm	/^		default:$/;"	l
default	obj/user/buggyhello.asm	/^		default:$/;"	l
default	obj/user/buggyhello2.asm	/^		default:$/;"	l
default	obj/user/divzero.asm	/^		default:$/;"	l
default	obj/user/dumbfork.asm	/^		default:$/;"	l
default	obj/user/evilhello.asm	/^		default:$/;"	l
default	obj/user/fairness.asm	/^		default:$/;"	l
default	obj/user/faultalloc.asm	/^		default:$/;"	l
default	obj/user/faultallocbad.asm	/^		default:$/;"	l
default	obj/user/faultbadhandler.asm	/^		default:$/;"	l
default	obj/user/faultdie.asm	/^		default:$/;"	l
default	obj/user/faultevilhandler.asm	/^		default:$/;"	l
default	obj/user/faultnostack.asm	/^		default:$/;"	l
default	obj/user/faultread.asm	/^		default:$/;"	l
default	obj/user/faultreadkernel.asm	/^		default:$/;"	l
default	obj/user/faultregs.asm	/^		default:$/;"	l
default	obj/user/faultwrite.asm	/^		default:$/;"	l
default	obj/user/faultwritekernel.asm	/^		default:$/;"	l
default	obj/user/forktree.asm	/^		default:$/;"	l
default	obj/user/hello.asm	/^		default:$/;"	l
default	obj/user/idle.asm	/^		default:$/;"	l
default	obj/user/pingpong.asm	/^		default:$/;"	l
default	obj/user/pingpongs.asm	/^		default:$/;"	l
default	obj/user/primes.asm	/^		default:$/;"	l
default	obj/user/sendpage.asm	/^		default:$/;"	l
default	obj/user/softint.asm	/^		default:$/;"	l
default	obj/user/spin.asm	/^		default:$/;"	l
default	obj/user/stresssched.asm	/^		default:$/;"	l
default	obj/user/testbss.asm	/^		default:$/;"	l
default	obj/user/yield.asm	/^		default:$/;"	l
delay	kern/console.c	/^delay(void)$/;"	f	file:
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:
didinit	kern/picirq.c	/^static bool didinit;$/;"	v	file:
didinit	obj/kern/kernel.asm	/^	didinit = 1;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/badsegment.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/breakpoint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/divzero.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/dumbfork.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/evilhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/fairness.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultalloc.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultallocbad.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultbadhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultdie.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultevilhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultnostack.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultread.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultreadkernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultregs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwrite.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwritekernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/forktree.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/hello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/idle.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpong.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpongs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/primes.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/sendpage.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/softint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spin.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/stresssched.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testbss.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/yield.asm	/^	dst_in = dst;$/;"	d
dumbfork	user/dumbfork.c	/^dumbfork(void)$/;"	f
duppage	lib/fork.c	/^duppage(envid_t envid, unsigned pn)$/;"	f	file:
duppage	user/dumbfork.c	/^duppage(envid_t dstenv, void *addr)$/;"	f
during	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
e	obj/kern/kernel.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf
eax_result	obj/kern/kernel.asm	/^			eax_result = syscall($/;"	d
ebp	obj/kern/kernel.asm	/^		ebp = (uint32_t *)ebp[0]; \/\/ saved %ebp$/;"	d
ebp	obj/kern/kernel.asm	/^		ebp = *ebpp;	$/;"	d
ebp	obj/kern/kernel.asm	/^	ebp = (uint32_t *)read_ebp();$/;"	d
ebpp	obj/kern/kernel.asm	/^		ebpp = (uint32_t*)ebp;$/;"	d
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:
echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
eflags	user/faultregs.c	/^	uint32_t eflags;$/;"	m	struct:regs	file:
eip	obj/kern/kernel.asm	/^		eip = *(ebpp+1); $/;"	d
eip	user/faultregs.c	/^	uintptr_t eip;$/;"	m	struct:regs	file:
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo
end_pa	obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
end_part	gradelib.py	/^def end_part(name):$/;"	f
entries	kern/mpconfig.c	/^	uint8_t entries[0];             \/\/ table entries$/;"	m	struct:mpconf	file:
entry	kern/entry.S	/^entry:$/;"	l
entry	kern/mpconfig.c	/^	uint16_t entry;                 \/\/ entry count$/;"	m	struct:mpconf	file:
entry	obj/kern/kernel.asm	/^entry:$/;"	l
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v
env_alloc	kern/env.c	/^env_alloc(struct Env **newenv_store, envid_t parent_id)$/;"	f
env_cpunum	inc/env.h	/^	int env_cpunum;			\/\/ The CPU that the env is running on$/;"	m	struct:Env
env_create	kern/env.c	/^env_create(uint8_t *binary, enum EnvType type)$/;"	f
env_destroy	kern/env.c	/^env_destroy(struct Env *e)$/;"	f
env_free	kern/env.c	/^env_free(struct Env *e)$/;"	f
env_free_list	kern/env.c	/^static struct Env *env_free_list;	\/\/ Free environment list$/;"	v	typeref:struct:Env	file:
env_free_list	obj/kern/kernel.asm	/^		env_free_list = &envs[i];$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e->env_link;$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e;$/;"	d
env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env
env_init	kern/env.c	/^env_init(void)$/;"	f
env_init_percpu	kern/env.c	/^env_init_percpu(void)$/;"	f
env_ipc_dstva	inc/env.h	/^	void *env_ipc_dstva;		\/\/ VA at which to map received page$/;"	m	struct:Env
env_ipc_from	inc/env.h	/^	envid_t env_ipc_from;		\/\/ envid of the sender$/;"	m	struct:Env
env_ipc_perm	inc/env.h	/^	int env_ipc_perm;		\/\/ Perm of page mapping received$/;"	m	struct:Env
env_ipc_recving	inc/env.h	/^	bool env_ipc_recving;		\/\/ Env is blocked receiving$/;"	m	struct:Env
env_ipc_value	inc/env.h	/^	uint32_t env_ipc_value;		\/\/ Data value sent to us$/;"	m	struct:Env
env_link	inc/env.h	/^	struct Env *env_link;		\/\/ Next free Env$/;"	m	struct:Env	typeref:struct:Env::Env
env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env
env_pgdir	inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env
env_pgfault_upcall	inc/env.h	/^	void *env_pgfault_upcall;	\/\/ Page fault upcall entry point$/;"	m	struct:Env
env_pop_tf	kern/env.c	/^env_pop_tf(struct Trapframe *tf)$/;"	f
env_run	kern/env.c	/^env_run(struct Env *e)$/;"	f
env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env
env_setup_vm	kern/env.c	/^env_setup_vm(struct Env *e)$/;"	f	file:
env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env
env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe
env_type	inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:Env::EnvType
envid	obj/user/dumbfork.asm	/^	envid = sys_exofork();$/;"	d
envid2env	kern/env.c	/^envid2env(envid_t envid, struct Env **env_store, bool checkperm)$/;"	f
envid_t	inc/env.h	/^typedef int32_t envid_t;$/;"	t
envid_t	obj/user/badsegment.asm	/^envid_t$/;"	l
envid_t	obj/user/breakpoint.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello2.asm	/^envid_t$/;"	l
envid_t	obj/user/divzero.asm	/^envid_t$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t dumbfork(void);$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t$/;"	l
envid_t	obj/user/evilhello.asm	/^envid_t$/;"	l
envid_t	obj/user/fairness.asm	/^envid_t$/;"	l
envid_t	obj/user/faultalloc.asm	/^envid_t$/;"	l
envid_t	obj/user/faultallocbad.asm	/^envid_t$/;"	l
envid_t	obj/user/faultbadhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultdie.asm	/^envid_t$/;"	l
envid_t	obj/user/faultevilhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultnostack.asm	/^envid_t$/;"	l
envid_t	obj/user/faultread.asm	/^envid_t$/;"	l
envid_t	obj/user/faultreadkernel.asm	/^envid_t$/;"	l
envid_t	obj/user/faultregs.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwrite.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwritekernel.asm	/^envid_t$/;"	l
envid_t	obj/user/forktree.asm	/^envid_t$/;"	l
envid_t	obj/user/hello.asm	/^envid_t$/;"	l
envid_t	obj/user/idle.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpong.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpongs.asm	/^envid_t$/;"	l
envid_t	obj/user/primes.asm	/^envid_t$/;"	l
envid_t	obj/user/sendpage.asm	/^envid_t$/;"	l
envid_t	obj/user/softint.asm	/^envid_t$/;"	l
envid_t	obj/user/spin.asm	/^envid_t$/;"	l
envid_t	obj/user/stresssched.asm	/^envid_t$/;"	l
envid_t	obj/user/testbss.asm	/^envid_t$/;"	l
envid_t	obj/user/yield.asm	/^envid_t$/;"	l
envs	kern/env.c	/^struct Env *envs = NULL;		\/\/ All environments$/;"	v	typeref:struct:Env
envs	obj/kern/kernel.asm	/^	envs = (struct Env*) boot_alloc(NENV * sizeof(struct Env));$/;"	d
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
err	obj/kern/kernel.asm	/^				err = -err;$/;"	d
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/badsegment.asm	/^				err = -err;$/;"	d
err	obj/user/badsegment.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/breakpoint.asm	/^				err = -err;$/;"	d
err	obj/user/breakpoint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello2.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/divzero.asm	/^				err = -err;$/;"	d
err	obj/user/divzero.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/dumbfork.asm	/^				err = -err;$/;"	d
err	obj/user/dumbfork.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/evilhello.asm	/^				err = -err;$/;"	d
err	obj/user/evilhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/fairness.asm	/^				err = -err;$/;"	d
err	obj/user/fairness.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultalloc.asm	/^				err = -err;$/;"	d
err	obj/user/faultalloc.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultallocbad.asm	/^				err = -err;$/;"	d
err	obj/user/faultallocbad.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultbadhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultbadhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultdie.asm	/^				err = -err;$/;"	d
err	obj/user/faultdie.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultevilhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultevilhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultnostack.asm	/^				err = -err;$/;"	d
err	obj/user/faultnostack.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultread.asm	/^				err = -err;$/;"	d
err	obj/user/faultread.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultreadkernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultreadkernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultregs.asm	/^				err = -err;$/;"	d
err	obj/user/faultregs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwrite.asm	/^				err = -err;$/;"	d
err	obj/user/faultwrite.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwritekernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultwritekernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/forktree.asm	/^				err = -err;$/;"	d
err	obj/user/forktree.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/hello.asm	/^				err = -err;$/;"	d
err	obj/user/hello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/idle.asm	/^				err = -err;$/;"	d
err	obj/user/idle.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpong.asm	/^				err = -err;$/;"	d
err	obj/user/pingpong.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpongs.asm	/^				err = -err;$/;"	d
err	obj/user/pingpongs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primes.asm	/^				err = -err;$/;"	d
err	obj/user/primes.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/sendpage.asm	/^				err = -err;$/;"	d
err	obj/user/sendpage.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/softint.asm	/^				err = -err;$/;"	d
err	obj/user/softint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spin.asm	/^				err = -err;$/;"	d
err	obj/user/spin.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/stresssched.asm	/^				err = -err;$/;"	d
err	obj/user/stresssched.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testbss.asm	/^				err = -err;$/;"	d
err	obj/user/testbss.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/yield.asm	/^				err = -err;$/;"	d
err	obj/user/yield.asm	/^			err = va_arg(ap, int);$/;"	d
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	file:
esp	user/faultregs.c	/^	uintptr_t esp;$/;"	m	struct:regs	file:
exit	lib/exit.c	/^exit(void)$/;"	f
ext16mem	obj/kern/kernel.asm	/^	ext16mem = nvram_read(NVRAM_EXT16LO) * 64;$/;"	d
extern	obj/kern/kernel.asm	/^	extern struct Segdesc gdt[];$/;"	t
extern	obj/kern/kernel.asm	/^extern struct spinlock kernel_lock;$/;"	t
extmem	obj/kern/kernel.asm	/^	extmem = nvram_read(NVRAM_EXTLO);$/;"	d
f0100000	obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4                   	.byte 0xe4$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
f0100015	obj/kern/kernel.asm	/^f0100015:	b8 00 d0 11 00       	mov    $0x11d000,%eax$/;"	l
f010001a	obj/kern/kernel.asm	/^f010001a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010001d	obj/kern/kernel.asm	/^f010001d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0100020	obj/kern/kernel.asm	/^f0100020:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0100025	obj/kern/kernel.asm	/^f0100025:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0100028	obj/kern/kernel.asm	/^f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eax$/;"	l
f010002d	obj/kern/kernel.asm	/^f010002d:	ff e0                	jmp    *%eax$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f <relocated>:$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0100034	obj/kern/kernel.asm	/^f0100034:	bc 00 d0 11 f0       	mov    $0xf011d000,%esp$/;"	l
f0100039	obj/kern/kernel.asm	/^f0100039:	e8 5c 00 00 00       	call   f010009a <i386_init>$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e <spin>:$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e:	eb fe                	jmp    f010003e <spin>$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040 <_panic>:$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040:	55                   	push   %ebp$/;"	l
f0100041	obj/kern/kernel.asm	/^f0100041:	89 e5                	mov    %esp,%ebp$/;"	l
f0100043	obj/kern/kernel.asm	/^f0100043:	56                   	push   %esi$/;"	l
f0100044	obj/kern/kernel.asm	/^f0100044:	53                   	push   %ebx$/;"	l
f0100045	obj/kern/kernel.asm	/^f0100045:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0100048	obj/kern/kernel.asm	/^f0100048:	83 3d 00 af 22 f0 00 	cmpl   $0x0,0xf022af00$/;"	l
f010004f	obj/kern/kernel.asm	/^f010004f:	75 3a                	jne    f010008b <_panic+0x4b>$/;"	l
f0100051	obj/kern/kernel.asm	/^f0100051:	89 35 00 af 22 f0    	mov    %esi,0xf022af00$/;"	l
f0100057	obj/kern/kernel.asm	/^f0100057:	fa                   	cli    $/;"	l
f0100058	obj/kern/kernel.asm	/^f0100058:	fc                   	cld    $/;"	l
f0100059	obj/kern/kernel.asm	/^f0100059:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f010005c	obj/kern/kernel.asm	/^f010005c:	e8 91 51 00 00       	call   f01051f2 <cpunum>$/;"	l
f0100061	obj/kern/kernel.asm	/^f0100061:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0100064	obj/kern/kernel.asm	/^f0100064:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100067	obj/kern/kernel.asm	/^f0100067:	50                   	push   %eax$/;"	l
f0100068	obj/kern/kernel.asm	/^f0100068:	68 80 58 10 f0       	push   $0xf0105880$/;"	l
f010006d	obj/kern/kernel.asm	/^f010006d:	e8 76 35 00 00       	call   f01035e8 <cprintf>$/;"	l
f0100072	obj/kern/kernel.asm	/^f0100072:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100075	obj/kern/kernel.asm	/^f0100075:	53                   	push   %ebx$/;"	l
f0100076	obj/kern/kernel.asm	/^f0100076:	56                   	push   %esi$/;"	l
f0100077	obj/kern/kernel.asm	/^f0100077:	e8 46 35 00 00       	call   f01035c2 <vcprintf>$/;"	l
f010007c	obj/kern/kernel.asm	/^f010007c:	c7 04 24 19 5c 10 f0 	movl   $0xf0105c19,(%esp)$/;"	l
f0100083	obj/kern/kernel.asm	/^f0100083:	e8 60 35 00 00       	call   f01035e8 <cprintf>$/;"	l
f0100088	obj/kern/kernel.asm	/^f0100088:	83 c4 10             	add    $0x10,%esp$/;"	l
f010008b	obj/kern/kernel.asm	/^f010008b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010008e	obj/kern/kernel.asm	/^f010008e:	6a 00                	push   $0x0$/;"	l
f0100090	obj/kern/kernel.asm	/^f0100090:	e8 58 08 00 00       	call   f01008ed <monitor>$/;"	l
f0100095	obj/kern/kernel.asm	/^f0100095:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100098	obj/kern/kernel.asm	/^f0100098:	eb f1                	jmp    f010008b <_panic+0x4b>$/;"	l
f010009a	obj/kern/kernel.asm	/^f010009a <i386_init>:$/;"	l
f010009a	obj/kern/kernel.asm	/^f010009a:	55                   	push   %ebp$/;"	l
f010009b	obj/kern/kernel.asm	/^f010009b:	89 e5                	mov    %esp,%ebp$/;"	l
f010009d	obj/kern/kernel.asm	/^f010009d:	53                   	push   %ebx$/;"	l
f010009e	obj/kern/kernel.asm	/^f010009e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01000a1	obj/kern/kernel.asm	/^f01000a1:	e8 6a 05 00 00       	call   f0100610 <cons_init>$/;"	l
f01000a6	obj/kern/kernel.asm	/^f01000a6:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01000a9	obj/kern/kernel.asm	/^f01000a9:	68 ac 1a 00 00       	push   $0x1aac$/;"	l
f01000ae	obj/kern/kernel.asm	/^f01000ae:	68 ec 58 10 f0       	push   $0xf01058ec$/;"	l
f01000b3	obj/kern/kernel.asm	/^f01000b3:	e8 30 35 00 00       	call   f01035e8 <cprintf>$/;"	l
f01000b8	obj/kern/kernel.asm	/^f01000b8:	e8 20 12 00 00       	call   f01012dd <mem_init>$/;"	l
f01000bd	obj/kern/kernel.asm	/^f01000bd:	e8 ac 2d 00 00       	call   f0102e6e <env_init>$/;"	l
f01000c2	obj/kern/kernel.asm	/^f01000c2:	e8 92 35 00 00       	call   f0103659 <trap_init>$/;"	l
f01000c7	obj/kern/kernel.asm	/^f01000c7:	e8 1c 4e 00 00       	call   f0104ee8 <mp_init>$/;"	l
f01000cc	obj/kern/kernel.asm	/^f01000cc:	e8 3c 51 00 00       	call   f010520d <lapic_init>$/;"	l
f01000d1	obj/kern/kernel.asm	/^f01000d1:	e8 39 34 00 00       	call   f010350f <pic_init>$/;"	l
f01000d6	obj/kern/kernel.asm	/^f01000d6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01000d9	obj/kern/kernel.asm	/^f01000d9:	83 3d 08 af 22 f0 07 	cmpl   $0x7,0xf022af08$/;"	l
f01000e0	obj/kern/kernel.asm	/^f01000e0:	77 16                	ja     f01000f8 <i386_init+0x5e>$/;"	l
f01000e2	obj/kern/kernel.asm	/^f01000e2:	68 00 70 00 00       	push   $0x7000$/;"	l
f01000e7	obj/kern/kernel.asm	/^f01000e7:	68 a4 58 10 f0       	push   $0xf01058a4$/;"	l
f01000ec	obj/kern/kernel.asm	/^f01000ec:	6a 4c                	push   $0x4c$/;"	l
f01000ee	obj/kern/kernel.asm	/^f01000ee:	68 07 59 10 f0       	push   $0xf0105907$/;"	l
f01000f3	obj/kern/kernel.asm	/^f01000f3:	e8 48 ff ff ff       	call   f0100040 <_panic>$/;"	l
f01000f8	obj/kern/kernel.asm	/^f01000f8:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01000fb	obj/kern/kernel.asm	/^f01000fb:	b8 4e 4e 10 f0       	mov    $0xf0104e4e,%eax$/;"	l
f0100100	obj/kern/kernel.asm	/^f0100100:	2d d4 4d 10 f0       	sub    $0xf0104dd4,%eax$/;"	l
f0100105	obj/kern/kernel.asm	/^f0100105:	50                   	push   %eax$/;"	l
f0100106	obj/kern/kernel.asm	/^f0100106:	68 d4 4d 10 f0       	push   $0xf0104dd4$/;"	l
f010010b	obj/kern/kernel.asm	/^f010010b:	68 00 70 00 f0       	push   $0xf0007000$/;"	l
f0100110	obj/kern/kernel.asm	/^f0100110:	e8 08 4b 00 00       	call   f0104c1d <memmove>$/;"	l
f0100115	obj/kern/kernel.asm	/^f0100115:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100118	obj/kern/kernel.asm	/^f0100118:	bb 20 b0 22 f0       	mov    $0xf022b020,%ebx$/;"	l
f010011d	obj/kern/kernel.asm	/^f010011d:	eb 4d                	jmp    f010016c <i386_init+0xd2>$/;"	l
f010011f	obj/kern/kernel.asm	/^f010011f:	e8 ce 50 00 00       	call   f01051f2 <cpunum>$/;"	l
f0100124	obj/kern/kernel.asm	/^f0100124:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0100127	obj/kern/kernel.asm	/^f0100127:	05 20 b0 22 f0       	add    $0xf022b020,%eax$/;"	l
f010012c	obj/kern/kernel.asm	/^f010012c:	39 c3                	cmp    %eax,%ebx$/;"	l
f010012e	obj/kern/kernel.asm	/^f010012e:	74 39                	je     f0100169 <i386_init+0xcf>$/;"	l
f0100130	obj/kern/kernel.asm	/^f0100130:	89 d8                	mov    %ebx,%eax$/;"	l
f0100132	obj/kern/kernel.asm	/^f0100132:	2d 20 b0 22 f0       	sub    $0xf022b020,%eax$/;"	l
f0100137	obj/kern/kernel.asm	/^f0100137:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f010013a	obj/kern/kernel.asm	/^f010013a:	69 c0 35 c2 72 4f    	imul   $0x4f72c235,%eax,%eax$/;"	l
f0100140	obj/kern/kernel.asm	/^f0100140:	c1 e0 0f             	shl    $0xf,%eax$/;"	l
f0100143	obj/kern/kernel.asm	/^f0100143:	05 00 40 23 f0       	add    $0xf0234000,%eax$/;"	l
f0100148	obj/kern/kernel.asm	/^f0100148:	a3 04 af 22 f0       	mov    %eax,0xf022af04$/;"	l
f010014d	obj/kern/kernel.asm	/^f010014d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100150	obj/kern/kernel.asm	/^f0100150:	68 00 70 00 00       	push   $0x7000$/;"	l
f0100155	obj/kern/kernel.asm	/^f0100155:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100158	obj/kern/kernel.asm	/^f0100158:	50                   	push   %eax$/;"	l
f0100159	obj/kern/kernel.asm	/^f0100159:	e8 fd 51 00 00       	call   f010535b <lapic_startap>$/;"	l
f010015e	obj/kern/kernel.asm	/^f010015e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100161	obj/kern/kernel.asm	/^f0100161:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0100164	obj/kern/kernel.asm	/^f0100164:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0100167	obj/kern/kernel.asm	/^f0100167:	75 f8                	jne    f0100161 <i386_init+0xc7>$/;"	l
f0100169	obj/kern/kernel.asm	/^f0100169:	83 c3 74             	add    $0x74,%ebx$/;"	l
f010016c	obj/kern/kernel.asm	/^f010016c:	6b 05 c4 b3 22 f0 74 	imul   $0x74,0xf022b3c4,%eax$/;"	l
f0100173	obj/kern/kernel.asm	/^f0100173:	05 20 b0 22 f0       	add    $0xf022b020,%eax$/;"	l
f0100178	obj/kern/kernel.asm	/^f0100178:	39 c3                	cmp    %eax,%ebx$/;"	l
f010017a	obj/kern/kernel.asm	/^f010017a:	72 a3                	jb     f010011f <i386_init+0x85>$/;"	l
f010017c	obj/kern/kernel.asm	/^f010017c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010017f	obj/kern/kernel.asm	/^f010017f:	6a 00                	push   $0x0$/;"	l
f0100181	obj/kern/kernel.asm	/^f0100181:	68 c8 0b 22 f0       	push   $0xf0220bc8$/;"	l
f0100186	obj/kern/kernel.asm	/^f0100186:	e8 a9 2e 00 00       	call   f0103034 <env_create>$/;"	l
f010018b	obj/kern/kernel.asm	/^f010018b:	e8 bb 3d 00 00       	call   f0103f4b <sched_yield>$/;"	l
f0100190	obj/kern/kernel.asm	/^f0100190 <mp_main>:$/;"	l
f0100190	obj/kern/kernel.asm	/^f0100190:	55                   	push   %ebp$/;"	l
f0100191	obj/kern/kernel.asm	/^f0100191:	89 e5                	mov    %esp,%ebp$/;"	l
f0100193	obj/kern/kernel.asm	/^f0100193:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100196	obj/kern/kernel.asm	/^f0100196:	a1 0c af 22 f0       	mov    0xf022af0c,%eax$/;"	l
f010019b	obj/kern/kernel.asm	/^f010019b:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01001a0	obj/kern/kernel.asm	/^f01001a0:	77 12                	ja     f01001b4 <mp_main+0x24>$/;"	l
f01001a2	obj/kern/kernel.asm	/^f01001a2:	50                   	push   %eax$/;"	l
f01001a3	obj/kern/kernel.asm	/^f01001a3:	68 c8 58 10 f0       	push   $0xf01058c8$/;"	l
f01001a8	obj/kern/kernel.asm	/^f01001a8:	6a 63                	push   $0x63$/;"	l
f01001aa	obj/kern/kernel.asm	/^f01001aa:	68 07 59 10 f0       	push   $0xf0105907$/;"	l
f01001af	obj/kern/kernel.asm	/^f01001af:	e8 8c fe ff ff       	call   f0100040 <_panic>$/;"	l
f01001b4	obj/kern/kernel.asm	/^f01001b4:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01001b9	obj/kern/kernel.asm	/^f01001b9:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01001bc	obj/kern/kernel.asm	/^f01001bc:	e8 31 50 00 00       	call   f01051f2 <cpunum>$/;"	l
f01001c1	obj/kern/kernel.asm	/^f01001c1:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01001c4	obj/kern/kernel.asm	/^f01001c4:	50                   	push   %eax$/;"	l
f01001c5	obj/kern/kernel.asm	/^f01001c5:	68 13 59 10 f0       	push   $0xf0105913$/;"	l
f01001ca	obj/kern/kernel.asm	/^f01001ca:	e8 19 34 00 00       	call   f01035e8 <cprintf>$/;"	l
f01001cf	obj/kern/kernel.asm	/^f01001cf:	e8 39 50 00 00       	call   f010520d <lapic_init>$/;"	l
f01001d4	obj/kern/kernel.asm	/^f01001d4:	e8 65 2c 00 00       	call   f0102e3e <env_init_percpu>$/;"	l
f01001d9	obj/kern/kernel.asm	/^f01001d9:	e8 1e 34 00 00       	call   f01035fc <trap_init_percpu>$/;"	l
f01001de	obj/kern/kernel.asm	/^f01001de:	e8 0f 50 00 00       	call   f01051f2 <cpunum>$/;"	l
f01001e3	obj/kern/kernel.asm	/^f01001e3:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f01001e6	obj/kern/kernel.asm	/^f01001e6:	81 c2 20 b0 22 f0    	add    $0xf022b020,%edx$/;"	l
f01001ec	obj/kern/kernel.asm	/^f01001ec:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01001f1	obj/kern/kernel.asm	/^f01001f1:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f01001f5	obj/kern/kernel.asm	/^f01001f5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01001f8	obj/kern/kernel.asm	/^f01001f8:	eb fe                	jmp    f01001f8 <mp_main+0x68>$/;"	l
f01001fa	obj/kern/kernel.asm	/^f01001fa <_warn>:$/;"	l
f01001fa	obj/kern/kernel.asm	/^f01001fa:	55                   	push   %ebp$/;"	l
f01001fb	obj/kern/kernel.asm	/^f01001fb:	89 e5                	mov    %esp,%ebp$/;"	l
f01001fd	obj/kern/kernel.asm	/^f01001fd:	53                   	push   %ebx$/;"	l
f01001fe	obj/kern/kernel.asm	/^f01001fe:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100201	obj/kern/kernel.asm	/^f0100201:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f0100204	obj/kern/kernel.asm	/^f0100204:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0100207	obj/kern/kernel.asm	/^f0100207:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010020a	obj/kern/kernel.asm	/^f010020a:	68 29 59 10 f0       	push   $0xf0105929$/;"	l
f010020f	obj/kern/kernel.asm	/^f010020f:	e8 d4 33 00 00       	call   f01035e8 <cprintf>$/;"	l
f0100214	obj/kern/kernel.asm	/^f0100214:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100217	obj/kern/kernel.asm	/^f0100217:	53                   	push   %ebx$/;"	l
f0100218	obj/kern/kernel.asm	/^f0100218:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f010021b	obj/kern/kernel.asm	/^f010021b:	e8 a2 33 00 00       	call   f01035c2 <vcprintf>$/;"	l
f0100220	obj/kern/kernel.asm	/^f0100220:	c7 04 24 19 5c 10 f0 	movl   $0xf0105c19,(%esp)$/;"	l
f0100227	obj/kern/kernel.asm	/^f0100227:	e8 bc 33 00 00       	call   f01035e8 <cprintf>$/;"	l
f010022c	obj/kern/kernel.asm	/^f010022c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010022f	obj/kern/kernel.asm	/^f010022f:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0100232	obj/kern/kernel.asm	/^f0100232:	c9                   	leave  $/;"	l
f0100233	obj/kern/kernel.asm	/^f0100233:	c3                   	ret    $/;"	l
f0100234	obj/kern/kernel.asm	/^f0100234 <serial_proc_data>:$/;"	l
f0100234	obj/kern/kernel.asm	/^f0100234:	55                   	push   %ebp$/;"	l
f0100235	obj/kern/kernel.asm	/^f0100235:	89 e5                	mov    %esp,%ebp$/;"	l
f0100237	obj/kern/kernel.asm	/^f0100237:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f010023c	obj/kern/kernel.asm	/^f010023c:	ec                   	in     (%dx),%al$/;"	l
f010023d	obj/kern/kernel.asm	/^f010023d:	a8 01                	test   $0x1,%al$/;"	l
f010023f	obj/kern/kernel.asm	/^f010023f:	74 0b                	je     f010024c <serial_proc_data+0x18>$/;"	l
f0100241	obj/kern/kernel.asm	/^f0100241:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f0100246	obj/kern/kernel.asm	/^f0100246:	ec                   	in     (%dx),%al$/;"	l
f0100247	obj/kern/kernel.asm	/^f0100247:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010024a	obj/kern/kernel.asm	/^f010024a:	eb 05                	jmp    f0100251 <serial_proc_data+0x1d>$/;"	l
f010024c	obj/kern/kernel.asm	/^f010024c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100251	obj/kern/kernel.asm	/^f0100251:	5d                   	pop    %ebp$/;"	l
f0100252	obj/kern/kernel.asm	/^f0100252:	c3                   	ret    $/;"	l
f0100253	obj/kern/kernel.asm	/^f0100253 <cons_intr>:$/;"	l
f0100253	obj/kern/kernel.asm	/^f0100253:	55                   	push   %ebp$/;"	l
f0100254	obj/kern/kernel.asm	/^f0100254:	89 e5                	mov    %esp,%ebp$/;"	l
f0100256	obj/kern/kernel.asm	/^f0100256:	53                   	push   %ebx$/;"	l
f0100257	obj/kern/kernel.asm	/^f0100257:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010025a	obj/kern/kernel.asm	/^f010025a:	89 c3                	mov    %eax,%ebx$/;"	l
f010025c	obj/kern/kernel.asm	/^f010025c:	eb 2b                	jmp    f0100289 <cons_intr+0x36>$/;"	l
f010025e	obj/kern/kernel.asm	/^f010025e:	85 c0                	test   %eax,%eax$/;"	l
f0100260	obj/kern/kernel.asm	/^f0100260:	74 27                	je     f0100289 <cons_intr+0x36>$/;"	l
f0100262	obj/kern/kernel.asm	/^f0100262:	8b 0d 24 a2 22 f0    	mov    0xf022a224,%ecx$/;"	l
f0100268	obj/kern/kernel.asm	/^f0100268:	8d 51 01             	lea    0x1(%ecx),%edx$/;"	l
f010026b	obj/kern/kernel.asm	/^f010026b:	89 15 24 a2 22 f0    	mov    %edx,0xf022a224$/;"	l
f0100271	obj/kern/kernel.asm	/^f0100271:	88 81 20 a0 22 f0    	mov    %al,-0xfdd5fe0(%ecx)$/;"	l
f0100277	obj/kern/kernel.asm	/^f0100277:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f010027d	obj/kern/kernel.asm	/^f010027d:	75 0a                	jne    f0100289 <cons_intr+0x36>$/;"	l
f010027f	obj/kern/kernel.asm	/^f010027f:	c7 05 24 a2 22 f0 00 	movl   $0x0,0xf022a224$/;"	l
f0100286	obj/kern/kernel.asm	/^f0100286:	00 00 00 $/;"	l
f0100289	obj/kern/kernel.asm	/^f0100289:	ff d3                	call   *%ebx$/;"	l
f010028b	obj/kern/kernel.asm	/^f010028b:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f010028e	obj/kern/kernel.asm	/^f010028e:	75 ce                	jne    f010025e <cons_intr+0xb>$/;"	l
f0100290	obj/kern/kernel.asm	/^f0100290:	83 c4 04             	add    $0x4,%esp$/;"	l
f0100293	obj/kern/kernel.asm	/^f0100293:	5b                   	pop    %ebx$/;"	l
f0100294	obj/kern/kernel.asm	/^f0100294:	5d                   	pop    %ebp$/;"	l
f0100295	obj/kern/kernel.asm	/^f0100295:	c3                   	ret    $/;"	l
f0100296	obj/kern/kernel.asm	/^f0100296 <kbd_proc_data>:$/;"	l
f0100296	obj/kern/kernel.asm	/^f0100296:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
f010029b	obj/kern/kernel.asm	/^f010029b:	ec                   	in     (%dx),%al$/;"	l
f010029c	obj/kern/kernel.asm	/^f010029c:	a8 01                	test   $0x1,%al$/;"	l
f010029e	obj/kern/kernel.asm	/^f010029e:	0f 84 f8 00 00 00    	je     f010039c <kbd_proc_data+0x106>$/;"	l
f01002a4	obj/kern/kernel.asm	/^f01002a4:	a8 20                	test   $0x20,%al$/;"	l
f01002a6	obj/kern/kernel.asm	/^f01002a6:	0f 85 f6 00 00 00    	jne    f01003a2 <kbd_proc_data+0x10c>$/;"	l
f01002ac	obj/kern/kernel.asm	/^f01002ac:	ba 60 00 00 00       	mov    $0x60,%edx$/;"	l
f01002b1	obj/kern/kernel.asm	/^f01002b1:	ec                   	in     (%dx),%al$/;"	l
f01002b2	obj/kern/kernel.asm	/^f01002b2:	89 c2                	mov    %eax,%edx$/;"	l
f01002b4	obj/kern/kernel.asm	/^f01002b4:	3c e0                	cmp    $0xe0,%al$/;"	l
f01002b6	obj/kern/kernel.asm	/^f01002b6:	75 0d                	jne    f01002c5 <kbd_proc_data+0x2f>$/;"	l
f01002b8	obj/kern/kernel.asm	/^f01002b8:	83 0d 00 a0 22 f0 40 	orl    $0x40,0xf022a000$/;"	l
f01002bf	obj/kern/kernel.asm	/^f01002bf:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01002c4	obj/kern/kernel.asm	/^f01002c4:	c3                   	ret    $/;"	l
f01002c5	obj/kern/kernel.asm	/^f01002c5:	55                   	push   %ebp$/;"	l
f01002c6	obj/kern/kernel.asm	/^f01002c6:	89 e5                	mov    %esp,%ebp$/;"	l
f01002c8	obj/kern/kernel.asm	/^f01002c8:	53                   	push   %ebx$/;"	l
f01002c9	obj/kern/kernel.asm	/^f01002c9:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01002cc	obj/kern/kernel.asm	/^f01002cc:	84 c0                	test   %al,%al$/;"	l
f01002ce	obj/kern/kernel.asm	/^f01002ce:	79 36                	jns    f0100306 <kbd_proc_data+0x70>$/;"	l
f01002d0	obj/kern/kernel.asm	/^f01002d0:	8b 0d 00 a0 22 f0    	mov    0xf022a000,%ecx$/;"	l
f01002d6	obj/kern/kernel.asm	/^f01002d6:	89 cb                	mov    %ecx,%ebx$/;"	l
f01002d8	obj/kern/kernel.asm	/^f01002d8:	83 e3 40             	and    $0x40,%ebx$/;"	l
f01002db	obj/kern/kernel.asm	/^f01002db:	83 e0 7f             	and    $0x7f,%eax$/;"	l
f01002de	obj/kern/kernel.asm	/^f01002de:	85 db                	test   %ebx,%ebx$/;"	l
f01002e0	obj/kern/kernel.asm	/^f01002e0:	0f 44 d0             	cmove  %eax,%edx$/;"	l
f01002e3	obj/kern/kernel.asm	/^f01002e3:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f01002e6	obj/kern/kernel.asm	/^f01002e6:	0f b6 82 a0 5a 10 f0 	movzbl -0xfefa560(%edx),%eax$/;"	l
f01002ed	obj/kern/kernel.asm	/^f01002ed:	83 c8 40             	or     $0x40,%eax$/;"	l
f01002f0	obj/kern/kernel.asm	/^f01002f0:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01002f3	obj/kern/kernel.asm	/^f01002f3:	f7 d0                	not    %eax$/;"	l
f01002f5	obj/kern/kernel.asm	/^f01002f5:	21 c8                	and    %ecx,%eax$/;"	l
f01002f7	obj/kern/kernel.asm	/^f01002f7:	a3 00 a0 22 f0       	mov    %eax,0xf022a000$/;"	l
f01002fc	obj/kern/kernel.asm	/^f01002fc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100301	obj/kern/kernel.asm	/^f0100301:	e9 a4 00 00 00       	jmp    f01003aa <kbd_proc_data+0x114>$/;"	l
f0100306	obj/kern/kernel.asm	/^f0100306:	8b 0d 00 a0 22 f0    	mov    0xf022a000,%ecx$/;"	l
f010030c	obj/kern/kernel.asm	/^f010030c:	f6 c1 40             	test   $0x40,%cl$/;"	l
f010030f	obj/kern/kernel.asm	/^f010030f:	74 0e                	je     f010031f <kbd_proc_data+0x89>$/;"	l
f0100311	obj/kern/kernel.asm	/^f0100311:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f0100314	obj/kern/kernel.asm	/^f0100314:	89 c2                	mov    %eax,%edx$/;"	l
f0100316	obj/kern/kernel.asm	/^f0100316:	83 e1 bf             	and    $0xffffffbf,%ecx$/;"	l
f0100319	obj/kern/kernel.asm	/^f0100319:	89 0d 00 a0 22 f0    	mov    %ecx,0xf022a000$/;"	l
f010031f	obj/kern/kernel.asm	/^f010031f:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100322	obj/kern/kernel.asm	/^f0100322:	0f b6 82 a0 5a 10 f0 	movzbl -0xfefa560(%edx),%eax$/;"	l
f0100329	obj/kern/kernel.asm	/^f0100329:	0b 05 00 a0 22 f0    	or     0xf022a000,%eax$/;"	l
f010032f	obj/kern/kernel.asm	/^f010032f:	0f b6 8a a0 59 10 f0 	movzbl -0xfefa660(%edx),%ecx$/;"	l
f0100336	obj/kern/kernel.asm	/^f0100336:	31 c8                	xor    %ecx,%eax$/;"	l
f0100338	obj/kern/kernel.asm	/^f0100338:	a3 00 a0 22 f0       	mov    %eax,0xf022a000$/;"	l
f010033d	obj/kern/kernel.asm	/^f010033d:	89 c1                	mov    %eax,%ecx$/;"	l
f010033f	obj/kern/kernel.asm	/^f010033f:	83 e1 03             	and    $0x3,%ecx$/;"	l
f0100342	obj/kern/kernel.asm	/^f0100342:	8b 0c 8d 80 59 10 f0 	mov    -0xfefa680(,%ecx,4),%ecx$/;"	l
f0100349	obj/kern/kernel.asm	/^f0100349:	0f b6 14 11          	movzbl (%ecx,%edx,1),%edx$/;"	l
f010034d	obj/kern/kernel.asm	/^f010034d:	0f b6 da             	movzbl %dl,%ebx$/;"	l
f0100350	obj/kern/kernel.asm	/^f0100350:	a8 08                	test   $0x8,%al$/;"	l
f0100352	obj/kern/kernel.asm	/^f0100352:	74 1b                	je     f010036f <kbd_proc_data+0xd9>$/;"	l
f0100354	obj/kern/kernel.asm	/^f0100354:	89 da                	mov    %ebx,%edx$/;"	l
f0100356	obj/kern/kernel.asm	/^f0100356:	8d 4b 9f             	lea    -0x61(%ebx),%ecx$/;"	l
f0100359	obj/kern/kernel.asm	/^f0100359:	83 f9 19             	cmp    $0x19,%ecx$/;"	l
f010035c	obj/kern/kernel.asm	/^f010035c:	77 05                	ja     f0100363 <kbd_proc_data+0xcd>$/;"	l
f010035e	obj/kern/kernel.asm	/^f010035e:	83 eb 20             	sub    $0x20,%ebx$/;"	l
f0100361	obj/kern/kernel.asm	/^f0100361:	eb 0c                	jmp    f010036f <kbd_proc_data+0xd9>$/;"	l
f0100363	obj/kern/kernel.asm	/^f0100363:	83 ea 41             	sub    $0x41,%edx$/;"	l
f0100366	obj/kern/kernel.asm	/^f0100366:	8d 4b 20             	lea    0x20(%ebx),%ecx$/;"	l
f0100369	obj/kern/kernel.asm	/^f0100369:	83 fa 19             	cmp    $0x19,%edx$/;"	l
f010036c	obj/kern/kernel.asm	/^f010036c:	0f 46 d9             	cmovbe %ecx,%ebx$/;"	l
f010036f	obj/kern/kernel.asm	/^f010036f:	f7 d0                	not    %eax$/;"	l
f0100371	obj/kern/kernel.asm	/^f0100371:	a8 06                	test   $0x6,%al$/;"	l
f0100373	obj/kern/kernel.asm	/^f0100373:	75 33                	jne    f01003a8 <kbd_proc_data+0x112>$/;"	l
f0100375	obj/kern/kernel.asm	/^f0100375:	81 fb e9 00 00 00    	cmp    $0xe9,%ebx$/;"	l
f010037b	obj/kern/kernel.asm	/^f010037b:	75 2b                	jne    f01003a8 <kbd_proc_data+0x112>$/;"	l
f010037d	obj/kern/kernel.asm	/^f010037d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100380	obj/kern/kernel.asm	/^f0100380:	68 43 59 10 f0       	push   $0xf0105943$/;"	l
f0100385	obj/kern/kernel.asm	/^f0100385:	e8 5e 32 00 00       	call   f01035e8 <cprintf>$/;"	l
f010038a	obj/kern/kernel.asm	/^f010038a:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
f010038f	obj/kern/kernel.asm	/^f010038f:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0100394	obj/kern/kernel.asm	/^f0100394:	ee                   	out    %al,(%dx)$/;"	l
f0100395	obj/kern/kernel.asm	/^f0100395:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100398	obj/kern/kernel.asm	/^f0100398:	89 d8                	mov    %ebx,%eax$/;"	l
f010039a	obj/kern/kernel.asm	/^f010039a:	eb 0e                	jmp    f01003aa <kbd_proc_data+0x114>$/;"	l
f010039c	obj/kern/kernel.asm	/^f010039c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01003a1	obj/kern/kernel.asm	/^f01003a1:	c3                   	ret    $/;"	l
f01003a2	obj/kern/kernel.asm	/^f01003a2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01003a7	obj/kern/kernel.asm	/^f01003a7:	c3                   	ret    $/;"	l
f01003a8	obj/kern/kernel.asm	/^f01003a8:	89 d8                	mov    %ebx,%eax$/;"	l
f01003aa	obj/kern/kernel.asm	/^f01003aa:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01003ad	obj/kern/kernel.asm	/^f01003ad:	c9                   	leave  $/;"	l
f01003ae	obj/kern/kernel.asm	/^f01003ae:	c3                   	ret    $/;"	l
f01003af	obj/kern/kernel.asm	/^f01003af <cons_putc>:$/;"	l
f01003af	obj/kern/kernel.asm	/^f01003af:	55                   	push   %ebp$/;"	l
f01003b0	obj/kern/kernel.asm	/^f01003b0:	89 e5                	mov    %esp,%ebp$/;"	l
f01003b2	obj/kern/kernel.asm	/^f01003b2:	57                   	push   %edi$/;"	l
f01003b3	obj/kern/kernel.asm	/^f01003b3:	56                   	push   %esi$/;"	l
f01003b4	obj/kern/kernel.asm	/^f01003b4:	53                   	push   %ebx$/;"	l
f01003b5	obj/kern/kernel.asm	/^f01003b5:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01003b8	obj/kern/kernel.asm	/^f01003b8:	89 c7                	mov    %eax,%edi$/;"	l
f01003ba	obj/kern/kernel.asm	/^f01003ba:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01003bf	obj/kern/kernel.asm	/^f01003bf:	be fd 03 00 00       	mov    $0x3fd,%esi$/;"	l
f01003c4	obj/kern/kernel.asm	/^f01003c4:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f01003c9	obj/kern/kernel.asm	/^f01003c9:	eb 09                	jmp    f01003d4 <cons_putc+0x25>$/;"	l
f01003cb	obj/kern/kernel.asm	/^f01003cb:	89 ca                	mov    %ecx,%edx$/;"	l
f01003cd	obj/kern/kernel.asm	/^f01003cd:	ec                   	in     (%dx),%al$/;"	l
f01003ce	obj/kern/kernel.asm	/^f01003ce:	ec                   	in     (%dx),%al$/;"	l
f01003cf	obj/kern/kernel.asm	/^f01003cf:	ec                   	in     (%dx),%al$/;"	l
f01003d0	obj/kern/kernel.asm	/^f01003d0:	ec                   	in     (%dx),%al$/;"	l
f01003d1	obj/kern/kernel.asm	/^f01003d1:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01003d4	obj/kern/kernel.asm	/^f01003d4:	89 f2                	mov    %esi,%edx$/;"	l
f01003d6	obj/kern/kernel.asm	/^f01003d6:	ec                   	in     (%dx),%al$/;"	l
f01003d7	obj/kern/kernel.asm	/^f01003d7:	a8 20                	test   $0x20,%al$/;"	l
f01003d9	obj/kern/kernel.asm	/^f01003d9:	75 08                	jne    f01003e3 <cons_putc+0x34>$/;"	l
f01003db	obj/kern/kernel.asm	/^f01003db:	81 fb ff 31 00 00    	cmp    $0x31ff,%ebx$/;"	l
f01003e1	obj/kern/kernel.asm	/^f01003e1:	7e e8                	jle    f01003cb <cons_putc+0x1c>$/;"	l
f01003e3	obj/kern/kernel.asm	/^f01003e3:	89 f8                	mov    %edi,%eax$/;"	l
f01003e5	obj/kern/kernel.asm	/^f01003e5:	88 45 e7             	mov    %al,-0x19(%ebp)$/;"	l
f01003e8	obj/kern/kernel.asm	/^f01003e8:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f01003ed	obj/kern/kernel.asm	/^f01003ed:	ee                   	out    %al,(%dx)$/;"	l
f01003ee	obj/kern/kernel.asm	/^f01003ee:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01003f3	obj/kern/kernel.asm	/^f01003f3:	be 79 03 00 00       	mov    $0x379,%esi$/;"	l
f01003f8	obj/kern/kernel.asm	/^f01003f8:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f01003fd	obj/kern/kernel.asm	/^f01003fd:	eb 09                	jmp    f0100408 <cons_putc+0x59>$/;"	l
f01003ff	obj/kern/kernel.asm	/^f01003ff:	89 ca                	mov    %ecx,%edx$/;"	l
f0100401	obj/kern/kernel.asm	/^f0100401:	ec                   	in     (%dx),%al$/;"	l
f0100402	obj/kern/kernel.asm	/^f0100402:	ec                   	in     (%dx),%al$/;"	l
f0100403	obj/kern/kernel.asm	/^f0100403:	ec                   	in     (%dx),%al$/;"	l
f0100404	obj/kern/kernel.asm	/^f0100404:	ec                   	in     (%dx),%al$/;"	l
f0100405	obj/kern/kernel.asm	/^f0100405:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100408	obj/kern/kernel.asm	/^f0100408:	89 f2                	mov    %esi,%edx$/;"	l
f010040a	obj/kern/kernel.asm	/^f010040a:	ec                   	in     (%dx),%al$/;"	l
f010040b	obj/kern/kernel.asm	/^f010040b:	81 fb ff 31 00 00    	cmp    $0x31ff,%ebx$/;"	l
f0100411	obj/kern/kernel.asm	/^f0100411:	7f 04                	jg     f0100417 <cons_putc+0x68>$/;"	l
f0100413	obj/kern/kernel.asm	/^f0100413:	84 c0                	test   %al,%al$/;"	l
f0100415	obj/kern/kernel.asm	/^f0100415:	79 e8                	jns    f01003ff <cons_putc+0x50>$/;"	l
f0100417	obj/kern/kernel.asm	/^f0100417:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
f010041c	obj/kern/kernel.asm	/^f010041c:	0f b6 45 e7          	movzbl -0x19(%ebp),%eax$/;"	l
f0100420	obj/kern/kernel.asm	/^f0100420:	ee                   	out    %al,(%dx)$/;"	l
f0100421	obj/kern/kernel.asm	/^f0100421:	ba 7a 03 00 00       	mov    $0x37a,%edx$/;"	l
f0100426	obj/kern/kernel.asm	/^f0100426:	b8 0d 00 00 00       	mov    $0xd,%eax$/;"	l
f010042b	obj/kern/kernel.asm	/^f010042b:	ee                   	out    %al,(%dx)$/;"	l
f010042c	obj/kern/kernel.asm	/^f010042c:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f0100431	obj/kern/kernel.asm	/^f0100431:	ee                   	out    %al,(%dx)$/;"	l
f0100432	obj/kern/kernel.asm	/^f0100432:	89 fa                	mov    %edi,%edx$/;"	l
f0100434	obj/kern/kernel.asm	/^f0100434:	81 e2 00 ff ff ff    	and    $0xffffff00,%edx$/;"	l
f010043a	obj/kern/kernel.asm	/^f010043a:	89 f8                	mov    %edi,%eax$/;"	l
f010043c	obj/kern/kernel.asm	/^f010043c:	80 cc 07             	or     $0x7,%ah$/;"	l
f010043f	obj/kern/kernel.asm	/^f010043f:	85 d2                	test   %edx,%edx$/;"	l
f0100441	obj/kern/kernel.asm	/^f0100441:	0f 44 f8             	cmove  %eax,%edi$/;"	l
f0100444	obj/kern/kernel.asm	/^f0100444:	89 f8                	mov    %edi,%eax$/;"	l
f0100446	obj/kern/kernel.asm	/^f0100446:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100449	obj/kern/kernel.asm	/^f0100449:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f010044c	obj/kern/kernel.asm	/^f010044c:	74 74                	je     f01004c2 <cons_putc+0x113>$/;"	l
f010044e	obj/kern/kernel.asm	/^f010044e:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0100451	obj/kern/kernel.asm	/^f0100451:	7f 0a                	jg     f010045d <cons_putc+0xae>$/;"	l
f0100453	obj/kern/kernel.asm	/^f0100453:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0100456	obj/kern/kernel.asm	/^f0100456:	74 14                	je     f010046c <cons_putc+0xbd>$/;"	l
f0100458	obj/kern/kernel.asm	/^f0100458:	e9 99 00 00 00       	jmp    f01004f6 <cons_putc+0x147>$/;"	l
f010045d	obj/kern/kernel.asm	/^f010045d:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f0100460	obj/kern/kernel.asm	/^f0100460:	74 3a                	je     f010049c <cons_putc+0xed>$/;"	l
f0100462	obj/kern/kernel.asm	/^f0100462:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f0100465	obj/kern/kernel.asm	/^f0100465:	74 3d                	je     f01004a4 <cons_putc+0xf5>$/;"	l
f0100467	obj/kern/kernel.asm	/^f0100467:	e9 8a 00 00 00       	jmp    f01004f6 <cons_putc+0x147>$/;"	l
f010046c	obj/kern/kernel.asm	/^f010046c:	0f b7 05 28 a2 22 f0 	movzwl 0xf022a228,%eax$/;"	l
f0100473	obj/kern/kernel.asm	/^f0100473:	66 85 c0             	test   %ax,%ax$/;"	l
f0100476	obj/kern/kernel.asm	/^f0100476:	0f 84 e6 00 00 00    	je     f0100562 <cons_putc+0x1b3>$/;"	l
f010047c	obj/kern/kernel.asm	/^f010047c:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010047f	obj/kern/kernel.asm	/^f010047f:	66 a3 28 a2 22 f0    	mov    %ax,0xf022a228$/;"	l
f0100485	obj/kern/kernel.asm	/^f0100485:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0100488	obj/kern/kernel.asm	/^f0100488:	66 81 e7 00 ff       	and    $0xff00,%di$/;"	l
f010048d	obj/kern/kernel.asm	/^f010048d:	83 cf 20             	or     $0x20,%edi$/;"	l
f0100490	obj/kern/kernel.asm	/^f0100490:	8b 15 2c a2 22 f0    	mov    0xf022a22c,%edx$/;"	l
f0100496	obj/kern/kernel.asm	/^f0100496:	66 89 3c 42          	mov    %di,(%edx,%eax,2)$/;"	l
f010049a	obj/kern/kernel.asm	/^f010049a:	eb 78                	jmp    f0100514 <cons_putc+0x165>$/;"	l
f010049c	obj/kern/kernel.asm	/^f010049c:	66 83 05 28 a2 22 f0 	addw   $0x50,0xf022a228$/;"	l
f01004a3	obj/kern/kernel.asm	/^f01004a3:	50 $/;"	l
f01004a4	obj/kern/kernel.asm	/^f01004a4:	0f b7 05 28 a2 22 f0 	movzwl 0xf022a228,%eax$/;"	l
f01004ab	obj/kern/kernel.asm	/^f01004ab:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
f01004b1	obj/kern/kernel.asm	/^f01004b1:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f01004b4	obj/kern/kernel.asm	/^f01004b4:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f01004b7	obj/kern/kernel.asm	/^f01004b7:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f01004ba	obj/kern/kernel.asm	/^f01004ba:	66 a3 28 a2 22 f0    	mov    %ax,0xf022a228$/;"	l
f01004c0	obj/kern/kernel.asm	/^f01004c0:	eb 52                	jmp    f0100514 <cons_putc+0x165>$/;"	l
f01004c2	obj/kern/kernel.asm	/^f01004c2:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01004c7	obj/kern/kernel.asm	/^f01004c7:	e8 e3 fe ff ff       	call   f01003af <cons_putc>$/;"	l
f01004cc	obj/kern/kernel.asm	/^f01004cc:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01004d1	obj/kern/kernel.asm	/^f01004d1:	e8 d9 fe ff ff       	call   f01003af <cons_putc>$/;"	l
f01004d6	obj/kern/kernel.asm	/^f01004d6:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01004db	obj/kern/kernel.asm	/^f01004db:	e8 cf fe ff ff       	call   f01003af <cons_putc>$/;"	l
f01004e0	obj/kern/kernel.asm	/^f01004e0:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01004e5	obj/kern/kernel.asm	/^f01004e5:	e8 c5 fe ff ff       	call   f01003af <cons_putc>$/;"	l
f01004ea	obj/kern/kernel.asm	/^f01004ea:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01004ef	obj/kern/kernel.asm	/^f01004ef:	e8 bb fe ff ff       	call   f01003af <cons_putc>$/;"	l
f01004f4	obj/kern/kernel.asm	/^f01004f4:	eb 1e                	jmp    f0100514 <cons_putc+0x165>$/;"	l
f01004f6	obj/kern/kernel.asm	/^f01004f6:	0f b7 05 28 a2 22 f0 	movzwl 0xf022a228,%eax$/;"	l
f01004fd	obj/kern/kernel.asm	/^f01004fd:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0100500	obj/kern/kernel.asm	/^f0100500:	66 89 15 28 a2 22 f0 	mov    %dx,0xf022a228$/;"	l
f0100507	obj/kern/kernel.asm	/^f0100507:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010050a	obj/kern/kernel.asm	/^f010050a:	8b 15 2c a2 22 f0    	mov    0xf022a22c,%edx$/;"	l
f0100510	obj/kern/kernel.asm	/^f0100510:	66 89 3c 42          	mov    %di,(%edx,%eax,2)$/;"	l
f0100514	obj/kern/kernel.asm	/^f0100514:	66 81 3d 28 a2 22 f0 	cmpw   $0x7cf,0xf022a228$/;"	l
f010051b	obj/kern/kernel.asm	/^f010051b:	cf 07 $/;"	l
f010051d	obj/kern/kernel.asm	/^f010051d:	76 43                	jbe    f0100562 <cons_putc+0x1b3>$/;"	l
f010051f	obj/kern/kernel.asm	/^f010051f:	a1 2c a2 22 f0       	mov    0xf022a22c,%eax$/;"	l
f0100524	obj/kern/kernel.asm	/^f0100524:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100527	obj/kern/kernel.asm	/^f0100527:	68 00 0f 00 00       	push   $0xf00$/;"	l
f010052c	obj/kern/kernel.asm	/^f010052c:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
f0100532	obj/kern/kernel.asm	/^f0100532:	52                   	push   %edx$/;"	l
f0100533	obj/kern/kernel.asm	/^f0100533:	50                   	push   %eax$/;"	l
f0100534	obj/kern/kernel.asm	/^f0100534:	e8 e4 46 00 00       	call   f0104c1d <memmove>$/;"	l
f0100539	obj/kern/kernel.asm	/^f0100539:	8b 15 2c a2 22 f0    	mov    0xf022a22c,%edx$/;"	l
f010053f	obj/kern/kernel.asm	/^f010053f:	8d 82 00 0f 00 00    	lea    0xf00(%edx),%eax$/;"	l
f0100545	obj/kern/kernel.asm	/^f0100545:	81 c2 a0 0f 00 00    	add    $0xfa0,%edx$/;"	l
f010054b	obj/kern/kernel.asm	/^f010054b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010054e	obj/kern/kernel.asm	/^f010054e:	66 c7 00 20 07       	movw   $0x720,(%eax)$/;"	l
f0100553	obj/kern/kernel.asm	/^f0100553:	83 c0 02             	add    $0x2,%eax$/;"	l
f0100556	obj/kern/kernel.asm	/^f0100556:	39 d0                	cmp    %edx,%eax$/;"	l
f0100558	obj/kern/kernel.asm	/^f0100558:	75 f4                	jne    f010054e <cons_putc+0x19f>$/;"	l
f010055a	obj/kern/kernel.asm	/^f010055a:	66 83 2d 28 a2 22 f0 	subw   $0x50,0xf022a228$/;"	l
f0100561	obj/kern/kernel.asm	/^f0100561:	50 $/;"	l
f0100562	obj/kern/kernel.asm	/^f0100562:	8b 0d 30 a2 22 f0    	mov    0xf022a230,%ecx$/;"	l
f0100568	obj/kern/kernel.asm	/^f0100568:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f010056d	obj/kern/kernel.asm	/^f010056d:	89 ca                	mov    %ecx,%edx$/;"	l
f010056f	obj/kern/kernel.asm	/^f010056f:	ee                   	out    %al,(%dx)$/;"	l
f0100570	obj/kern/kernel.asm	/^f0100570:	0f b7 1d 28 a2 22 f0 	movzwl 0xf022a228,%ebx$/;"	l
f0100577	obj/kern/kernel.asm	/^f0100577:	8d 71 01             	lea    0x1(%ecx),%esi$/;"	l
f010057a	obj/kern/kernel.asm	/^f010057a:	89 d8                	mov    %ebx,%eax$/;"	l
f010057c	obj/kern/kernel.asm	/^f010057c:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0100580	obj/kern/kernel.asm	/^f0100580:	89 f2                	mov    %esi,%edx$/;"	l
f0100582	obj/kern/kernel.asm	/^f0100582:	ee                   	out    %al,(%dx)$/;"	l
f0100583	obj/kern/kernel.asm	/^f0100583:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0100588	obj/kern/kernel.asm	/^f0100588:	89 ca                	mov    %ecx,%edx$/;"	l
f010058a	obj/kern/kernel.asm	/^f010058a:	ee                   	out    %al,(%dx)$/;"	l
f010058b	obj/kern/kernel.asm	/^f010058b:	89 d8                	mov    %ebx,%eax$/;"	l
f010058d	obj/kern/kernel.asm	/^f010058d:	89 f2                	mov    %esi,%edx$/;"	l
f010058f	obj/kern/kernel.asm	/^f010058f:	ee                   	out    %al,(%dx)$/;"	l
f0100590	obj/kern/kernel.asm	/^f0100590:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100593	obj/kern/kernel.asm	/^f0100593:	5b                   	pop    %ebx$/;"	l
f0100594	obj/kern/kernel.asm	/^f0100594:	5e                   	pop    %esi$/;"	l
f0100595	obj/kern/kernel.asm	/^f0100595:	5f                   	pop    %edi$/;"	l
f0100596	obj/kern/kernel.asm	/^f0100596:	5d                   	pop    %ebp$/;"	l
f0100597	obj/kern/kernel.asm	/^f0100597:	c3                   	ret    $/;"	l
f0100598	obj/kern/kernel.asm	/^f0100598 <serial_intr>:$/;"	l
f0100598	obj/kern/kernel.asm	/^f0100598:	80 3d 34 a2 22 f0 00 	cmpb   $0x0,0xf022a234$/;"	l
f010059f	obj/kern/kernel.asm	/^f010059f:	74 11                	je     f01005b2 <serial_intr+0x1a>$/;"	l
f01005a1	obj/kern/kernel.asm	/^f01005a1:	55                   	push   %ebp$/;"	l
f01005a2	obj/kern/kernel.asm	/^f01005a2:	89 e5                	mov    %esp,%ebp$/;"	l
f01005a4	obj/kern/kernel.asm	/^f01005a4:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01005a7	obj/kern/kernel.asm	/^f01005a7:	b8 34 02 10 f0       	mov    $0xf0100234,%eax$/;"	l
f01005ac	obj/kern/kernel.asm	/^f01005ac:	e8 a2 fc ff ff       	call   f0100253 <cons_intr>$/;"	l
f01005b1	obj/kern/kernel.asm	/^f01005b1:	c9                   	leave  $/;"	l
f01005b2	obj/kern/kernel.asm	/^f01005b2:	f3 c3                	repz ret $/;"	l
f01005b4	obj/kern/kernel.asm	/^f01005b4 <kbd_intr>:$/;"	l
f01005b4	obj/kern/kernel.asm	/^f01005b4:	55                   	push   %ebp$/;"	l
f01005b5	obj/kern/kernel.asm	/^f01005b5:	89 e5                	mov    %esp,%ebp$/;"	l
f01005b7	obj/kern/kernel.asm	/^f01005b7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01005ba	obj/kern/kernel.asm	/^f01005ba:	b8 96 02 10 f0       	mov    $0xf0100296,%eax$/;"	l
f01005bf	obj/kern/kernel.asm	/^f01005bf:	e8 8f fc ff ff       	call   f0100253 <cons_intr>$/;"	l
f01005c4	obj/kern/kernel.asm	/^f01005c4:	c9                   	leave  $/;"	l
f01005c5	obj/kern/kernel.asm	/^f01005c5:	c3                   	ret    $/;"	l
f01005c6	obj/kern/kernel.asm	/^f01005c6 <cons_getc>:$/;"	l
f01005c6	obj/kern/kernel.asm	/^f01005c6:	55                   	push   %ebp$/;"	l
f01005c7	obj/kern/kernel.asm	/^f01005c7:	89 e5                	mov    %esp,%ebp$/;"	l
f01005c9	obj/kern/kernel.asm	/^f01005c9:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01005cc	obj/kern/kernel.asm	/^f01005cc:	e8 c7 ff ff ff       	call   f0100598 <serial_intr>$/;"	l
f01005d1	obj/kern/kernel.asm	/^f01005d1:	e8 de ff ff ff       	call   f01005b4 <kbd_intr>$/;"	l
f01005d6	obj/kern/kernel.asm	/^f01005d6:	a1 20 a2 22 f0       	mov    0xf022a220,%eax$/;"	l
f01005db	obj/kern/kernel.asm	/^f01005db:	3b 05 24 a2 22 f0    	cmp    0xf022a224,%eax$/;"	l
f01005e1	obj/kern/kernel.asm	/^f01005e1:	74 26                	je     f0100609 <cons_getc+0x43>$/;"	l
f01005e3	obj/kern/kernel.asm	/^f01005e3:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f01005e6	obj/kern/kernel.asm	/^f01005e6:	89 15 20 a2 22 f0    	mov    %edx,0xf022a220$/;"	l
f01005ec	obj/kern/kernel.asm	/^f01005ec:	0f b6 88 20 a0 22 f0 	movzbl -0xfdd5fe0(%eax),%ecx$/;"	l
f01005f3	obj/kern/kernel.asm	/^f01005f3:	89 c8                	mov    %ecx,%eax$/;"	l
f01005f5	obj/kern/kernel.asm	/^f01005f5:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f01005fb	obj/kern/kernel.asm	/^f01005fb:	75 11                	jne    f010060e <cons_getc+0x48>$/;"	l
f01005fd	obj/kern/kernel.asm	/^f01005fd:	c7 05 20 a2 22 f0 00 	movl   $0x0,0xf022a220$/;"	l
f0100604	obj/kern/kernel.asm	/^f0100604:	00 00 00 $/;"	l
f0100607	obj/kern/kernel.asm	/^f0100607:	eb 05                	jmp    f010060e <cons_getc+0x48>$/;"	l
f0100609	obj/kern/kernel.asm	/^f0100609:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010060e	obj/kern/kernel.asm	/^f010060e:	c9                   	leave  $/;"	l
f010060f	obj/kern/kernel.asm	/^f010060f:	c3                   	ret    $/;"	l
f0100610	obj/kern/kernel.asm	/^f0100610 <cons_init>:$/;"	l
f0100610	obj/kern/kernel.asm	/^f0100610:	55                   	push   %ebp$/;"	l
f0100611	obj/kern/kernel.asm	/^f0100611:	89 e5                	mov    %esp,%ebp$/;"	l
f0100613	obj/kern/kernel.asm	/^f0100613:	57                   	push   %edi$/;"	l
f0100614	obj/kern/kernel.asm	/^f0100614:	56                   	push   %esi$/;"	l
f0100615	obj/kern/kernel.asm	/^f0100615:	53                   	push   %ebx$/;"	l
f0100616	obj/kern/kernel.asm	/^f0100616:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100619	obj/kern/kernel.asm	/^f0100619:	0f b7 15 00 80 0b f0 	movzwl 0xf00b8000,%edx$/;"	l
f0100620	obj/kern/kernel.asm	/^f0100620:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000$/;"	l
f0100627	obj/kern/kernel.asm	/^f0100627:	5a a5 $/;"	l
f0100629	obj/kern/kernel.asm	/^f0100629:	0f b7 05 00 80 0b f0 	movzwl 0xf00b8000,%eax$/;"	l
f0100630	obj/kern/kernel.asm	/^f0100630:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f0100634	obj/kern/kernel.asm	/^f0100634:	74 11                	je     f0100647 <cons_init+0x37>$/;"	l
f0100636	obj/kern/kernel.asm	/^f0100636:	c7 05 30 a2 22 f0 b4 	movl   $0x3b4,0xf022a230$/;"	l
f010063d	obj/kern/kernel.asm	/^f010063d:	03 00 00 $/;"	l
f0100640	obj/kern/kernel.asm	/^f0100640:	be 00 00 0b f0       	mov    $0xf00b0000,%esi$/;"	l
f0100645	obj/kern/kernel.asm	/^f0100645:	eb 16                	jmp    f010065d <cons_init+0x4d>$/;"	l
f0100647	obj/kern/kernel.asm	/^f0100647:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000$/;"	l
f010064e	obj/kern/kernel.asm	/^f010064e:	c7 05 30 a2 22 f0 d4 	movl   $0x3d4,0xf022a230$/;"	l
f0100655	obj/kern/kernel.asm	/^f0100655:	03 00 00 $/;"	l
f0100658	obj/kern/kernel.asm	/^f0100658:	be 00 80 0b f0       	mov    $0xf00b8000,%esi$/;"	l
f010065d	obj/kern/kernel.asm	/^f010065d:	8b 3d 30 a2 22 f0    	mov    0xf022a230,%edi$/;"	l
f0100663	obj/kern/kernel.asm	/^f0100663:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f0100668	obj/kern/kernel.asm	/^f0100668:	89 fa                	mov    %edi,%edx$/;"	l
f010066a	obj/kern/kernel.asm	/^f010066a:	ee                   	out    %al,(%dx)$/;"	l
f010066b	obj/kern/kernel.asm	/^f010066b:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f010066e	obj/kern/kernel.asm	/^f010066e:	89 da                	mov    %ebx,%edx$/;"	l
f0100670	obj/kern/kernel.asm	/^f0100670:	ec                   	in     (%dx),%al$/;"	l
f0100671	obj/kern/kernel.asm	/^f0100671:	0f b6 c8             	movzbl %al,%ecx$/;"	l
f0100674	obj/kern/kernel.asm	/^f0100674:	c1 e1 08             	shl    $0x8,%ecx$/;"	l
f0100677	obj/kern/kernel.asm	/^f0100677:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f010067c	obj/kern/kernel.asm	/^f010067c:	89 fa                	mov    %edi,%edx$/;"	l
f010067e	obj/kern/kernel.asm	/^f010067e:	ee                   	out    %al,(%dx)$/;"	l
f010067f	obj/kern/kernel.asm	/^f010067f:	89 da                	mov    %ebx,%edx$/;"	l
f0100681	obj/kern/kernel.asm	/^f0100681:	ec                   	in     (%dx),%al$/;"	l
f0100682	obj/kern/kernel.asm	/^f0100682:	89 35 2c a2 22 f0    	mov    %esi,0xf022a22c$/;"	l
f0100688	obj/kern/kernel.asm	/^f0100688:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010068b	obj/kern/kernel.asm	/^f010068b:	09 c8                	or     %ecx,%eax$/;"	l
f010068d	obj/kern/kernel.asm	/^f010068d:	66 a3 28 a2 22 f0    	mov    %ax,0xf022a228$/;"	l
f0100693	obj/kern/kernel.asm	/^f0100693:	e8 1c ff ff ff       	call   f01005b4 <kbd_intr>$/;"	l
f0100698	obj/kern/kernel.asm	/^f0100698:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010069b	obj/kern/kernel.asm	/^f010069b:	0f b7 05 a8 f3 11 f0 	movzwl 0xf011f3a8,%eax$/;"	l
f01006a2	obj/kern/kernel.asm	/^f01006a2:	25 fd ff 00 00       	and    $0xfffd,%eax$/;"	l
f01006a7	obj/kern/kernel.asm	/^f01006a7:	50                   	push   %eax$/;"	l
f01006a8	obj/kern/kernel.asm	/^f01006a8:	e8 ea 2d 00 00       	call   f0103497 <irq_setmask_8259A>$/;"	l
f01006ad	obj/kern/kernel.asm	/^f01006ad:	be fa 03 00 00       	mov    $0x3fa,%esi$/;"	l
f01006b2	obj/kern/kernel.asm	/^f01006b2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01006b7	obj/kern/kernel.asm	/^f01006b7:	89 f2                	mov    %esi,%edx$/;"	l
f01006b9	obj/kern/kernel.asm	/^f01006b9:	ee                   	out    %al,(%dx)$/;"	l
f01006ba	obj/kern/kernel.asm	/^f01006ba:	ba fb 03 00 00       	mov    $0x3fb,%edx$/;"	l
f01006bf	obj/kern/kernel.asm	/^f01006bf:	b8 80 ff ff ff       	mov    $0xffffff80,%eax$/;"	l
f01006c4	obj/kern/kernel.asm	/^f01006c4:	ee                   	out    %al,(%dx)$/;"	l
f01006c5	obj/kern/kernel.asm	/^f01006c5:	bb f8 03 00 00       	mov    $0x3f8,%ebx$/;"	l
f01006ca	obj/kern/kernel.asm	/^f01006ca:	b8 0c 00 00 00       	mov    $0xc,%eax$/;"	l
f01006cf	obj/kern/kernel.asm	/^f01006cf:	89 da                	mov    %ebx,%edx$/;"	l
f01006d1	obj/kern/kernel.asm	/^f01006d1:	ee                   	out    %al,(%dx)$/;"	l
f01006d2	obj/kern/kernel.asm	/^f01006d2:	ba f9 03 00 00       	mov    $0x3f9,%edx$/;"	l
f01006d7	obj/kern/kernel.asm	/^f01006d7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01006dc	obj/kern/kernel.asm	/^f01006dc:	ee                   	out    %al,(%dx)$/;"	l
f01006dd	obj/kern/kernel.asm	/^f01006dd:	ba fb 03 00 00       	mov    $0x3fb,%edx$/;"	l
f01006e2	obj/kern/kernel.asm	/^f01006e2:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f01006e7	obj/kern/kernel.asm	/^f01006e7:	ee                   	out    %al,(%dx)$/;"	l
f01006e8	obj/kern/kernel.asm	/^f01006e8:	ba fc 03 00 00       	mov    $0x3fc,%edx$/;"	l
f01006ed	obj/kern/kernel.asm	/^f01006ed:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01006f2	obj/kern/kernel.asm	/^f01006f2:	ee                   	out    %al,(%dx)$/;"	l
f01006f3	obj/kern/kernel.asm	/^f01006f3:	ba f9 03 00 00       	mov    $0x3f9,%edx$/;"	l
f01006f8	obj/kern/kernel.asm	/^f01006f8:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01006fd	obj/kern/kernel.asm	/^f01006fd:	ee                   	out    %al,(%dx)$/;"	l
f01006fe	obj/kern/kernel.asm	/^f01006fe:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f0100703	obj/kern/kernel.asm	/^f0100703:	ec                   	in     (%dx),%al$/;"	l
f0100704	obj/kern/kernel.asm	/^f0100704:	89 c1                	mov    %eax,%ecx$/;"	l
f0100706	obj/kern/kernel.asm	/^f0100706:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100709	obj/kern/kernel.asm	/^f0100709:	3c ff                	cmp    $0xff,%al$/;"	l
f010070b	obj/kern/kernel.asm	/^f010070b:	0f 95 05 34 a2 22 f0 	setne  0xf022a234$/;"	l
f0100712	obj/kern/kernel.asm	/^f0100712:	89 f2                	mov    %esi,%edx$/;"	l
f0100714	obj/kern/kernel.asm	/^f0100714:	ec                   	in     (%dx),%al$/;"	l
f0100715	obj/kern/kernel.asm	/^f0100715:	89 da                	mov    %ebx,%edx$/;"	l
f0100717	obj/kern/kernel.asm	/^f0100717:	ec                   	in     (%dx),%al$/;"	l
f0100718	obj/kern/kernel.asm	/^f0100718:	80 f9 ff             	cmp    $0xff,%cl$/;"	l
f010071b	obj/kern/kernel.asm	/^f010071b:	75 10                	jne    f010072d <cons_init+0x11d>$/;"	l
f010071d	obj/kern/kernel.asm	/^f010071d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100720	obj/kern/kernel.asm	/^f0100720:	68 4f 59 10 f0       	push   $0xf010594f$/;"	l
f0100725	obj/kern/kernel.asm	/^f0100725:	e8 be 2e 00 00       	call   f01035e8 <cprintf>$/;"	l
f010072a	obj/kern/kernel.asm	/^f010072a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010072d	obj/kern/kernel.asm	/^f010072d:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100730	obj/kern/kernel.asm	/^f0100730:	5b                   	pop    %ebx$/;"	l
f0100731	obj/kern/kernel.asm	/^f0100731:	5e                   	pop    %esi$/;"	l
f0100732	obj/kern/kernel.asm	/^f0100732:	5f                   	pop    %edi$/;"	l
f0100733	obj/kern/kernel.asm	/^f0100733:	5d                   	pop    %ebp$/;"	l
f0100734	obj/kern/kernel.asm	/^f0100734:	c3                   	ret    $/;"	l
f0100735	obj/kern/kernel.asm	/^f0100735 <cputchar>:$/;"	l
f0100735	obj/kern/kernel.asm	/^f0100735:	55                   	push   %ebp$/;"	l
f0100736	obj/kern/kernel.asm	/^f0100736:	89 e5                	mov    %esp,%ebp$/;"	l
f0100738	obj/kern/kernel.asm	/^f0100738:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010073b	obj/kern/kernel.asm	/^f010073b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010073e	obj/kern/kernel.asm	/^f010073e:	e8 6c fc ff ff       	call   f01003af <cons_putc>$/;"	l
f0100743	obj/kern/kernel.asm	/^f0100743:	c9                   	leave  $/;"	l
f0100744	obj/kern/kernel.asm	/^f0100744:	c3                   	ret    $/;"	l
f0100745	obj/kern/kernel.asm	/^f0100745 <getchar>:$/;"	l
f0100745	obj/kern/kernel.asm	/^f0100745:	55                   	push   %ebp$/;"	l
f0100746	obj/kern/kernel.asm	/^f0100746:	89 e5                	mov    %esp,%ebp$/;"	l
f0100748	obj/kern/kernel.asm	/^f0100748:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010074b	obj/kern/kernel.asm	/^f010074b:	e8 76 fe ff ff       	call   f01005c6 <cons_getc>$/;"	l
f0100750	obj/kern/kernel.asm	/^f0100750:	85 c0                	test   %eax,%eax$/;"	l
f0100752	obj/kern/kernel.asm	/^f0100752:	74 f7                	je     f010074b <getchar+0x6>$/;"	l
f0100754	obj/kern/kernel.asm	/^f0100754:	c9                   	leave  $/;"	l
f0100755	obj/kern/kernel.asm	/^f0100755:	c3                   	ret    $/;"	l
f0100756	obj/kern/kernel.asm	/^f0100756 <iscons>:$/;"	l
f0100756	obj/kern/kernel.asm	/^f0100756:	55                   	push   %ebp$/;"	l
f0100757	obj/kern/kernel.asm	/^f0100757:	89 e5                	mov    %esp,%ebp$/;"	l
f0100759	obj/kern/kernel.asm	/^f0100759:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010075e	obj/kern/kernel.asm	/^f010075e:	5d                   	pop    %ebp$/;"	l
f010075f	obj/kern/kernel.asm	/^f010075f:	c3                   	ret    $/;"	l
f0100760	obj/kern/kernel.asm	/^f0100760 <mon_help>:$/;"	l
f0100760	obj/kern/kernel.asm	/^f0100760:	55                   	push   %ebp$/;"	l
f0100761	obj/kern/kernel.asm	/^f0100761:	89 e5                	mov    %esp,%ebp$/;"	l
f0100763	obj/kern/kernel.asm	/^f0100763:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100766	obj/kern/kernel.asm	/^f0100766:	68 a0 5b 10 f0       	push   $0xf0105ba0$/;"	l
f010076b	obj/kern/kernel.asm	/^f010076b:	68 be 5b 10 f0       	push   $0xf0105bbe$/;"	l
f0100770	obj/kern/kernel.asm	/^f0100770:	68 c3 5b 10 f0       	push   $0xf0105bc3$/;"	l
f0100775	obj/kern/kernel.asm	/^f0100775:	e8 6e 2e 00 00       	call   f01035e8 <cprintf>$/;"	l
f010077a	obj/kern/kernel.asm	/^f010077a:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010077d	obj/kern/kernel.asm	/^f010077d:	68 58 5c 10 f0       	push   $0xf0105c58$/;"	l
f0100782	obj/kern/kernel.asm	/^f0100782:	68 cc 5b 10 f0       	push   $0xf0105bcc$/;"	l
f0100787	obj/kern/kernel.asm	/^f0100787:	68 c3 5b 10 f0       	push   $0xf0105bc3$/;"	l
f010078c	obj/kern/kernel.asm	/^f010078c:	e8 57 2e 00 00       	call   f01035e8 <cprintf>$/;"	l
f0100791	obj/kern/kernel.asm	/^f0100791:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100794	obj/kern/kernel.asm	/^f0100794:	68 d5 5b 10 f0       	push   $0xf0105bd5$/;"	l
f0100799	obj/kern/kernel.asm	/^f0100799:	68 e7 5b 10 f0       	push   $0xf0105be7$/;"	l
f010079e	obj/kern/kernel.asm	/^f010079e:	68 c3 5b 10 f0       	push   $0xf0105bc3$/;"	l
f01007a3	obj/kern/kernel.asm	/^f01007a3:	e8 40 2e 00 00       	call   f01035e8 <cprintf>$/;"	l
f01007a8	obj/kern/kernel.asm	/^f01007a8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01007ad	obj/kern/kernel.asm	/^f01007ad:	c9                   	leave  $/;"	l
f01007ae	obj/kern/kernel.asm	/^f01007ae:	c3                   	ret    $/;"	l
f01007af	obj/kern/kernel.asm	/^f01007af <mon_kerninfo>:$/;"	l
f01007af	obj/kern/kernel.asm	/^f01007af:	55                   	push   %ebp$/;"	l
f01007b0	obj/kern/kernel.asm	/^f01007b0:	89 e5                	mov    %esp,%ebp$/;"	l
f01007b2	obj/kern/kernel.asm	/^f01007b2:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01007b5	obj/kern/kernel.asm	/^f01007b5:	68 f1 5b 10 f0       	push   $0xf0105bf1$/;"	l
f01007ba	obj/kern/kernel.asm	/^f01007ba:	e8 29 2e 00 00       	call   f01035e8 <cprintf>$/;"	l
f01007bf	obj/kern/kernel.asm	/^f01007bf:	83 c4 08             	add    $0x8,%esp$/;"	l
f01007c2	obj/kern/kernel.asm	/^f01007c2:	68 0c 00 10 00       	push   $0x10000c$/;"	l
f01007c7	obj/kern/kernel.asm	/^f01007c7:	68 80 5c 10 f0       	push   $0xf0105c80$/;"	l
f01007cc	obj/kern/kernel.asm	/^f01007cc:	e8 17 2e 00 00       	call   f01035e8 <cprintf>$/;"	l
f01007d1	obj/kern/kernel.asm	/^f01007d1:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01007d4	obj/kern/kernel.asm	/^f01007d4:	68 0c 00 10 00       	push   $0x10000c$/;"	l
f01007d9	obj/kern/kernel.asm	/^f01007d9:	68 0c 00 10 f0       	push   $0xf010000c$/;"	l
f01007de	obj/kern/kernel.asm	/^f01007de:	68 a8 5c 10 f0       	push   $0xf0105ca8$/;"	l
f01007e3	obj/kern/kernel.asm	/^f01007e3:	e8 00 2e 00 00       	call   f01035e8 <cprintf>$/;"	l
f01007e8	obj/kern/kernel.asm	/^f01007e8:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01007eb	obj/kern/kernel.asm	/^f01007eb:	68 71 58 10 00       	push   $0x105871$/;"	l
f01007f0	obj/kern/kernel.asm	/^f01007f0:	68 71 58 10 f0       	push   $0xf0105871$/;"	l
f01007f5	obj/kern/kernel.asm	/^f01007f5:	68 cc 5c 10 f0       	push   $0xf0105ccc$/;"	l
f01007fa	obj/kern/kernel.asm	/^f01007fa:	e8 e9 2d 00 00       	call   f01035e8 <cprintf>$/;"	l
f01007ff	obj/kern/kernel.asm	/^f01007ff:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100802	obj/kern/kernel.asm	/^f0100802:	68 00 a0 22 00       	push   $0x22a000$/;"	l
f0100807	obj/kern/kernel.asm	/^f0100807:	68 00 a0 22 f0       	push   $0xf022a000$/;"	l
f010080c	obj/kern/kernel.asm	/^f010080c:	68 f0 5c 10 f0       	push   $0xf0105cf0$/;"	l
f0100811	obj/kern/kernel.asm	/^f0100811:	e8 d2 2d 00 00       	call   f01035e8 <cprintf>$/;"	l
f0100816	obj/kern/kernel.asm	/^f0100816:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100819	obj/kern/kernel.asm	/^f0100819:	68 08 c0 26 00       	push   $0x26c008$/;"	l
f010081e	obj/kern/kernel.asm	/^f010081e:	68 08 c0 26 f0       	push   $0xf026c008$/;"	l
f0100823	obj/kern/kernel.asm	/^f0100823:	68 14 5d 10 f0       	push   $0xf0105d14$/;"	l
f0100828	obj/kern/kernel.asm	/^f0100828:	e8 bb 2d 00 00       	call   f01035e8 <cprintf>$/;"	l
f010082d	obj/kern/kernel.asm	/^f010082d:	b8 07 c4 26 f0       	mov    $0xf026c407,%eax$/;"	l
f0100832	obj/kern/kernel.asm	/^f0100832:	2d 0c 00 10 f0       	sub    $0xf010000c,%eax$/;"	l
f0100837	obj/kern/kernel.asm	/^f0100837:	83 c4 08             	add    $0x8,%esp$/;"	l
f010083a	obj/kern/kernel.asm	/^f010083a:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f010083f	obj/kern/kernel.asm	/^f010083f:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
f0100845	obj/kern/kernel.asm	/^f0100845:	85 c0                	test   %eax,%eax$/;"	l
f0100847	obj/kern/kernel.asm	/^f0100847:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f010084a	obj/kern/kernel.asm	/^f010084a:	c1 f8 0a             	sar    $0xa,%eax$/;"	l
f010084d	obj/kern/kernel.asm	/^f010084d:	50                   	push   %eax$/;"	l
f010084e	obj/kern/kernel.asm	/^f010084e:	68 38 5d 10 f0       	push   $0xf0105d38$/;"	l
f0100853	obj/kern/kernel.asm	/^f0100853:	e8 90 2d 00 00       	call   f01035e8 <cprintf>$/;"	l
f0100858	obj/kern/kernel.asm	/^f0100858:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010085d	obj/kern/kernel.asm	/^f010085d:	c9                   	leave  $/;"	l
f010085e	obj/kern/kernel.asm	/^f010085e:	c3                   	ret    $/;"	l
f010085f	obj/kern/kernel.asm	/^f010085f <mon_backtrace>:$/;"	l
f010085f	obj/kern/kernel.asm	/^f010085f:	55                   	push   %ebp$/;"	l
f0100860	obj/kern/kernel.asm	/^f0100860:	89 e5                	mov    %esp,%ebp$/;"	l
f0100862	obj/kern/kernel.asm	/^f0100862:	57                   	push   %edi$/;"	l
f0100863	obj/kern/kernel.asm	/^f0100863:	56                   	push   %esi$/;"	l
f0100864	obj/kern/kernel.asm	/^f0100864:	53                   	push   %ebx$/;"	l
f0100865	obj/kern/kernel.asm	/^f0100865:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0100868	obj/kern/kernel.asm	/^f0100868:	89 e9                	mov    %ebp,%ecx$/;"	l
f010086a	obj/kern/kernel.asm	/^f010086a:	bb 5f 08 10 f0       	mov    $0xf010085f,%ebx$/;"	l
f010086f	obj/kern/kernel.asm	/^f010086f:	8d 7d d0             	lea    -0x30(%ebp),%edi$/;"	l
f0100872	obj/kern/kernel.asm	/^f0100872:	eb 68                	jmp    f01008dc <mon_backtrace+0x7d>$/;"	l
f0100874	obj/kern/kernel.asm	/^f0100874:	89 ce                	mov    %ecx,%esi$/;"	l
f0100876	obj/kern/kernel.asm	/^f0100876:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010087b	obj/kern/kernel.asm	/^f010087b:	8b 54 81 08          	mov    0x8(%ecx,%eax,4),%edx$/;"	l
f010087f	obj/kern/kernel.asm	/^f010087f:	89 54 85 bc          	mov    %edx,-0x44(%ebp,%eax,4)$/;"	l
f0100883	obj/kern/kernel.asm	/^f0100883:	83 c0 01             	add    $0x1,%eax$/;"	l
f0100886	obj/kern/kernel.asm	/^f0100886:	83 f8 05             	cmp    $0x5,%eax$/;"	l
f0100889	obj/kern/kernel.asm	/^f0100889:	75 f0                	jne    f010087b <mon_backtrace+0x1c>$/;"	l
f010088b	obj/kern/kernel.asm	/^f010088b:	ff 75 cc             	pushl  -0x34(%ebp)$/;"	l
f010088e	obj/kern/kernel.asm	/^f010088e:	ff 75 c8             	pushl  -0x38(%ebp)$/;"	l
f0100891	obj/kern/kernel.asm	/^f0100891:	ff 75 c4             	pushl  -0x3c(%ebp)$/;"	l
f0100894	obj/kern/kernel.asm	/^f0100894:	ff 75 c0             	pushl  -0x40(%ebp)$/;"	l
f0100897	obj/kern/kernel.asm	/^f0100897:	ff 75 bc             	pushl  -0x44(%ebp)$/;"	l
f010089a	obj/kern/kernel.asm	/^f010089a:	53                   	push   %ebx$/;"	l
f010089b	obj/kern/kernel.asm	/^f010089b:	51                   	push   %ecx$/;"	l
f010089c	obj/kern/kernel.asm	/^f010089c:	68 64 5d 10 f0       	push   $0xf0105d64$/;"	l
f01008a1	obj/kern/kernel.asm	/^f01008a1:	e8 42 2d 00 00       	call   f01035e8 <cprintf>$/;"	l
f01008a6	obj/kern/kernel.asm	/^f01008a6:	83 c4 18             	add    $0x18,%esp$/;"	l
f01008a9	obj/kern/kernel.asm	/^f01008a9:	57                   	push   %edi$/;"	l
f01008aa	obj/kern/kernel.asm	/^f01008aa:	53                   	push   %ebx$/;"	l
f01008ab	obj/kern/kernel.asm	/^f01008ab:	e8 ae 38 00 00       	call   f010415e <debuginfo_eip>$/;"	l
f01008b0	obj/kern/kernel.asm	/^f01008b0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01008b3	obj/kern/kernel.asm	/^f01008b3:	85 c0                	test   %eax,%eax$/;"	l
f01008b5	obj/kern/kernel.asm	/^f01008b5:	75 20                	jne    f01008d7 <mon_backtrace+0x78>$/;"	l
f01008b7	obj/kern/kernel.asm	/^f01008b7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01008ba	obj/kern/kernel.asm	/^f01008ba:	2b 5d e0             	sub    -0x20(%ebp),%ebx$/;"	l
f01008bd	obj/kern/kernel.asm	/^f01008bd:	53                   	push   %ebx$/;"	l
f01008be	obj/kern/kernel.asm	/^f01008be:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f01008c1	obj/kern/kernel.asm	/^f01008c1:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f01008c4	obj/kern/kernel.asm	/^f01008c4:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f01008c7	obj/kern/kernel.asm	/^f01008c7:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f01008ca	obj/kern/kernel.asm	/^f01008ca:	68 0a 5c 10 f0       	push   $0xf0105c0a$/;"	l
f01008cf	obj/kern/kernel.asm	/^f01008cf:	e8 14 2d 00 00       	call   f01035e8 <cprintf>$/;"	l
f01008d4	obj/kern/kernel.asm	/^f01008d4:	83 c4 20             	add    $0x20,%esp$/;"	l
f01008d7	obj/kern/kernel.asm	/^f01008d7:	8b 5e 04             	mov    0x4(%esi),%ebx$/;"	l
f01008da	obj/kern/kernel.asm	/^f01008da:	8b 0e                	mov    (%esi),%ecx$/;"	l
f01008dc	obj/kern/kernel.asm	/^f01008dc:	85 c9                	test   %ecx,%ecx$/;"	l
f01008de	obj/kern/kernel.asm	/^f01008de:	75 94                	jne    f0100874 <mon_backtrace+0x15>$/;"	l
f01008e0	obj/kern/kernel.asm	/^f01008e0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01008e5	obj/kern/kernel.asm	/^f01008e5:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01008e8	obj/kern/kernel.asm	/^f01008e8:	5b                   	pop    %ebx$/;"	l
f01008e9	obj/kern/kernel.asm	/^f01008e9:	5e                   	pop    %esi$/;"	l
f01008ea	obj/kern/kernel.asm	/^f01008ea:	5f                   	pop    %edi$/;"	l
f01008eb	obj/kern/kernel.asm	/^f01008eb:	5d                   	pop    %ebp$/;"	l
f01008ec	obj/kern/kernel.asm	/^f01008ec:	c3                   	ret    $/;"	l
f01008ed	obj/kern/kernel.asm	/^f01008ed <monitor>:$/;"	l
f01008ed	obj/kern/kernel.asm	/^f01008ed:	55                   	push   %ebp$/;"	l
f01008ee	obj/kern/kernel.asm	/^f01008ee:	89 e5                	mov    %esp,%ebp$/;"	l
f01008f0	obj/kern/kernel.asm	/^f01008f0:	57                   	push   %edi$/;"	l
f01008f1	obj/kern/kernel.asm	/^f01008f1:	56                   	push   %esi$/;"	l
f01008f2	obj/kern/kernel.asm	/^f01008f2:	53                   	push   %ebx$/;"	l
f01008f3	obj/kern/kernel.asm	/^f01008f3:	83 ec 58             	sub    $0x58,%esp$/;"	l
f01008f6	obj/kern/kernel.asm	/^f01008f6:	68 94 5d 10 f0       	push   $0xf0105d94$/;"	l
f01008fb	obj/kern/kernel.asm	/^f01008fb:	e8 e8 2c 00 00       	call   f01035e8 <cprintf>$/;"	l
f0100900	obj/kern/kernel.asm	/^f0100900:	c7 04 24 b8 5d 10 f0 	movl   $0xf0105db8,(%esp)$/;"	l
f0100907	obj/kern/kernel.asm	/^f0100907:	e8 dc 2c 00 00       	call   f01035e8 <cprintf>$/;"	l
f010090c	obj/kern/kernel.asm	/^f010090c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010090f	obj/kern/kernel.asm	/^f010090f:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
f0100913	obj/kern/kernel.asm	/^f0100913:	74 0e                	je     f0100923 <monitor+0x36>$/;"	l
f0100915	obj/kern/kernel.asm	/^f0100915:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100918	obj/kern/kernel.asm	/^f0100918:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010091b	obj/kern/kernel.asm	/^f010091b:	e8 02 31 00 00       	call   f0103a22 <print_trapframe>$/;"	l
f0100920	obj/kern/kernel.asm	/^f0100920:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100923	obj/kern/kernel.asm	/^f0100923:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100926	obj/kern/kernel.asm	/^f0100926:	68 1b 5c 10 f0       	push   $0xf0105c1b$/;"	l
f010092b	obj/kern/kernel.asm	/^f010092b:	e8 49 40 00 00       	call   f0104979 <readline>$/;"	l
f0100930	obj/kern/kernel.asm	/^f0100930:	89 c3                	mov    %eax,%ebx$/;"	l
f0100932	obj/kern/kernel.asm	/^f0100932:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100935	obj/kern/kernel.asm	/^f0100935:	85 c0                	test   %eax,%eax$/;"	l
f0100937	obj/kern/kernel.asm	/^f0100937:	74 ea                	je     f0100923 <monitor+0x36>$/;"	l
f0100939	obj/kern/kernel.asm	/^f0100939:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
f0100940	obj/kern/kernel.asm	/^f0100940:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100945	obj/kern/kernel.asm	/^f0100945:	eb 0a                	jmp    f0100951 <monitor+0x64>$/;"	l
f0100947	obj/kern/kernel.asm	/^f0100947:	c6 03 00             	movb   $0x0,(%ebx)$/;"	l
f010094a	obj/kern/kernel.asm	/^f010094a:	89 f7                	mov    %esi,%edi$/;"	l
f010094c	obj/kern/kernel.asm	/^f010094c:	8d 5b 01             	lea    0x1(%ebx),%ebx$/;"	l
f010094f	obj/kern/kernel.asm	/^f010094f:	89 fe                	mov    %edi,%esi$/;"	l
f0100951	obj/kern/kernel.asm	/^f0100951:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100954	obj/kern/kernel.asm	/^f0100954:	84 c0                	test   %al,%al$/;"	l
f0100956	obj/kern/kernel.asm	/^f0100956:	74 63                	je     f01009bb <monitor+0xce>$/;"	l
f0100958	obj/kern/kernel.asm	/^f0100958:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010095b	obj/kern/kernel.asm	/^f010095b:	0f be c0             	movsbl %al,%eax$/;"	l
f010095e	obj/kern/kernel.asm	/^f010095e:	50                   	push   %eax$/;"	l
f010095f	obj/kern/kernel.asm	/^f010095f:	68 1f 5c 10 f0       	push   $0xf0105c1f$/;"	l
f0100964	obj/kern/kernel.asm	/^f0100964:	e8 2a 42 00 00       	call   f0104b93 <strchr>$/;"	l
f0100969	obj/kern/kernel.asm	/^f0100969:	83 c4 10             	add    $0x10,%esp$/;"	l
f010096c	obj/kern/kernel.asm	/^f010096c:	85 c0                	test   %eax,%eax$/;"	l
f010096e	obj/kern/kernel.asm	/^f010096e:	75 d7                	jne    f0100947 <monitor+0x5a>$/;"	l
f0100970	obj/kern/kernel.asm	/^f0100970:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f0100973	obj/kern/kernel.asm	/^f0100973:	74 46                	je     f01009bb <monitor+0xce>$/;"	l
f0100975	obj/kern/kernel.asm	/^f0100975:	83 fe 0f             	cmp    $0xf,%esi$/;"	l
f0100978	obj/kern/kernel.asm	/^f0100978:	75 14                	jne    f010098e <monitor+0xa1>$/;"	l
f010097a	obj/kern/kernel.asm	/^f010097a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010097d	obj/kern/kernel.asm	/^f010097d:	6a 10                	push   $0x10$/;"	l
f010097f	obj/kern/kernel.asm	/^f010097f:	68 24 5c 10 f0       	push   $0xf0105c24$/;"	l
f0100984	obj/kern/kernel.asm	/^f0100984:	e8 5f 2c 00 00       	call   f01035e8 <cprintf>$/;"	l
f0100989	obj/kern/kernel.asm	/^f0100989:	83 c4 10             	add    $0x10,%esp$/;"	l
f010098c	obj/kern/kernel.asm	/^f010098c:	eb 95                	jmp    f0100923 <monitor+0x36>$/;"	l
f010098e	obj/kern/kernel.asm	/^f010098e:	8d 7e 01             	lea    0x1(%esi),%edi$/;"	l
f0100991	obj/kern/kernel.asm	/^f0100991:	89 5c b5 a8          	mov    %ebx,-0x58(%ebp,%esi,4)$/;"	l
f0100995	obj/kern/kernel.asm	/^f0100995:	eb 03                	jmp    f010099a <monitor+0xad>$/;"	l
f0100997	obj/kern/kernel.asm	/^f0100997:	83 c3 01             	add    $0x1,%ebx$/;"	l
f010099a	obj/kern/kernel.asm	/^f010099a:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f010099d	obj/kern/kernel.asm	/^f010099d:	84 c0                	test   %al,%al$/;"	l
f010099f	obj/kern/kernel.asm	/^f010099f:	74 ae                	je     f010094f <monitor+0x62>$/;"	l
f01009a1	obj/kern/kernel.asm	/^f01009a1:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01009a4	obj/kern/kernel.asm	/^f01009a4:	0f be c0             	movsbl %al,%eax$/;"	l
f01009a7	obj/kern/kernel.asm	/^f01009a7:	50                   	push   %eax$/;"	l
f01009a8	obj/kern/kernel.asm	/^f01009a8:	68 1f 5c 10 f0       	push   $0xf0105c1f$/;"	l
f01009ad	obj/kern/kernel.asm	/^f01009ad:	e8 e1 41 00 00       	call   f0104b93 <strchr>$/;"	l
f01009b2	obj/kern/kernel.asm	/^f01009b2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009b5	obj/kern/kernel.asm	/^f01009b5:	85 c0                	test   %eax,%eax$/;"	l
f01009b7	obj/kern/kernel.asm	/^f01009b7:	74 de                	je     f0100997 <monitor+0xaa>$/;"	l
f01009b9	obj/kern/kernel.asm	/^f01009b9:	eb 94                	jmp    f010094f <monitor+0x62>$/;"	l
f01009bb	obj/kern/kernel.asm	/^f01009bb:	c7 44 b5 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%esi,4)$/;"	l
f01009c2	obj/kern/kernel.asm	/^f01009c2:	00 $/;"	l
f01009c3	obj/kern/kernel.asm	/^f01009c3:	85 f6                	test   %esi,%esi$/;"	l
f01009c5	obj/kern/kernel.asm	/^f01009c5:	0f 84 58 ff ff ff    	je     f0100923 <monitor+0x36>$/;"	l
f01009cb	obj/kern/kernel.asm	/^f01009cb:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01009d0	obj/kern/kernel.asm	/^f01009d0:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01009d3	obj/kern/kernel.asm	/^f01009d3:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f01009d6	obj/kern/kernel.asm	/^f01009d6:	ff 34 85 e0 5d 10 f0 	pushl  -0xfefa220(,%eax,4)$/;"	l
f01009dd	obj/kern/kernel.asm	/^f01009dd:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f01009e0	obj/kern/kernel.asm	/^f01009e0:	e8 50 41 00 00       	call   f0104b35 <strcmp>$/;"	l
f01009e5	obj/kern/kernel.asm	/^f01009e5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009e8	obj/kern/kernel.asm	/^f01009e8:	85 c0                	test   %eax,%eax$/;"	l
f01009ea	obj/kern/kernel.asm	/^f01009ea:	75 21                	jne    f0100a0d <monitor+0x120>$/;"	l
f01009ec	obj/kern/kernel.asm	/^f01009ec:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01009ef	obj/kern/kernel.asm	/^f01009ef:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f01009f2	obj/kern/kernel.asm	/^f01009f2:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01009f5	obj/kern/kernel.asm	/^f01009f5:	8d 55 a8             	lea    -0x58(%ebp),%edx$/;"	l
f01009f8	obj/kern/kernel.asm	/^f01009f8:	52                   	push   %edx$/;"	l
f01009f9	obj/kern/kernel.asm	/^f01009f9:	56                   	push   %esi$/;"	l
f01009fa	obj/kern/kernel.asm	/^f01009fa:	ff 14 85 e8 5d 10 f0 	call   *-0xfefa218(,%eax,4)$/;"	l
f0100a01	obj/kern/kernel.asm	/^f0100a01:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a04	obj/kern/kernel.asm	/^f0100a04:	85 c0                	test   %eax,%eax$/;"	l
f0100a06	obj/kern/kernel.asm	/^f0100a06:	78 25                	js     f0100a2d <monitor+0x140>$/;"	l
f0100a08	obj/kern/kernel.asm	/^f0100a08:	e9 16 ff ff ff       	jmp    f0100923 <monitor+0x36>$/;"	l
f0100a0d	obj/kern/kernel.asm	/^f0100a0d:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100a10	obj/kern/kernel.asm	/^f0100a10:	83 fb 03             	cmp    $0x3,%ebx$/;"	l
f0100a13	obj/kern/kernel.asm	/^f0100a13:	75 bb                	jne    f01009d0 <monitor+0xe3>$/;"	l
f0100a15	obj/kern/kernel.asm	/^f0100a15:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100a18	obj/kern/kernel.asm	/^f0100a18:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f0100a1b	obj/kern/kernel.asm	/^f0100a1b:	68 41 5c 10 f0       	push   $0xf0105c41$/;"	l
f0100a20	obj/kern/kernel.asm	/^f0100a20:	e8 c3 2b 00 00       	call   f01035e8 <cprintf>$/;"	l
f0100a25	obj/kern/kernel.asm	/^f0100a25:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a28	obj/kern/kernel.asm	/^f0100a28:	e9 f6 fe ff ff       	jmp    f0100923 <monitor+0x36>$/;"	l
f0100a2d	obj/kern/kernel.asm	/^f0100a2d:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100a30	obj/kern/kernel.asm	/^f0100a30:	5b                   	pop    %ebx$/;"	l
f0100a31	obj/kern/kernel.asm	/^f0100a31:	5e                   	pop    %esi$/;"	l
f0100a32	obj/kern/kernel.asm	/^f0100a32:	5f                   	pop    %edi$/;"	l
f0100a33	obj/kern/kernel.asm	/^f0100a33:	5d                   	pop    %ebp$/;"	l
f0100a34	obj/kern/kernel.asm	/^f0100a34:	c3                   	ret    $/;"	l
f0100a35	obj/kern/kernel.asm	/^f0100a35 <nvram_read>:$/;"	l
f0100a35	obj/kern/kernel.asm	/^f0100a35:	55                   	push   %ebp$/;"	l
f0100a36	obj/kern/kernel.asm	/^f0100a36:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a38	obj/kern/kernel.asm	/^f0100a38:	56                   	push   %esi$/;"	l
f0100a39	obj/kern/kernel.asm	/^f0100a39:	53                   	push   %ebx$/;"	l
f0100a3a	obj/kern/kernel.asm	/^f0100a3a:	89 c3                	mov    %eax,%ebx$/;"	l
f0100a3c	obj/kern/kernel.asm	/^f0100a3c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100a3f	obj/kern/kernel.asm	/^f0100a3f:	50                   	push   %eax$/;"	l
f0100a40	obj/kern/kernel.asm	/^f0100a40:	e8 24 2a 00 00       	call   f0103469 <mc146818_read>$/;"	l
f0100a45	obj/kern/kernel.asm	/^f0100a45:	89 c6                	mov    %eax,%esi$/;"	l
f0100a47	obj/kern/kernel.asm	/^f0100a47:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100a4a	obj/kern/kernel.asm	/^f0100a4a:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0100a4d	obj/kern/kernel.asm	/^f0100a4d:	e8 17 2a 00 00       	call   f0103469 <mc146818_read>$/;"	l
f0100a52	obj/kern/kernel.asm	/^f0100a52:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f0100a55	obj/kern/kernel.asm	/^f0100a55:	09 f0                	or     %esi,%eax$/;"	l
f0100a57	obj/kern/kernel.asm	/^f0100a57:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0100a5a	obj/kern/kernel.asm	/^f0100a5a:	5b                   	pop    %ebx$/;"	l
f0100a5b	obj/kern/kernel.asm	/^f0100a5b:	5e                   	pop    %esi$/;"	l
f0100a5c	obj/kern/kernel.asm	/^f0100a5c:	5d                   	pop    %ebp$/;"	l
f0100a5d	obj/kern/kernel.asm	/^f0100a5d:	c3                   	ret    $/;"	l
f0100a5e	obj/kern/kernel.asm	/^f0100a5e <check_va2pa>:$/;"	l
f0100a5e	obj/kern/kernel.asm	/^f0100a5e:	89 d1                	mov    %edx,%ecx$/;"	l
f0100a60	obj/kern/kernel.asm	/^f0100a60:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
f0100a63	obj/kern/kernel.asm	/^f0100a63:	8b 04 88             	mov    (%eax,%ecx,4),%eax$/;"	l
f0100a66	obj/kern/kernel.asm	/^f0100a66:	a8 01                	test   $0x1,%al$/;"	l
f0100a68	obj/kern/kernel.asm	/^f0100a68:	74 52                	je     f0100abc <check_va2pa+0x5e>$/;"	l
f0100a6a	obj/kern/kernel.asm	/^f0100a6a:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100a6f	obj/kern/kernel.asm	/^f0100a6f:	89 c1                	mov    %eax,%ecx$/;"	l
f0100a71	obj/kern/kernel.asm	/^f0100a71:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0100a74	obj/kern/kernel.asm	/^f0100a74:	3b 0d 08 af 22 f0    	cmp    0xf022af08,%ecx$/;"	l
f0100a7a	obj/kern/kernel.asm	/^f0100a7a:	72 1b                	jb     f0100a97 <check_va2pa+0x39>$/;"	l
f0100a7c	obj/kern/kernel.asm	/^f0100a7c:	55                   	push   %ebp$/;"	l
f0100a7d	obj/kern/kernel.asm	/^f0100a7d:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a7f	obj/kern/kernel.asm	/^f0100a7f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100a82	obj/kern/kernel.asm	/^f0100a82:	50                   	push   %eax$/;"	l
f0100a83	obj/kern/kernel.asm	/^f0100a83:	68 a4 58 10 f0       	push   $0xf01058a4$/;"	l
f0100a88	obj/kern/kernel.asm	/^f0100a88:	68 e7 03 00 00       	push   $0x3e7$/;"	l
f0100a8d	obj/kern/kernel.asm	/^f0100a8d:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0100a92	obj/kern/kernel.asm	/^f0100a92:	e8 a9 f5 ff ff       	call   f0100040 <_panic>$/;"	l
f0100a97	obj/kern/kernel.asm	/^f0100a97:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100a9a	obj/kern/kernel.asm	/^f0100a9a:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f0100aa0	obj/kern/kernel.asm	/^f0100aa0:	8b 84 90 00 00 00 f0 	mov    -0x10000000(%eax,%edx,4),%eax$/;"	l
f0100aa7	obj/kern/kernel.asm	/^f0100aa7:	89 c2                	mov    %eax,%edx$/;"	l
f0100aa9	obj/kern/kernel.asm	/^f0100aa9:	83 e2 01             	and    $0x1,%edx$/;"	l
f0100aac	obj/kern/kernel.asm	/^f0100aac:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100ab1	obj/kern/kernel.asm	/^f0100ab1:	85 d2                	test   %edx,%edx$/;"	l
f0100ab3	obj/kern/kernel.asm	/^f0100ab3:	ba ff ff ff ff       	mov    $0xffffffff,%edx$/;"	l
f0100ab8	obj/kern/kernel.asm	/^f0100ab8:	0f 44 c2             	cmove  %edx,%eax$/;"	l
f0100abb	obj/kern/kernel.asm	/^f0100abb:	c3                   	ret    $/;"	l
f0100abc	obj/kern/kernel.asm	/^f0100abc:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100ac1	obj/kern/kernel.asm	/^f0100ac1:	c3                   	ret    $/;"	l
f0100ac2	obj/kern/kernel.asm	/^f0100ac2 <boot_alloc>:$/;"	l
f0100ac2	obj/kern/kernel.asm	/^f0100ac2:	55                   	push   %ebp$/;"	l
f0100ac3	obj/kern/kernel.asm	/^f0100ac3:	89 e5                	mov    %esp,%ebp$/;"	l
f0100ac5	obj/kern/kernel.asm	/^f0100ac5:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100ac8	obj/kern/kernel.asm	/^f0100ac8:	83 3d 38 a2 22 f0 00 	cmpl   $0x0,0xf022a238$/;"	l
f0100acf	obj/kern/kernel.asm	/^f0100acf:	75 72                	jne    f0100b43 <boot_alloc+0x81>$/;"	l
f0100ad1	obj/kern/kernel.asm	/^f0100ad1:	ba 07 d0 26 f0       	mov    $0xf026d007,%edx$/;"	l
f0100ad6	obj/kern/kernel.asm	/^f0100ad6:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0100adc	obj/kern/kernel.asm	/^f0100adc:	89 15 38 a2 22 f0    	mov    %edx,0xf022a238$/;"	l
f0100ae2	obj/kern/kernel.asm	/^f0100ae2:	85 c0                	test   %eax,%eax$/;"	l
f0100ae4	obj/kern/kernel.asm	/^f0100ae4:	75 07                	jne    f0100aed <boot_alloc+0x2b>$/;"	l
f0100ae6	obj/kern/kernel.asm	/^f0100ae6:	a1 38 a2 22 f0       	mov    0xf022a238,%eax$/;"	l
f0100aeb	obj/kern/kernel.asm	/^f0100aeb:	eb 5c                	jmp    f0100b49 <boot_alloc+0x87>$/;"	l
f0100aed	obj/kern/kernel.asm	/^f0100aed:	8b 15 38 a2 22 f0    	mov    0xf022a238,%edx$/;"	l
f0100af3	obj/kern/kernel.asm	/^f0100af3:	8d 84 02 ff 0f 00 00 	lea    0xfff(%edx,%eax,1),%eax$/;"	l
f0100afa	obj/kern/kernel.asm	/^f0100afa:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100aff	obj/kern/kernel.asm	/^f0100aff:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0100b04	obj/kern/kernel.asm	/^f0100b04:	77 12                	ja     f0100b18 <boot_alloc+0x56>$/;"	l
f0100b06	obj/kern/kernel.asm	/^f0100b06:	50                   	push   %eax$/;"	l
f0100b07	obj/kern/kernel.asm	/^f0100b07:	68 c8 58 10 f0       	push   $0xf01058c8$/;"	l
f0100b0c	obj/kern/kernel.asm	/^f0100b0c:	6a 6b                	push   $0x6b$/;"	l
f0100b0e	obj/kern/kernel.asm	/^f0100b0e:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0100b13	obj/kern/kernel.asm	/^f0100b13:	e8 28 f5 ff ff       	call   f0100040 <_panic>$/;"	l
f0100b18	obj/kern/kernel.asm	/^f0100b18:	8d 88 00 00 00 10    	lea    0x10000000(%eax),%ecx$/;"	l
f0100b1e	obj/kern/kernel.asm	/^f0100b1e:	81 f9 00 00 40 00    	cmp    $0x400000,%ecx$/;"	l
f0100b24	obj/kern/kernel.asm	/^f0100b24:	76 14                	jbe    f0100b3a <boot_alloc+0x78>$/;"	l
f0100b26	obj/kern/kernel.asm	/^f0100b26:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100b29	obj/kern/kernel.asm	/^f0100b29:	68 5d 67 10 f0       	push   $0xf010675d$/;"	l
f0100b2e	obj/kern/kernel.asm	/^f0100b2e:	6a 6c                	push   $0x6c$/;"	l
f0100b30	obj/kern/kernel.asm	/^f0100b30:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0100b35	obj/kern/kernel.asm	/^f0100b35:	e8 06 f5 ff ff       	call   f0100040 <_panic>$/;"	l
f0100b3a	obj/kern/kernel.asm	/^f0100b3a:	a3 38 a2 22 f0       	mov    %eax,0xf022a238$/;"	l
f0100b3f	obj/kern/kernel.asm	/^f0100b3f:	89 d0                	mov    %edx,%eax$/;"	l
f0100b41	obj/kern/kernel.asm	/^f0100b41:	eb 06                	jmp    f0100b49 <boot_alloc+0x87>$/;"	l
f0100b43	obj/kern/kernel.asm	/^f0100b43:	85 c0                	test   %eax,%eax$/;"	l
f0100b45	obj/kern/kernel.asm	/^f0100b45:	75 a6                	jne    f0100aed <boot_alloc+0x2b>$/;"	l
f0100b47	obj/kern/kernel.asm	/^f0100b47:	eb 9d                	jmp    f0100ae6 <boot_alloc+0x24>$/;"	l
f0100b49	obj/kern/kernel.asm	/^f0100b49:	c9                   	leave  $/;"	l
f0100b4a	obj/kern/kernel.asm	/^f0100b4a:	c3                   	ret    $/;"	l
f0100b4b	obj/kern/kernel.asm	/^f0100b4b <check_page_free_list>:$/;"	l
f0100b4b	obj/kern/kernel.asm	/^f0100b4b:	55                   	push   %ebp$/;"	l
f0100b4c	obj/kern/kernel.asm	/^f0100b4c:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b4e	obj/kern/kernel.asm	/^f0100b4e:	57                   	push   %edi$/;"	l
f0100b4f	obj/kern/kernel.asm	/^f0100b4f:	56                   	push   %esi$/;"	l
f0100b50	obj/kern/kernel.asm	/^f0100b50:	53                   	push   %ebx$/;"	l
f0100b51	obj/kern/kernel.asm	/^f0100b51:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0100b54	obj/kern/kernel.asm	/^f0100b54:	84 c0                	test   %al,%al$/;"	l
f0100b56	obj/kern/kernel.asm	/^f0100b56:	0f 85 a0 02 00 00    	jne    f0100dfc <check_page_free_list+0x2b1>$/;"	l
f0100b5c	obj/kern/kernel.asm	/^f0100b5c:	e9 ad 02 00 00       	jmp    f0100e0e <check_page_free_list+0x2c3>$/;"	l
f0100b61	obj/kern/kernel.asm	/^f0100b61:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100b64	obj/kern/kernel.asm	/^f0100b64:	68 04 5e 10 f0       	push   $0xf0105e04$/;"	l
f0100b69	obj/kern/kernel.asm	/^f0100b69:	68 1a 03 00 00       	push   $0x31a$/;"	l
f0100b6e	obj/kern/kernel.asm	/^f0100b6e:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0100b73	obj/kern/kernel.asm	/^f0100b73:	e8 c8 f4 ff ff       	call   f0100040 <_panic>$/;"	l
f0100b78	obj/kern/kernel.asm	/^f0100b78:	8d 55 d8             	lea    -0x28(%ebp),%edx$/;"	l
f0100b7b	obj/kern/kernel.asm	/^f0100b7b:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0100b7e	obj/kern/kernel.asm	/^f0100b7e:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0100b81	obj/kern/kernel.asm	/^f0100b81:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0100b84	obj/kern/kernel.asm	/^f0100b84:	89 c2                	mov    %eax,%edx$/;"	l
f0100b86	obj/kern/kernel.asm	/^f0100b86:	2b 15 10 af 22 f0    	sub    0xf022af10,%edx$/;"	l
f0100b8c	obj/kern/kernel.asm	/^f0100b8c:	f7 c2 00 e0 7f 00    	test   $0x7fe000,%edx$/;"	l
f0100b92	obj/kern/kernel.asm	/^f0100b92:	0f 95 c2             	setne  %dl$/;"	l
f0100b95	obj/kern/kernel.asm	/^f0100b95:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100b98	obj/kern/kernel.asm	/^f0100b98:	8b 4c 95 e0          	mov    -0x20(%ebp,%edx,4),%ecx$/;"	l
f0100b9c	obj/kern/kernel.asm	/^f0100b9c:	89 01                	mov    %eax,(%ecx)$/;"	l
f0100b9e	obj/kern/kernel.asm	/^f0100b9e:	89 44 95 e0          	mov    %eax,-0x20(%ebp,%edx,4)$/;"	l
f0100ba2	obj/kern/kernel.asm	/^f0100ba2:	8b 00                	mov    (%eax),%eax$/;"	l
f0100ba4	obj/kern/kernel.asm	/^f0100ba4:	85 c0                	test   %eax,%eax$/;"	l
f0100ba6	obj/kern/kernel.asm	/^f0100ba6:	75 dc                	jne    f0100b84 <check_page_free_list+0x39>$/;"	l
f0100ba8	obj/kern/kernel.asm	/^f0100ba8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100bab	obj/kern/kernel.asm	/^f0100bab:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0100bb1	obj/kern/kernel.asm	/^f0100bb1:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100bb4	obj/kern/kernel.asm	/^f0100bb4:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0100bb7	obj/kern/kernel.asm	/^f0100bb7:	89 10                	mov    %edx,(%eax)$/;"	l
f0100bb9	obj/kern/kernel.asm	/^f0100bb9:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0100bbc	obj/kern/kernel.asm	/^f0100bbc:	a3 40 a2 22 f0       	mov    %eax,0xf022a240$/;"	l
f0100bc1	obj/kern/kernel.asm	/^f0100bc1:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
f0100bc6	obj/kern/kernel.asm	/^f0100bc6:	8b 1d 40 a2 22 f0    	mov    0xf022a240,%ebx$/;"	l
f0100bcc	obj/kern/kernel.asm	/^f0100bcc:	eb 53                	jmp    f0100c21 <check_page_free_list+0xd6>$/;"	l
f0100bce	obj/kern/kernel.asm	/^f0100bce:	89 d8                	mov    %ebx,%eax$/;"	l
f0100bd0	obj/kern/kernel.asm	/^f0100bd0:	2b 05 10 af 22 f0    	sub    0xf022af10,%eax$/;"	l
f0100bd6	obj/kern/kernel.asm	/^f0100bd6:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100bd9	obj/kern/kernel.asm	/^f0100bd9:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100bdc	obj/kern/kernel.asm	/^f0100bdc:	89 c2                	mov    %eax,%edx$/;"	l
f0100bde	obj/kern/kernel.asm	/^f0100bde:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f0100be1	obj/kern/kernel.asm	/^f0100be1:	39 f2                	cmp    %esi,%edx$/;"	l
f0100be3	obj/kern/kernel.asm	/^f0100be3:	73 3a                	jae    f0100c1f <check_page_free_list+0xd4>$/;"	l
f0100be5	obj/kern/kernel.asm	/^f0100be5:	89 c2                	mov    %eax,%edx$/;"	l
f0100be7	obj/kern/kernel.asm	/^f0100be7:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100bea	obj/kern/kernel.asm	/^f0100bea:	3b 15 08 af 22 f0    	cmp    0xf022af08,%edx$/;"	l
f0100bf0	obj/kern/kernel.asm	/^f0100bf0:	72 12                	jb     f0100c04 <check_page_free_list+0xb9>$/;"	l
f0100bf2	obj/kern/kernel.asm	/^f0100bf2:	50                   	push   %eax$/;"	l
f0100bf3	obj/kern/kernel.asm	/^f0100bf3:	68 a4 58 10 f0       	push   $0xf01058a4$/;"	l
f0100bf8	obj/kern/kernel.asm	/^f0100bf8:	6a 58                	push   $0x58$/;"	l
f0100bfa	obj/kern/kernel.asm	/^f0100bfa:	68 78 67 10 f0       	push   $0xf0106778$/;"	l
f0100bff	obj/kern/kernel.asm	/^f0100bff:	e8 3c f4 ff ff       	call   f0100040 <_panic>$/;"	l
f0100c04	obj/kern/kernel.asm	/^f0100c04:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100c07	obj/kern/kernel.asm	/^f0100c07:	68 80 00 00 00       	push   $0x80$/;"	l
f0100c0c	obj/kern/kernel.asm	/^f0100c0c:	68 97 00 00 00       	push   $0x97$/;"	l
f0100c11	obj/kern/kernel.asm	/^f0100c11:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100c16	obj/kern/kernel.asm	/^f0100c16:	50                   	push   %eax$/;"	l
f0100c17	obj/kern/kernel.asm	/^f0100c17:	e8 b4 3f 00 00       	call   f0104bd0 <memset>$/;"	l
f0100c1c	obj/kern/kernel.asm	/^f0100c1c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100c1f	obj/kern/kernel.asm	/^f0100c1f:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f0100c21	obj/kern/kernel.asm	/^f0100c21:	85 db                	test   %ebx,%ebx$/;"	l
f0100c23	obj/kern/kernel.asm	/^f0100c23:	75 a9                	jne    f0100bce <check_page_free_list+0x83>$/;"	l
f0100c25	obj/kern/kernel.asm	/^f0100c25:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100c2a	obj/kern/kernel.asm	/^f0100c2a:	e8 93 fe ff ff       	call   f0100ac2 <boot_alloc>$/;"	l
f0100c2f	obj/kern/kernel.asm	/^f0100c2f:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0100c32	obj/kern/kernel.asm	/^f0100c32:	8b 15 40 a2 22 f0    	mov    0xf022a240,%edx$/;"	l
f0100c38	obj/kern/kernel.asm	/^f0100c38:	8b 0d 10 af 22 f0    	mov    0xf022af10,%ecx$/;"	l
f0100c3e	obj/kern/kernel.asm	/^f0100c3e:	a1 08 af 22 f0       	mov    0xf022af08,%eax$/;"	l
f0100c43	obj/kern/kernel.asm	/^f0100c43:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0100c46	obj/kern/kernel.asm	/^f0100c46:	8d 04 c1             	lea    (%ecx,%eax,8),%eax$/;"	l
f0100c49	obj/kern/kernel.asm	/^f0100c49:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0100c4c	obj/kern/kernel.asm	/^f0100c4c:	89 4d d0             	mov    %ecx,-0x30(%ebp)$/;"	l
f0100c4f	obj/kern/kernel.asm	/^f0100c4f:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100c54	obj/kern/kernel.asm	/^f0100c54:	e9 52 01 00 00       	jmp    f0100dab <check_page_free_list+0x260>$/;"	l
f0100c59	obj/kern/kernel.asm	/^f0100c59:	39 ca                	cmp    %ecx,%edx$/;"	l
f0100c5b	obj/kern/kernel.asm	/^f0100c5b:	73 19                	jae    f0100c76 <check_page_free_list+0x12b>$/;"	l
f0100c5d	obj/kern/kernel.asm	/^f0100c5d:	68 86 67 10 f0       	push   $0xf0106786$/;"	l
f0100c62	obj/kern/kernel.asm	/^f0100c62:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0100c67	obj/kern/kernel.asm	/^f0100c67:	68 34 03 00 00       	push   $0x334$/;"	l
f0100c6c	obj/kern/kernel.asm	/^f0100c6c:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0100c71	obj/kern/kernel.asm	/^f0100c71:	e8 ca f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100c76	obj/kern/kernel.asm	/^f0100c76:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
f0100c79	obj/kern/kernel.asm	/^f0100c79:	72 19                	jb     f0100c94 <check_page_free_list+0x149>$/;"	l
f0100c7b	obj/kern/kernel.asm	/^f0100c7b:	68 a7 67 10 f0       	push   $0xf01067a7$/;"	l
f0100c80	obj/kern/kernel.asm	/^f0100c80:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0100c85	obj/kern/kernel.asm	/^f0100c85:	68 35 03 00 00       	push   $0x335$/;"	l
f0100c8a	obj/kern/kernel.asm	/^f0100c8a:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0100c8f	obj/kern/kernel.asm	/^f0100c8f:	e8 ac f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100c94	obj/kern/kernel.asm	/^f0100c94:	89 d0                	mov    %edx,%eax$/;"	l
f0100c96	obj/kern/kernel.asm	/^f0100c96:	2b 45 d0             	sub    -0x30(%ebp),%eax$/;"	l
f0100c99	obj/kern/kernel.asm	/^f0100c99:	a8 07                	test   $0x7,%al$/;"	l
f0100c9b	obj/kern/kernel.asm	/^f0100c9b:	74 19                	je     f0100cb6 <check_page_free_list+0x16b>$/;"	l
f0100c9d	obj/kern/kernel.asm	/^f0100c9d:	68 28 5e 10 f0       	push   $0xf0105e28$/;"	l
f0100ca2	obj/kern/kernel.asm	/^f0100ca2:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0100ca7	obj/kern/kernel.asm	/^f0100ca7:	68 36 03 00 00       	push   $0x336$/;"	l
f0100cac	obj/kern/kernel.asm	/^f0100cac:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0100cb1	obj/kern/kernel.asm	/^f0100cb1:	e8 8a f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100cb6	obj/kern/kernel.asm	/^f0100cb6:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100cb9	obj/kern/kernel.asm	/^f0100cb9:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100cbc	obj/kern/kernel.asm	/^f0100cbc:	85 c0                	test   %eax,%eax$/;"	l
f0100cbe	obj/kern/kernel.asm	/^f0100cbe:	75 19                	jne    f0100cd9 <check_page_free_list+0x18e>$/;"	l
f0100cc0	obj/kern/kernel.asm	/^f0100cc0:	68 bb 67 10 f0       	push   $0xf01067bb$/;"	l
f0100cc5	obj/kern/kernel.asm	/^f0100cc5:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0100cca	obj/kern/kernel.asm	/^f0100cca:	68 39 03 00 00       	push   $0x339$/;"	l
f0100ccf	obj/kern/kernel.asm	/^f0100ccf:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0100cd4	obj/kern/kernel.asm	/^f0100cd4:	e8 67 f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100cd9	obj/kern/kernel.asm	/^f0100cd9:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
f0100cde	obj/kern/kernel.asm	/^f0100cde:	75 19                	jne    f0100cf9 <check_page_free_list+0x1ae>$/;"	l
f0100ce0	obj/kern/kernel.asm	/^f0100ce0:	68 cc 67 10 f0       	push   $0xf01067cc$/;"	l
f0100ce5	obj/kern/kernel.asm	/^f0100ce5:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0100cea	obj/kern/kernel.asm	/^f0100cea:	68 3a 03 00 00       	push   $0x33a$/;"	l
f0100cef	obj/kern/kernel.asm	/^f0100cef:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0100cf4	obj/kern/kernel.asm	/^f0100cf4:	e8 47 f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100cf9	obj/kern/kernel.asm	/^f0100cf9:	3d 00 f0 0f 00       	cmp    $0xff000,%eax$/;"	l
f0100cfe	obj/kern/kernel.asm	/^f0100cfe:	75 19                	jne    f0100d19 <check_page_free_list+0x1ce>$/;"	l
f0100d00	obj/kern/kernel.asm	/^f0100d00:	68 5c 5e 10 f0       	push   $0xf0105e5c$/;"	l
f0100d05	obj/kern/kernel.asm	/^f0100d05:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0100d0a	obj/kern/kernel.asm	/^f0100d0a:	68 3b 03 00 00       	push   $0x33b$/;"	l
f0100d0f	obj/kern/kernel.asm	/^f0100d0f:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0100d14	obj/kern/kernel.asm	/^f0100d14:	e8 27 f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100d19	obj/kern/kernel.asm	/^f0100d19:	3d 00 00 10 00       	cmp    $0x100000,%eax$/;"	l
f0100d1e	obj/kern/kernel.asm	/^f0100d1e:	75 19                	jne    f0100d39 <check_page_free_list+0x1ee>$/;"	l
f0100d20	obj/kern/kernel.asm	/^f0100d20:	68 e5 67 10 f0       	push   $0xf01067e5$/;"	l
f0100d25	obj/kern/kernel.asm	/^f0100d25:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0100d2a	obj/kern/kernel.asm	/^f0100d2a:	68 3c 03 00 00       	push   $0x33c$/;"	l
f0100d2f	obj/kern/kernel.asm	/^f0100d2f:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0100d34	obj/kern/kernel.asm	/^f0100d34:	e8 07 f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100d39	obj/kern/kernel.asm	/^f0100d39:	3d ff ff 0f 00       	cmp    $0xfffff,%eax$/;"	l
f0100d3e	obj/kern/kernel.asm	/^f0100d3e:	0f 86 f1 00 00 00    	jbe    f0100e35 <check_page_free_list+0x2ea>$/;"	l
f0100d44	obj/kern/kernel.asm	/^f0100d44:	89 c7                	mov    %eax,%edi$/;"	l
f0100d46	obj/kern/kernel.asm	/^f0100d46:	c1 ef 0c             	shr    $0xc,%edi$/;"	l
f0100d49	obj/kern/kernel.asm	/^f0100d49:	39 7d c8             	cmp    %edi,-0x38(%ebp)$/;"	l
f0100d4c	obj/kern/kernel.asm	/^f0100d4c:	77 12                	ja     f0100d60 <check_page_free_list+0x215>$/;"	l
f0100d4e	obj/kern/kernel.asm	/^f0100d4e:	50                   	push   %eax$/;"	l
f0100d4f	obj/kern/kernel.asm	/^f0100d4f:	68 a4 58 10 f0       	push   $0xf01058a4$/;"	l
f0100d54	obj/kern/kernel.asm	/^f0100d54:	6a 58                	push   $0x58$/;"	l
f0100d56	obj/kern/kernel.asm	/^f0100d56:	68 78 67 10 f0       	push   $0xf0106778$/;"	l
f0100d5b	obj/kern/kernel.asm	/^f0100d5b:	e8 e0 f2 ff ff       	call   f0100040 <_panic>$/;"	l
f0100d60	obj/kern/kernel.asm	/^f0100d60:	8d b8 00 00 00 f0    	lea    -0x10000000(%eax),%edi$/;"	l
f0100d66	obj/kern/kernel.asm	/^f0100d66:	39 7d cc             	cmp    %edi,-0x34(%ebp)$/;"	l
f0100d69	obj/kern/kernel.asm	/^f0100d69:	0f 86 b6 00 00 00    	jbe    f0100e25 <check_page_free_list+0x2da>$/;"	l
f0100d6f	obj/kern/kernel.asm	/^f0100d6f:	68 80 5e 10 f0       	push   $0xf0105e80$/;"	l
f0100d74	obj/kern/kernel.asm	/^f0100d74:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0100d79	obj/kern/kernel.asm	/^f0100d79:	68 3d 03 00 00       	push   $0x33d$/;"	l
f0100d7e	obj/kern/kernel.asm	/^f0100d7e:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0100d83	obj/kern/kernel.asm	/^f0100d83:	e8 b8 f2 ff ff       	call   f0100040 <_panic>$/;"	l
f0100d88	obj/kern/kernel.asm	/^f0100d88:	68 ff 67 10 f0       	push   $0xf01067ff$/;"	l
f0100d8d	obj/kern/kernel.asm	/^f0100d8d:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0100d92	obj/kern/kernel.asm	/^f0100d92:	68 3f 03 00 00       	push   $0x33f$/;"	l
f0100d97	obj/kern/kernel.asm	/^f0100d97:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0100d9c	obj/kern/kernel.asm	/^f0100d9c:	e8 9f f2 ff ff       	call   f0100040 <_panic>$/;"	l
f0100da1	obj/kern/kernel.asm	/^f0100da1:	83 c6 01             	add    $0x1,%esi$/;"	l
f0100da4	obj/kern/kernel.asm	/^f0100da4:	eb 03                	jmp    f0100da9 <check_page_free_list+0x25e>$/;"	l
f0100da6	obj/kern/kernel.asm	/^f0100da6:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100da9	obj/kern/kernel.asm	/^f0100da9:	8b 12                	mov    (%edx),%edx$/;"	l
f0100dab	obj/kern/kernel.asm	/^f0100dab:	85 d2                	test   %edx,%edx$/;"	l
f0100dad	obj/kern/kernel.asm	/^f0100dad:	0f 85 a6 fe ff ff    	jne    f0100c59 <check_page_free_list+0x10e>$/;"	l
f0100db3	obj/kern/kernel.asm	/^f0100db3:	85 f6                	test   %esi,%esi$/;"	l
f0100db5	obj/kern/kernel.asm	/^f0100db5:	7f 19                	jg     f0100dd0 <check_page_free_list+0x285>$/;"	l
f0100db7	obj/kern/kernel.asm	/^f0100db7:	68 1c 68 10 f0       	push   $0xf010681c$/;"	l
f0100dbc	obj/kern/kernel.asm	/^f0100dbc:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0100dc1	obj/kern/kernel.asm	/^f0100dc1:	68 47 03 00 00       	push   $0x347$/;"	l
f0100dc6	obj/kern/kernel.asm	/^f0100dc6:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0100dcb	obj/kern/kernel.asm	/^f0100dcb:	e8 70 f2 ff ff       	call   f0100040 <_panic>$/;"	l
f0100dd0	obj/kern/kernel.asm	/^f0100dd0:	85 db                	test   %ebx,%ebx$/;"	l
f0100dd2	obj/kern/kernel.asm	/^f0100dd2:	7f 19                	jg     f0100ded <check_page_free_list+0x2a2>$/;"	l
f0100dd4	obj/kern/kernel.asm	/^f0100dd4:	68 2e 68 10 f0       	push   $0xf010682e$/;"	l
f0100dd9	obj/kern/kernel.asm	/^f0100dd9:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0100dde	obj/kern/kernel.asm	/^f0100dde:	68 48 03 00 00       	push   $0x348$/;"	l
f0100de3	obj/kern/kernel.asm	/^f0100de3:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0100de8	obj/kern/kernel.asm	/^f0100de8:	e8 53 f2 ff ff       	call   f0100040 <_panic>$/;"	l
f0100ded	obj/kern/kernel.asm	/^f0100ded:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100df0	obj/kern/kernel.asm	/^f0100df0:	68 c8 5e 10 f0       	push   $0xf0105ec8$/;"	l
f0100df5	obj/kern/kernel.asm	/^f0100df5:	e8 ee 27 00 00       	call   f01035e8 <cprintf>$/;"	l
f0100dfa	obj/kern/kernel.asm	/^f0100dfa:	eb 49                	jmp    f0100e45 <check_page_free_list+0x2fa>$/;"	l
f0100dfc	obj/kern/kernel.asm	/^f0100dfc:	a1 40 a2 22 f0       	mov    0xf022a240,%eax$/;"	l
f0100e01	obj/kern/kernel.asm	/^f0100e01:	85 c0                	test   %eax,%eax$/;"	l
f0100e03	obj/kern/kernel.asm	/^f0100e03:	0f 85 6f fd ff ff    	jne    f0100b78 <check_page_free_list+0x2d>$/;"	l
f0100e09	obj/kern/kernel.asm	/^f0100e09:	e9 53 fd ff ff       	jmp    f0100b61 <check_page_free_list+0x16>$/;"	l
f0100e0e	obj/kern/kernel.asm	/^f0100e0e:	83 3d 40 a2 22 f0 00 	cmpl   $0x0,0xf022a240$/;"	l
f0100e15	obj/kern/kernel.asm	/^f0100e15:	0f 84 46 fd ff ff    	je     f0100b61 <check_page_free_list+0x16>$/;"	l
f0100e1b	obj/kern/kernel.asm	/^f0100e1b:	be 00 04 00 00       	mov    $0x400,%esi$/;"	l
f0100e20	obj/kern/kernel.asm	/^f0100e20:	e9 a1 fd ff ff       	jmp    f0100bc6 <check_page_free_list+0x7b>$/;"	l
f0100e25	obj/kern/kernel.asm	/^f0100e25:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f0100e2a	obj/kern/kernel.asm	/^f0100e2a:	0f 85 76 ff ff ff    	jne    f0100da6 <check_page_free_list+0x25b>$/;"	l
f0100e30	obj/kern/kernel.asm	/^f0100e30:	e9 53 ff ff ff       	jmp    f0100d88 <check_page_free_list+0x23d>$/;"	l
f0100e35	obj/kern/kernel.asm	/^f0100e35:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f0100e3a	obj/kern/kernel.asm	/^f0100e3a:	0f 85 61 ff ff ff    	jne    f0100da1 <check_page_free_list+0x256>$/;"	l
f0100e40	obj/kern/kernel.asm	/^f0100e40:	e9 43 ff ff ff       	jmp    f0100d88 <check_page_free_list+0x23d>$/;"	l
f0100e45	obj/kern/kernel.asm	/^f0100e45:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100e48	obj/kern/kernel.asm	/^f0100e48:	5b                   	pop    %ebx$/;"	l
f0100e49	obj/kern/kernel.asm	/^f0100e49:	5e                   	pop    %esi$/;"	l
f0100e4a	obj/kern/kernel.asm	/^f0100e4a:	5f                   	pop    %edi$/;"	l
f0100e4b	obj/kern/kernel.asm	/^f0100e4b:	5d                   	pop    %ebp$/;"	l
f0100e4c	obj/kern/kernel.asm	/^f0100e4c:	c3                   	ret    $/;"	l
f0100e4d	obj/kern/kernel.asm	/^f0100e4d <page_init>:$/;"	l
f0100e4d	obj/kern/kernel.asm	/^f0100e4d:	55                   	push   %ebp$/;"	l
f0100e4e	obj/kern/kernel.asm	/^f0100e4e:	89 e5                	mov    %esp,%ebp$/;"	l
f0100e50	obj/kern/kernel.asm	/^f0100e50:	56                   	push   %esi$/;"	l
f0100e51	obj/kern/kernel.asm	/^f0100e51:	53                   	push   %ebx$/;"	l
f0100e52	obj/kern/kernel.asm	/^f0100e52:	a1 10 af 22 f0       	mov    0xf022af10,%eax$/;"	l
f0100e57	obj/kern/kernel.asm	/^f0100e57:	66 c7 40 04 01 00    	movw   $0x1,0x4(%eax)$/;"	l
f0100e5d	obj/kern/kernel.asm	/^f0100e5d:	bb 00 10 00 00       	mov    $0x1000,%ebx$/;"	l
f0100e62	obj/kern/kernel.asm	/^f0100e62:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
f0100e67	obj/kern/kernel.asm	/^f0100e67:	e9 98 00 00 00       	jmp    f0100f04 <page_init+0xb7>$/;"	l
f0100e6c	obj/kern/kernel.asm	/^f0100e6c:	8d 83 00 00 f6 ff    	lea    -0xa0000(%ebx),%eax$/;"	l
f0100e72	obj/kern/kernel.asm	/^f0100e72:	3d ff ff 05 00       	cmp    $0x5ffff,%eax$/;"	l
f0100e77	obj/kern/kernel.asm	/^f0100e77:	76 44                	jbe    f0100ebd <page_init+0x70>$/;"	l
f0100e79	obj/kern/kernel.asm	/^f0100e79:	81 fb ff ff 0f 00    	cmp    $0xfffff,%ebx$/;"	l
f0100e7f	obj/kern/kernel.asm	/^f0100e7f:	76 2f                	jbe    f0100eb0 <page_init+0x63>$/;"	l
f0100e81	obj/kern/kernel.asm	/^f0100e81:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100e86	obj/kern/kernel.asm	/^f0100e86:	e8 37 fc ff ff       	call   f0100ac2 <boot_alloc>$/;"	l
f0100e8b	obj/kern/kernel.asm	/^f0100e8b:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0100e90	obj/kern/kernel.asm	/^f0100e90:	77 15                	ja     f0100ea7 <page_init+0x5a>$/;"	l
f0100e92	obj/kern/kernel.asm	/^f0100e92:	50                   	push   %eax$/;"	l
f0100e93	obj/kern/kernel.asm	/^f0100e93:	68 c8 58 10 f0       	push   $0xf01058c8$/;"	l
f0100e98	obj/kern/kernel.asm	/^f0100e98:	68 63 01 00 00       	push   $0x163$/;"	l
f0100e9d	obj/kern/kernel.asm	/^f0100e9d:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0100ea2	obj/kern/kernel.asm	/^f0100ea2:	e8 99 f1 ff ff       	call   f0100040 <_panic>$/;"	l
f0100ea7	obj/kern/kernel.asm	/^f0100ea7:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0100eac	obj/kern/kernel.asm	/^f0100eac:	39 d8                	cmp    %ebx,%eax$/;"	l
f0100eae	obj/kern/kernel.asm	/^f0100eae:	77 0d                	ja     f0100ebd <page_init+0x70>$/;"	l
f0100eb0	obj/kern/kernel.asm	/^f0100eb0:	8d 83 00 90 ff ff    	lea    -0x7000(%ebx),%eax$/;"	l
f0100eb6	obj/kern/kernel.asm	/^f0100eb6:	3d ff 0f 00 00       	cmp    $0xfff,%eax$/;"	l
f0100ebb	obj/kern/kernel.asm	/^f0100ebb:	77 16                	ja     f0100ed3 <page_init+0x86>$/;"	l
f0100ebd	obj/kern/kernel.asm	/^f0100ebd:	a1 10 af 22 f0       	mov    0xf022af10,%eax$/;"	l
f0100ec2	obj/kern/kernel.asm	/^f0100ec2:	8d 04 f0             	lea    (%eax,%esi,8),%eax$/;"	l
f0100ec5	obj/kern/kernel.asm	/^f0100ec5:	66 c7 40 04 01 00    	movw   $0x1,0x4(%eax)$/;"	l
f0100ecb	obj/kern/kernel.asm	/^f0100ecb:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0100ed1	obj/kern/kernel.asm	/^f0100ed1:	eb 28                	jmp    f0100efb <page_init+0xae>$/;"	l
f0100ed3	obj/kern/kernel.asm	/^f0100ed3:	8d 04 f5 00 00 00 00 	lea    0x0(,%esi,8),%eax$/;"	l
f0100eda	obj/kern/kernel.asm	/^f0100eda:	89 c2                	mov    %eax,%edx$/;"	l
f0100edc	obj/kern/kernel.asm	/^f0100edc:	03 15 10 af 22 f0    	add    0xf022af10,%edx$/;"	l
f0100ee2	obj/kern/kernel.asm	/^f0100ee2:	66 c7 42 04 00 00    	movw   $0x0,0x4(%edx)$/;"	l
f0100ee8	obj/kern/kernel.asm	/^f0100ee8:	8b 0d 40 a2 22 f0    	mov    0xf022a240,%ecx$/;"	l
f0100eee	obj/kern/kernel.asm	/^f0100eee:	89 0a                	mov    %ecx,(%edx)$/;"	l
f0100ef0	obj/kern/kernel.asm	/^f0100ef0:	03 05 10 af 22 f0    	add    0xf022af10,%eax$/;"	l
f0100ef6	obj/kern/kernel.asm	/^f0100ef6:	a3 40 a2 22 f0       	mov    %eax,0xf022a240$/;"	l
f0100efb	obj/kern/kernel.asm	/^f0100efb:	83 c6 01             	add    $0x1,%esi$/;"	l
f0100efe	obj/kern/kernel.asm	/^f0100efe:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0100f04	obj/kern/kernel.asm	/^f0100f04:	3b 35 08 af 22 f0    	cmp    0xf022af08,%esi$/;"	l
f0100f0a	obj/kern/kernel.asm	/^f0100f0a:	0f 82 5c ff ff ff    	jb     f0100e6c <page_init+0x1f>$/;"	l
f0100f10	obj/kern/kernel.asm	/^f0100f10:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0100f13	obj/kern/kernel.asm	/^f0100f13:	5b                   	pop    %ebx$/;"	l
f0100f14	obj/kern/kernel.asm	/^f0100f14:	5e                   	pop    %esi$/;"	l
f0100f15	obj/kern/kernel.asm	/^f0100f15:	5d                   	pop    %ebp$/;"	l
f0100f16	obj/kern/kernel.asm	/^f0100f16:	c3                   	ret    $/;"	l
f0100f17	obj/kern/kernel.asm	/^f0100f17 <page_alloc>:$/;"	l
f0100f17	obj/kern/kernel.asm	/^f0100f17:	55                   	push   %ebp$/;"	l
f0100f18	obj/kern/kernel.asm	/^f0100f18:	89 e5                	mov    %esp,%ebp$/;"	l
f0100f1a	obj/kern/kernel.asm	/^f0100f1a:	53                   	push   %ebx$/;"	l
f0100f1b	obj/kern/kernel.asm	/^f0100f1b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100f1e	obj/kern/kernel.asm	/^f0100f1e:	8b 1d 40 a2 22 f0    	mov    0xf022a240,%ebx$/;"	l
f0100f24	obj/kern/kernel.asm	/^f0100f24:	85 db                	test   %ebx,%ebx$/;"	l
f0100f26	obj/kern/kernel.asm	/^f0100f26:	74 58                	je     f0100f80 <page_alloc+0x69>$/;"	l
f0100f28	obj/kern/kernel.asm	/^f0100f28:	8b 03                	mov    (%ebx),%eax$/;"	l
f0100f2a	obj/kern/kernel.asm	/^f0100f2a:	a3 40 a2 22 f0       	mov    %eax,0xf022a240$/;"	l
f0100f2f	obj/kern/kernel.asm	/^f0100f2f:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)$/;"	l
f0100f35	obj/kern/kernel.asm	/^f0100f35:	f6 45 08 01          	testb  $0x1,0x8(%ebp)$/;"	l
f0100f39	obj/kern/kernel.asm	/^f0100f39:	74 45                	je     f0100f80 <page_alloc+0x69>$/;"	l
f0100f3b	obj/kern/kernel.asm	/^f0100f3b:	89 d8                	mov    %ebx,%eax$/;"	l
f0100f3d	obj/kern/kernel.asm	/^f0100f3d:	2b 05 10 af 22 f0    	sub    0xf022af10,%eax$/;"	l
f0100f43	obj/kern/kernel.asm	/^f0100f43:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100f46	obj/kern/kernel.asm	/^f0100f46:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100f49	obj/kern/kernel.asm	/^f0100f49:	89 c2                	mov    %eax,%edx$/;"	l
f0100f4b	obj/kern/kernel.asm	/^f0100f4b:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100f4e	obj/kern/kernel.asm	/^f0100f4e:	3b 15 08 af 22 f0    	cmp    0xf022af08,%edx$/;"	l
f0100f54	obj/kern/kernel.asm	/^f0100f54:	72 12                	jb     f0100f68 <page_alloc+0x51>$/;"	l
f0100f56	obj/kern/kernel.asm	/^f0100f56:	50                   	push   %eax$/;"	l
f0100f57	obj/kern/kernel.asm	/^f0100f57:	68 a4 58 10 f0       	push   $0xf01058a4$/;"	l
f0100f5c	obj/kern/kernel.asm	/^f0100f5c:	6a 58                	push   $0x58$/;"	l
f0100f5e	obj/kern/kernel.asm	/^f0100f5e:	68 78 67 10 f0       	push   $0xf0106778$/;"	l
f0100f63	obj/kern/kernel.asm	/^f0100f63:	e8 d8 f0 ff ff       	call   f0100040 <_panic>$/;"	l
f0100f68	obj/kern/kernel.asm	/^f0100f68:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100f6b	obj/kern/kernel.asm	/^f0100f6b:	68 00 10 00 00       	push   $0x1000$/;"	l
f0100f70	obj/kern/kernel.asm	/^f0100f70:	6a 00                	push   $0x0$/;"	l
f0100f72	obj/kern/kernel.asm	/^f0100f72:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100f77	obj/kern/kernel.asm	/^f0100f77:	50                   	push   %eax$/;"	l
f0100f78	obj/kern/kernel.asm	/^f0100f78:	e8 53 3c 00 00       	call   f0104bd0 <memset>$/;"	l
f0100f7d	obj/kern/kernel.asm	/^f0100f7d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100f80	obj/kern/kernel.asm	/^f0100f80:	89 d8                	mov    %ebx,%eax$/;"	l
f0100f82	obj/kern/kernel.asm	/^f0100f82:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0100f85	obj/kern/kernel.asm	/^f0100f85:	c9                   	leave  $/;"	l
f0100f86	obj/kern/kernel.asm	/^f0100f86:	c3                   	ret    $/;"	l
f0100f87	obj/kern/kernel.asm	/^f0100f87 <page_free>:$/;"	l
f0100f87	obj/kern/kernel.asm	/^f0100f87:	55                   	push   %ebp$/;"	l
f0100f88	obj/kern/kernel.asm	/^f0100f88:	89 e5                	mov    %esp,%ebp$/;"	l
f0100f8a	obj/kern/kernel.asm	/^f0100f8a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100f8d	obj/kern/kernel.asm	/^f0100f8d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100f90	obj/kern/kernel.asm	/^f0100f90:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)$/;"	l
f0100f95	obj/kern/kernel.asm	/^f0100f95:	75 05                	jne    f0100f9c <page_free+0x15>$/;"	l
f0100f97	obj/kern/kernel.asm	/^f0100f97:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f0100f9a	obj/kern/kernel.asm	/^f0100f9a:	74 17                	je     f0100fb3 <page_free+0x2c>$/;"	l
f0100f9c	obj/kern/kernel.asm	/^f0100f9c:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100f9f	obj/kern/kernel.asm	/^f0100f9f:	68 3f 68 10 f0       	push   $0xf010683f$/;"	l
f0100fa4	obj/kern/kernel.asm	/^f0100fa4:	68 b5 01 00 00       	push   $0x1b5$/;"	l
f0100fa9	obj/kern/kernel.asm	/^f0100fa9:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0100fae	obj/kern/kernel.asm	/^f0100fae:	e8 8d f0 ff ff       	call   f0100040 <_panic>$/;"	l
f0100fb3	obj/kern/kernel.asm	/^f0100fb3:	8b 15 40 a2 22 f0    	mov    0xf022a240,%edx$/;"	l
f0100fb9	obj/kern/kernel.asm	/^f0100fb9:	89 10                	mov    %edx,(%eax)$/;"	l
f0100fbb	obj/kern/kernel.asm	/^f0100fbb:	a3 40 a2 22 f0       	mov    %eax,0xf022a240$/;"	l
f0100fc0	obj/kern/kernel.asm	/^f0100fc0:	c9                   	leave  $/;"	l
f0100fc1	obj/kern/kernel.asm	/^f0100fc1:	c3                   	ret    $/;"	l
f0100fc2	obj/kern/kernel.asm	/^f0100fc2 <page_decref>:$/;"	l
f0100fc2	obj/kern/kernel.asm	/^f0100fc2:	55                   	push   %ebp$/;"	l
f0100fc3	obj/kern/kernel.asm	/^f0100fc3:	89 e5                	mov    %esp,%ebp$/;"	l
f0100fc5	obj/kern/kernel.asm	/^f0100fc5:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100fc8	obj/kern/kernel.asm	/^f0100fc8:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0100fcb	obj/kern/kernel.asm	/^f0100fcb:	0f b7 42 04          	movzwl 0x4(%edx),%eax$/;"	l
f0100fcf	obj/kern/kernel.asm	/^f0100fcf:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0100fd2	obj/kern/kernel.asm	/^f0100fd2:	66 89 42 04          	mov    %ax,0x4(%edx)$/;"	l
f0100fd6	obj/kern/kernel.asm	/^f0100fd6:	66 85 c0             	test   %ax,%ax$/;"	l
f0100fd9	obj/kern/kernel.asm	/^f0100fd9:	75 0c                	jne    f0100fe7 <page_decref+0x25>$/;"	l
f0100fdb	obj/kern/kernel.asm	/^f0100fdb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100fde	obj/kern/kernel.asm	/^f0100fde:	52                   	push   %edx$/;"	l
f0100fdf	obj/kern/kernel.asm	/^f0100fdf:	e8 a3 ff ff ff       	call   f0100f87 <page_free>$/;"	l
f0100fe4	obj/kern/kernel.asm	/^f0100fe4:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100fe7	obj/kern/kernel.asm	/^f0100fe7:	c9                   	leave  $/;"	l
f0100fe8	obj/kern/kernel.asm	/^f0100fe8:	c3                   	ret    $/;"	l
f0100fe9	obj/kern/kernel.asm	/^f0100fe9 <pgdir_walk>:$/;"	l
f0100fe9	obj/kern/kernel.asm	/^f0100fe9:	55                   	push   %ebp$/;"	l
f0100fea	obj/kern/kernel.asm	/^f0100fea:	89 e5                	mov    %esp,%ebp$/;"	l
f0100fec	obj/kern/kernel.asm	/^f0100fec:	56                   	push   %esi$/;"	l
f0100fed	obj/kern/kernel.asm	/^f0100fed:	53                   	push   %ebx$/;"	l
f0100fee	obj/kern/kernel.asm	/^f0100fee:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0100ff1	obj/kern/kernel.asm	/^f0100ff1:	89 de                	mov    %ebx,%esi$/;"	l
f0100ff3	obj/kern/kernel.asm	/^f0100ff3:	c1 ee 16             	shr    $0x16,%esi$/;"	l
f0100ff6	obj/kern/kernel.asm	/^f0100ff6:	c1 e6 02             	shl    $0x2,%esi$/;"	l
f0100ff9	obj/kern/kernel.asm	/^f0100ff9:	03 75 08             	add    0x8(%ebp),%esi$/;"	l
f0100ffc	obj/kern/kernel.asm	/^f0100ffc:	8b 06                	mov    (%esi),%eax$/;"	l
f0100ffe	obj/kern/kernel.asm	/^f0100ffe:	a8 01                	test   $0x1,%al$/;"	l
f0101000	obj/kern/kernel.asm	/^f0101000:	74 39                	je     f010103b <pgdir_walk+0x52>$/;"	l
f0101002	obj/kern/kernel.asm	/^f0101002:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101007	obj/kern/kernel.asm	/^f0101007:	89 c2                	mov    %eax,%edx$/;"	l
f0101009	obj/kern/kernel.asm	/^f0101009:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010100c	obj/kern/kernel.asm	/^f010100c:	39 15 08 af 22 f0    	cmp    %edx,0xf022af08$/;"	l
f0101012	obj/kern/kernel.asm	/^f0101012:	77 15                	ja     f0101029 <pgdir_walk+0x40>$/;"	l
f0101014	obj/kern/kernel.asm	/^f0101014:	50                   	push   %eax$/;"	l
f0101015	obj/kern/kernel.asm	/^f0101015:	68 a4 58 10 f0       	push   $0xf01058a4$/;"	l
f010101a	obj/kern/kernel.asm	/^f010101a:	68 ea 01 00 00       	push   $0x1ea$/;"	l
f010101f	obj/kern/kernel.asm	/^f010101f:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0101024	obj/kern/kernel.asm	/^f0101024:	e8 17 f0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101029	obj/kern/kernel.asm	/^f0101029:	c1 eb 0a             	shr    $0xa,%ebx$/;"	l
f010102c	obj/kern/kernel.asm	/^f010102c:	81 e3 fc 0f 00 00    	and    $0xffc,%ebx$/;"	l
f0101032	obj/kern/kernel.asm	/^f0101032:	8d 84 18 00 00 00 f0 	lea    -0x10000000(%eax,%ebx,1),%eax$/;"	l
f0101039	obj/kern/kernel.asm	/^f0101039:	eb 74                	jmp    f01010af <pgdir_walk+0xc6>$/;"	l
f010103b	obj/kern/kernel.asm	/^f010103b:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f010103f	obj/kern/kernel.asm	/^f010103f:	74 62                	je     f01010a3 <pgdir_walk+0xba>$/;"	l
f0101041	obj/kern/kernel.asm	/^f0101041:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101044	obj/kern/kernel.asm	/^f0101044:	6a 01                	push   $0x1$/;"	l
f0101046	obj/kern/kernel.asm	/^f0101046:	e8 cc fe ff ff       	call   f0100f17 <page_alloc>$/;"	l
f010104b	obj/kern/kernel.asm	/^f010104b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010104e	obj/kern/kernel.asm	/^f010104e:	85 c0                	test   %eax,%eax$/;"	l
f0101050	obj/kern/kernel.asm	/^f0101050:	74 58                	je     f01010aa <pgdir_walk+0xc1>$/;"	l
f0101052	obj/kern/kernel.asm	/^f0101052:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f0101057	obj/kern/kernel.asm	/^f0101057:	2b 05 10 af 22 f0    	sub    0xf022af10,%eax$/;"	l
f010105d	obj/kern/kernel.asm	/^f010105d:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101060	obj/kern/kernel.asm	/^f0101060:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101063	obj/kern/kernel.asm	/^f0101063:	89 c2                	mov    %eax,%edx$/;"	l
f0101065	obj/kern/kernel.asm	/^f0101065:	83 ca 07             	or     $0x7,%edx$/;"	l
f0101068	obj/kern/kernel.asm	/^f0101068:	89 16                	mov    %edx,(%esi)$/;"	l
f010106a	obj/kern/kernel.asm	/^f010106a:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010106f	obj/kern/kernel.asm	/^f010106f:	89 c2                	mov    %eax,%edx$/;"	l
f0101071	obj/kern/kernel.asm	/^f0101071:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101074	obj/kern/kernel.asm	/^f0101074:	3b 15 08 af 22 f0    	cmp    0xf022af08,%edx$/;"	l
f010107a	obj/kern/kernel.asm	/^f010107a:	72 15                	jb     f0101091 <pgdir_walk+0xa8>$/;"	l
f010107c	obj/kern/kernel.asm	/^f010107c:	50                   	push   %eax$/;"	l
f010107d	obj/kern/kernel.asm	/^f010107d:	68 a4 58 10 f0       	push   $0xf01058a4$/;"	l
f0101082	obj/kern/kernel.asm	/^f0101082:	68 f6 01 00 00       	push   $0x1f6$/;"	l
f0101087	obj/kern/kernel.asm	/^f0101087:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f010108c	obj/kern/kernel.asm	/^f010108c:	e8 af ef ff ff       	call   f0100040 <_panic>$/;"	l
f0101091	obj/kern/kernel.asm	/^f0101091:	c1 eb 0a             	shr    $0xa,%ebx$/;"	l
f0101094	obj/kern/kernel.asm	/^f0101094:	81 e3 fc 0f 00 00    	and    $0xffc,%ebx$/;"	l
f010109a	obj/kern/kernel.asm	/^f010109a:	8d 84 18 00 00 00 f0 	lea    -0x10000000(%eax,%ebx,1),%eax$/;"	l
f01010a1	obj/kern/kernel.asm	/^f01010a1:	eb 0c                	jmp    f01010af <pgdir_walk+0xc6>$/;"	l
f01010a3	obj/kern/kernel.asm	/^f01010a3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01010a8	obj/kern/kernel.asm	/^f01010a8:	eb 05                	jmp    f01010af <pgdir_walk+0xc6>$/;"	l
f01010aa	obj/kern/kernel.asm	/^f01010aa:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01010af	obj/kern/kernel.asm	/^f01010af:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f01010b2	obj/kern/kernel.asm	/^f01010b2:	5b                   	pop    %ebx$/;"	l
f01010b3	obj/kern/kernel.asm	/^f01010b3:	5e                   	pop    %esi$/;"	l
f01010b4	obj/kern/kernel.asm	/^f01010b4:	5d                   	pop    %ebp$/;"	l
f01010b5	obj/kern/kernel.asm	/^f01010b5:	c3                   	ret    $/;"	l
f01010b6	obj/kern/kernel.asm	/^f01010b6 <boot_map_region>:$/;"	l
f01010b6	obj/kern/kernel.asm	/^f01010b6:	55                   	push   %ebp$/;"	l
f01010b7	obj/kern/kernel.asm	/^f01010b7:	89 e5                	mov    %esp,%ebp$/;"	l
f01010b9	obj/kern/kernel.asm	/^f01010b9:	57                   	push   %edi$/;"	l
f01010ba	obj/kern/kernel.asm	/^f01010ba:	56                   	push   %esi$/;"	l
f01010bb	obj/kern/kernel.asm	/^f01010bb:	53                   	push   %ebx$/;"	l
f01010bc	obj/kern/kernel.asm	/^f01010bc:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01010bf	obj/kern/kernel.asm	/^f01010bf:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01010c2	obj/kern/kernel.asm	/^f01010c2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01010c5	obj/kern/kernel.asm	/^f01010c5:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f01010c8	obj/kern/kernel.asm	/^f01010c8:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f01010cb	obj/kern/kernel.asm	/^f01010cb:	89 c3                	mov    %eax,%ebx$/;"	l
f01010cd	obj/kern/kernel.asm	/^f01010cd:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01010d2	obj/kern/kernel.asm	/^f01010d2:	89 d7                	mov    %edx,%edi$/;"	l
f01010d4	obj/kern/kernel.asm	/^f01010d4:	29 c7                	sub    %eax,%edi$/;"	l
f01010d6	obj/kern/kernel.asm	/^f01010d6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01010d9	obj/kern/kernel.asm	/^f01010d9:	83 c8 01             	or     $0x1,%eax$/;"	l
f01010dc	obj/kern/kernel.asm	/^f01010dc:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f01010df	obj/kern/kernel.asm	/^f01010df:	eb 3f                	jmp    f0101120 <boot_map_region+0x6a>$/;"	l
f01010e1	obj/kern/kernel.asm	/^f01010e1:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01010e4	obj/kern/kernel.asm	/^f01010e4:	6a 01                	push   $0x1$/;"	l
f01010e6	obj/kern/kernel.asm	/^f01010e6:	8d 04 1f             	lea    (%edi,%ebx,1),%eax$/;"	l
f01010e9	obj/kern/kernel.asm	/^f01010e9:	50                   	push   %eax$/;"	l
f01010ea	obj/kern/kernel.asm	/^f01010ea:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f01010ed	obj/kern/kernel.asm	/^f01010ed:	e8 f7 fe ff ff       	call   f0100fe9 <pgdir_walk>$/;"	l
f01010f2	obj/kern/kernel.asm	/^f01010f2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01010f5	obj/kern/kernel.asm	/^f01010f5:	85 c0                	test   %eax,%eax$/;"	l
f01010f7	obj/kern/kernel.asm	/^f01010f7:	75 17                	jne    f0101110 <boot_map_region+0x5a>$/;"	l
f01010f9	obj/kern/kernel.asm	/^f01010f9:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01010fc	obj/kern/kernel.asm	/^f01010fc:	68 ec 5e 10 f0       	push   $0xf0105eec$/;"	l
f0101101	obj/kern/kernel.asm	/^f0101101:	68 0a 02 00 00       	push   $0x20a$/;"	l
f0101106	obj/kern/kernel.asm	/^f0101106:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f010110b	obj/kern/kernel.asm	/^f010110b:	e8 30 ef ff ff       	call   f0100040 <_panic>$/;"	l
f0101110	obj/kern/kernel.asm	/^f0101110:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0101113	obj/kern/kernel.asm	/^f0101113:	09 da                	or     %ebx,%edx$/;"	l
f0101115	obj/kern/kernel.asm	/^f0101115:	89 10                	mov    %edx,(%eax)$/;"	l
f0101117	obj/kern/kernel.asm	/^f0101117:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f010111d	obj/kern/kernel.asm	/^f010111d:	83 c6 01             	add    $0x1,%esi$/;"	l
f0101120	obj/kern/kernel.asm	/^f0101120:	3b 75 e4             	cmp    -0x1c(%ebp),%esi$/;"	l
f0101123	obj/kern/kernel.asm	/^f0101123:	75 bc                	jne    f01010e1 <boot_map_region+0x2b>$/;"	l
f0101125	obj/kern/kernel.asm	/^f0101125:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0101128	obj/kern/kernel.asm	/^f0101128:	5b                   	pop    %ebx$/;"	l
f0101129	obj/kern/kernel.asm	/^f0101129:	5e                   	pop    %esi$/;"	l
f010112a	obj/kern/kernel.asm	/^f010112a:	5f                   	pop    %edi$/;"	l
f010112b	obj/kern/kernel.asm	/^f010112b:	5d                   	pop    %ebp$/;"	l
f010112c	obj/kern/kernel.asm	/^f010112c:	c3                   	ret    $/;"	l
f010112d	obj/kern/kernel.asm	/^f010112d <page_lookup>:$/;"	l
f010112d	obj/kern/kernel.asm	/^f010112d:	55                   	push   %ebp$/;"	l
f010112e	obj/kern/kernel.asm	/^f010112e:	89 e5                	mov    %esp,%ebp$/;"	l
f0101130	obj/kern/kernel.asm	/^f0101130:	53                   	push   %ebx$/;"	l
f0101131	obj/kern/kernel.asm	/^f0101131:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101134	obj/kern/kernel.asm	/^f0101134:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0101137	obj/kern/kernel.asm	/^f0101137:	6a 00                	push   $0x0$/;"	l
f0101139	obj/kern/kernel.asm	/^f0101139:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010113c	obj/kern/kernel.asm	/^f010113c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010113f	obj/kern/kernel.asm	/^f010113f:	e8 a5 fe ff ff       	call   f0100fe9 <pgdir_walk>$/;"	l
f0101144	obj/kern/kernel.asm	/^f0101144:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101147	obj/kern/kernel.asm	/^f0101147:	85 c0                	test   %eax,%eax$/;"	l
f0101149	obj/kern/kernel.asm	/^f0101149:	74 32                	je     f010117d <page_lookup+0x50>$/;"	l
f010114b	obj/kern/kernel.asm	/^f010114b:	85 db                	test   %ebx,%ebx$/;"	l
f010114d	obj/kern/kernel.asm	/^f010114d:	74 02                	je     f0101151 <page_lookup+0x24>$/;"	l
f010114f	obj/kern/kernel.asm	/^f010114f:	89 03                	mov    %eax,(%ebx)$/;"	l
f0101151	obj/kern/kernel.asm	/^f0101151:	8b 00                	mov    (%eax),%eax$/;"	l
f0101153	obj/kern/kernel.asm	/^f0101153:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0101156	obj/kern/kernel.asm	/^f0101156:	3b 05 08 af 22 f0    	cmp    0xf022af08,%eax$/;"	l
f010115c	obj/kern/kernel.asm	/^f010115c:	72 14                	jb     f0101172 <page_lookup+0x45>$/;"	l
f010115e	obj/kern/kernel.asm	/^f010115e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101161	obj/kern/kernel.asm	/^f0101161:	68 18 5f 10 f0       	push   $0xf0105f18$/;"	l
f0101166	obj/kern/kernel.asm	/^f0101166:	6a 51                	push   $0x51$/;"	l
f0101168	obj/kern/kernel.asm	/^f0101168:	68 78 67 10 f0       	push   $0xf0106778$/;"	l
f010116d	obj/kern/kernel.asm	/^f010116d:	e8 ce ee ff ff       	call   f0100040 <_panic>$/;"	l
f0101172	obj/kern/kernel.asm	/^f0101172:	8b 15 10 af 22 f0    	mov    0xf022af10,%edx$/;"	l
f0101178	obj/kern/kernel.asm	/^f0101178:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f010117b	obj/kern/kernel.asm	/^f010117b:	eb 05                	jmp    f0101182 <page_lookup+0x55>$/;"	l
f010117d	obj/kern/kernel.asm	/^f010117d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101182	obj/kern/kernel.asm	/^f0101182:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0101185	obj/kern/kernel.asm	/^f0101185:	c9                   	leave  $/;"	l
f0101186	obj/kern/kernel.asm	/^f0101186:	c3                   	ret    $/;"	l
f0101187	obj/kern/kernel.asm	/^f0101187 <tlb_invalidate>:$/;"	l
f0101187	obj/kern/kernel.asm	/^f0101187:	55                   	push   %ebp$/;"	l
f0101188	obj/kern/kernel.asm	/^f0101188:	89 e5                	mov    %esp,%ebp$/;"	l
f010118a	obj/kern/kernel.asm	/^f010118a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010118d	obj/kern/kernel.asm	/^f010118d:	e8 60 40 00 00       	call   f01051f2 <cpunum>$/;"	l
f0101192	obj/kern/kernel.asm	/^f0101192:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0101195	obj/kern/kernel.asm	/^f0101195:	83 b8 28 b0 22 f0 00 	cmpl   $0x0,-0xfdd4fd8(%eax)$/;"	l
f010119c	obj/kern/kernel.asm	/^f010119c:	74 16                	je     f01011b4 <tlb_invalidate+0x2d>$/;"	l
f010119e	obj/kern/kernel.asm	/^f010119e:	e8 4f 40 00 00       	call   f01051f2 <cpunum>$/;"	l
f01011a3	obj/kern/kernel.asm	/^f01011a3:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01011a6	obj/kern/kernel.asm	/^f01011a6:	8b 80 28 b0 22 f0    	mov    -0xfdd4fd8(%eax),%eax$/;"	l
f01011ac	obj/kern/kernel.asm	/^f01011ac:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01011af	obj/kern/kernel.asm	/^f01011af:	39 50 60             	cmp    %edx,0x60(%eax)$/;"	l
f01011b2	obj/kern/kernel.asm	/^f01011b2:	75 06                	jne    f01011ba <tlb_invalidate+0x33>$/;"	l
f01011b4	obj/kern/kernel.asm	/^f01011b4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01011b7	obj/kern/kernel.asm	/^f01011b7:	0f 01 38             	invlpg (%eax)$/;"	l
f01011ba	obj/kern/kernel.asm	/^f01011ba:	c9                   	leave  $/;"	l
f01011bb	obj/kern/kernel.asm	/^f01011bb:	c3                   	ret    $/;"	l
f01011bc	obj/kern/kernel.asm	/^f01011bc <page_remove>:$/;"	l
f01011bc	obj/kern/kernel.asm	/^f01011bc:	55                   	push   %ebp$/;"	l
f01011bd	obj/kern/kernel.asm	/^f01011bd:	89 e5                	mov    %esp,%ebp$/;"	l
f01011bf	obj/kern/kernel.asm	/^f01011bf:	56                   	push   %esi$/;"	l
f01011c0	obj/kern/kernel.asm	/^f01011c0:	53                   	push   %ebx$/;"	l
f01011c1	obj/kern/kernel.asm	/^f01011c1:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01011c4	obj/kern/kernel.asm	/^f01011c4:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01011c7	obj/kern/kernel.asm	/^f01011c7:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01011ca	obj/kern/kernel.asm	/^f01011ca:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f01011cd	obj/kern/kernel.asm	/^f01011cd:	50                   	push   %eax$/;"	l
f01011ce	obj/kern/kernel.asm	/^f01011ce:	56                   	push   %esi$/;"	l
f01011cf	obj/kern/kernel.asm	/^f01011cf:	53                   	push   %ebx$/;"	l
f01011d0	obj/kern/kernel.asm	/^f01011d0:	e8 58 ff ff ff       	call   f010112d <page_lookup>$/;"	l
f01011d5	obj/kern/kernel.asm	/^f01011d5:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f01011d8	obj/kern/kernel.asm	/^f01011d8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01011db	obj/kern/kernel.asm	/^f01011db:	85 d2                	test   %edx,%edx$/;"	l
f01011dd	obj/kern/kernel.asm	/^f01011dd:	74 24                	je     f0101203 <page_remove+0x47>$/;"	l
f01011df	obj/kern/kernel.asm	/^f01011df:	f6 02 01             	testb  $0x1,(%edx)$/;"	l
f01011e2	obj/kern/kernel.asm	/^f01011e2:	74 1f                	je     f0101203 <page_remove+0x47>$/;"	l
f01011e4	obj/kern/kernel.asm	/^f01011e4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01011e7	obj/kern/kernel.asm	/^f01011e7:	50                   	push   %eax$/;"	l
f01011e8	obj/kern/kernel.asm	/^f01011e8:	e8 d5 fd ff ff       	call   f0100fc2 <page_decref>$/;"	l
f01011ed	obj/kern/kernel.asm	/^f01011ed:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01011f0	obj/kern/kernel.asm	/^f01011f0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01011f6	obj/kern/kernel.asm	/^f01011f6:	83 c4 08             	add    $0x8,%esp$/;"	l
f01011f9	obj/kern/kernel.asm	/^f01011f9:	56                   	push   %esi$/;"	l
f01011fa	obj/kern/kernel.asm	/^f01011fa:	53                   	push   %ebx$/;"	l
f01011fb	obj/kern/kernel.asm	/^f01011fb:	e8 87 ff ff ff       	call   f0101187 <tlb_invalidate>$/;"	l
f0101200	obj/kern/kernel.asm	/^f0101200:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101203	obj/kern/kernel.asm	/^f0101203:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0101206	obj/kern/kernel.asm	/^f0101206:	5b                   	pop    %ebx$/;"	l
f0101207	obj/kern/kernel.asm	/^f0101207:	5e                   	pop    %esi$/;"	l
f0101208	obj/kern/kernel.asm	/^f0101208:	5d                   	pop    %ebp$/;"	l
f0101209	obj/kern/kernel.asm	/^f0101209:	c3                   	ret    $/;"	l
f010120a	obj/kern/kernel.asm	/^f010120a <page_insert>:$/;"	l
f010120a	obj/kern/kernel.asm	/^f010120a:	55                   	push   %ebp$/;"	l
f010120b	obj/kern/kernel.asm	/^f010120b:	89 e5                	mov    %esp,%ebp$/;"	l
f010120d	obj/kern/kernel.asm	/^f010120d:	57                   	push   %edi$/;"	l
f010120e	obj/kern/kernel.asm	/^f010120e:	56                   	push   %esi$/;"	l
f010120f	obj/kern/kernel.asm	/^f010120f:	53                   	push   %ebx$/;"	l
f0101210	obj/kern/kernel.asm	/^f0101210:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0101213	obj/kern/kernel.asm	/^f0101213:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0101216	obj/kern/kernel.asm	/^f0101216:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f0101219	obj/kern/kernel.asm	/^f0101219:	6a 01                	push   $0x1$/;"	l
f010121b	obj/kern/kernel.asm	/^f010121b:	57                   	push   %edi$/;"	l
f010121c	obj/kern/kernel.asm	/^f010121c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010121f	obj/kern/kernel.asm	/^f010121f:	e8 c5 fd ff ff       	call   f0100fe9 <pgdir_walk>$/;"	l
f0101224	obj/kern/kernel.asm	/^f0101224:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101227	obj/kern/kernel.asm	/^f0101227:	85 c0                	test   %eax,%eax$/;"	l
f0101229	obj/kern/kernel.asm	/^f0101229:	74 38                	je     f0101263 <page_insert+0x59>$/;"	l
f010122b	obj/kern/kernel.asm	/^f010122b:	89 c6                	mov    %eax,%esi$/;"	l
f010122d	obj/kern/kernel.asm	/^f010122d:	66 83 43 04 01       	addw   $0x1,0x4(%ebx)$/;"	l
f0101232	obj/kern/kernel.asm	/^f0101232:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f0101235	obj/kern/kernel.asm	/^f0101235:	74 0f                	je     f0101246 <page_insert+0x3c>$/;"	l
f0101237	obj/kern/kernel.asm	/^f0101237:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010123a	obj/kern/kernel.asm	/^f010123a:	57                   	push   %edi$/;"	l
f010123b	obj/kern/kernel.asm	/^f010123b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010123e	obj/kern/kernel.asm	/^f010123e:	e8 79 ff ff ff       	call   f01011bc <page_remove>$/;"	l
f0101243	obj/kern/kernel.asm	/^f0101243:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101246	obj/kern/kernel.asm	/^f0101246:	2b 1d 10 af 22 f0    	sub    0xf022af10,%ebx$/;"	l
f010124c	obj/kern/kernel.asm	/^f010124c:	c1 fb 03             	sar    $0x3,%ebx$/;"	l
f010124f	obj/kern/kernel.asm	/^f010124f:	c1 e3 0c             	shl    $0xc,%ebx$/;"	l
f0101252	obj/kern/kernel.asm	/^f0101252:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101255	obj/kern/kernel.asm	/^f0101255:	83 c8 01             	or     $0x1,%eax$/;"	l
f0101258	obj/kern/kernel.asm	/^f0101258:	09 c3                	or     %eax,%ebx$/;"	l
f010125a	obj/kern/kernel.asm	/^f010125a:	89 1e                	mov    %ebx,(%esi)$/;"	l
f010125c	obj/kern/kernel.asm	/^f010125c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101261	obj/kern/kernel.asm	/^f0101261:	eb 05                	jmp    f0101268 <page_insert+0x5e>$/;"	l
f0101263	obj/kern/kernel.asm	/^f0101263:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0101268	obj/kern/kernel.asm	/^f0101268:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010126b	obj/kern/kernel.asm	/^f010126b:	5b                   	pop    %ebx$/;"	l
f010126c	obj/kern/kernel.asm	/^f010126c:	5e                   	pop    %esi$/;"	l
f010126d	obj/kern/kernel.asm	/^f010126d:	5f                   	pop    %edi$/;"	l
f010126e	obj/kern/kernel.asm	/^f010126e:	5d                   	pop    %ebp$/;"	l
f010126f	obj/kern/kernel.asm	/^f010126f:	c3                   	ret    $/;"	l
f0101270	obj/kern/kernel.asm	/^f0101270 <mmio_map_region>:$/;"	l
f0101270	obj/kern/kernel.asm	/^f0101270:	55                   	push   %ebp$/;"	l
f0101271	obj/kern/kernel.asm	/^f0101271:	89 e5                	mov    %esp,%ebp$/;"	l
f0101273	obj/kern/kernel.asm	/^f0101273:	53                   	push   %ebx$/;"	l
f0101274	obj/kern/kernel.asm	/^f0101274:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101277	obj/kern/kernel.asm	/^f0101277:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010127a	obj/kern/kernel.asm	/^f010127a:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010127d	obj/kern/kernel.asm	/^f010127d:	8d 9c 10 ff 0f 00 00 	lea    0xfff(%eax,%edx,1),%ebx$/;"	l
f0101284	obj/kern/kernel.asm	/^f0101284:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101289	obj/kern/kernel.asm	/^f0101289:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f010128f	obj/kern/kernel.asm	/^f010128f:	29 c3                	sub    %eax,%ebx$/;"	l
f0101291	obj/kern/kernel.asm	/^f0101291:	8b 15 00 f3 11 f0    	mov    0xf011f300,%edx$/;"	l
f0101297	obj/kern/kernel.asm	/^f0101297:	8d 0c 13             	lea    (%ebx,%edx,1),%ecx$/;"	l
f010129a	obj/kern/kernel.asm	/^f010129a:	81 f9 ff ff bf ef    	cmp    $0xefbfffff,%ecx$/;"	l
f01012a0	obj/kern/kernel.asm	/^f01012a0:	76 17                	jbe    f01012b9 <mmio_map_region+0x49>$/;"	l
f01012a2	obj/kern/kernel.asm	/^f01012a2:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01012a5	obj/kern/kernel.asm	/^f01012a5:	68 5c 68 10 f0       	push   $0xf010685c$/;"	l
f01012aa	obj/kern/kernel.asm	/^f01012aa:	68 8d 02 00 00       	push   $0x28d$/;"	l
f01012af	obj/kern/kernel.asm	/^f01012af:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f01012b4	obj/kern/kernel.asm	/^f01012b4:	e8 87 ed ff ff       	call   f0100040 <_panic>$/;"	l
f01012b9	obj/kern/kernel.asm	/^f01012b9:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01012bc	obj/kern/kernel.asm	/^f01012bc:	6a 1a                	push   $0x1a$/;"	l
f01012be	obj/kern/kernel.asm	/^f01012be:	50                   	push   %eax$/;"	l
f01012bf	obj/kern/kernel.asm	/^f01012bf:	89 d9                	mov    %ebx,%ecx$/;"	l
f01012c1	obj/kern/kernel.asm	/^f01012c1:	a1 0c af 22 f0       	mov    0xf022af0c,%eax$/;"	l
f01012c6	obj/kern/kernel.asm	/^f01012c6:	e8 eb fd ff ff       	call   f01010b6 <boot_map_region>$/;"	l
f01012cb	obj/kern/kernel.asm	/^f01012cb:	a1 00 f3 11 f0       	mov    0xf011f300,%eax$/;"	l
f01012d0	obj/kern/kernel.asm	/^f01012d0:	01 c3                	add    %eax,%ebx$/;"	l
f01012d2	obj/kern/kernel.asm	/^f01012d2:	89 1d 00 f3 11 f0    	mov    %ebx,0xf011f300$/;"	l
f01012d8	obj/kern/kernel.asm	/^f01012d8:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01012db	obj/kern/kernel.asm	/^f01012db:	c9                   	leave  $/;"	l
f01012dc	obj/kern/kernel.asm	/^f01012dc:	c3                   	ret    $/;"	l
f01012dd	obj/kern/kernel.asm	/^f01012dd <mem_init>:$/;"	l
f01012dd	obj/kern/kernel.asm	/^f01012dd:	55                   	push   %ebp$/;"	l
f01012de	obj/kern/kernel.asm	/^f01012de:	89 e5                	mov    %esp,%ebp$/;"	l
f01012e0	obj/kern/kernel.asm	/^f01012e0:	57                   	push   %edi$/;"	l
f01012e1	obj/kern/kernel.asm	/^f01012e1:	56                   	push   %esi$/;"	l
f01012e2	obj/kern/kernel.asm	/^f01012e2:	53                   	push   %ebx$/;"	l
f01012e3	obj/kern/kernel.asm	/^f01012e3:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01012e6	obj/kern/kernel.asm	/^f01012e6:	b8 15 00 00 00       	mov    $0x15,%eax$/;"	l
f01012eb	obj/kern/kernel.asm	/^f01012eb:	e8 45 f7 ff ff       	call   f0100a35 <nvram_read>$/;"	l
f01012f0	obj/kern/kernel.asm	/^f01012f0:	89 c3                	mov    %eax,%ebx$/;"	l
f01012f2	obj/kern/kernel.asm	/^f01012f2:	b8 17 00 00 00       	mov    $0x17,%eax$/;"	l
f01012f7	obj/kern/kernel.asm	/^f01012f7:	e8 39 f7 ff ff       	call   f0100a35 <nvram_read>$/;"	l
f01012fc	obj/kern/kernel.asm	/^f01012fc:	89 c6                	mov    %eax,%esi$/;"	l
f01012fe	obj/kern/kernel.asm	/^f01012fe:	b8 34 00 00 00       	mov    $0x34,%eax$/;"	l
f0101303	obj/kern/kernel.asm	/^f0101303:	e8 2d f7 ff ff       	call   f0100a35 <nvram_read>$/;"	l
f0101308	obj/kern/kernel.asm	/^f0101308:	c1 e0 06             	shl    $0x6,%eax$/;"	l
f010130b	obj/kern/kernel.asm	/^f010130b:	85 c0                	test   %eax,%eax$/;"	l
f010130d	obj/kern/kernel.asm	/^f010130d:	74 07                	je     f0101316 <mem_init+0x39>$/;"	l
f010130f	obj/kern/kernel.asm	/^f010130f:	05 00 40 00 00       	add    $0x4000,%eax$/;"	l
f0101314	obj/kern/kernel.asm	/^f0101314:	eb 0b                	jmp    f0101321 <mem_init+0x44>$/;"	l
f0101316	obj/kern/kernel.asm	/^f0101316:	8d 86 00 04 00 00    	lea    0x400(%esi),%eax$/;"	l
f010131c	obj/kern/kernel.asm	/^f010131c:	85 f6                	test   %esi,%esi$/;"	l
f010131e	obj/kern/kernel.asm	/^f010131e:	0f 44 c3             	cmove  %ebx,%eax$/;"	l
f0101321	obj/kern/kernel.asm	/^f0101321:	89 c2                	mov    %eax,%edx$/;"	l
f0101323	obj/kern/kernel.asm	/^f0101323:	c1 ea 02             	shr    $0x2,%edx$/;"	l
f0101326	obj/kern/kernel.asm	/^f0101326:	89 15 08 af 22 f0    	mov    %edx,0xf022af08$/;"	l
f010132c	obj/kern/kernel.asm	/^f010132c:	89 c2                	mov    %eax,%edx$/;"	l
f010132e	obj/kern/kernel.asm	/^f010132e:	29 da                	sub    %ebx,%edx$/;"	l
f0101330	obj/kern/kernel.asm	/^f0101330:	52                   	push   %edx$/;"	l
f0101331	obj/kern/kernel.asm	/^f0101331:	53                   	push   %ebx$/;"	l
f0101332	obj/kern/kernel.asm	/^f0101332:	50                   	push   %eax$/;"	l
f0101333	obj/kern/kernel.asm	/^f0101333:	68 38 5f 10 f0       	push   $0xf0105f38$/;"	l
f0101338	obj/kern/kernel.asm	/^f0101338:	e8 ab 22 00 00       	call   f01035e8 <cprintf>$/;"	l
f010133d	obj/kern/kernel.asm	/^f010133d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101342	obj/kern/kernel.asm	/^f0101342:	e8 7b f7 ff ff       	call   f0100ac2 <boot_alloc>$/;"	l
f0101347	obj/kern/kernel.asm	/^f0101347:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax$/;"	l
f010134c	obj/kern/kernel.asm	/^f010134c:	e8 71 f7 ff ff       	call   f0100ac2 <boot_alloc>$/;"	l
f0101351	obj/kern/kernel.asm	/^f0101351:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
f0101356	obj/kern/kernel.asm	/^f0101356:	e8 67 f7 ff ff       	call   f0100ac2 <boot_alloc>$/;"	l
f010135b	obj/kern/kernel.asm	/^f010135b:	a3 0c af 22 f0       	mov    %eax,0xf022af0c$/;"	l
f0101360	obj/kern/kernel.asm	/^f0101360:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0101363	obj/kern/kernel.asm	/^f0101363:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101368	obj/kern/kernel.asm	/^f0101368:	6a 00                	push   $0x0$/;"	l
f010136a	obj/kern/kernel.asm	/^f010136a:	50                   	push   %eax$/;"	l
f010136b	obj/kern/kernel.asm	/^f010136b:	e8 60 38 00 00       	call   f0104bd0 <memset>$/;"	l
f0101370	obj/kern/kernel.asm	/^f0101370:	a1 0c af 22 f0       	mov    0xf022af0c,%eax$/;"	l
f0101375	obj/kern/kernel.asm	/^f0101375:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101378	obj/kern/kernel.asm	/^f0101378:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010137d	obj/kern/kernel.asm	/^f010137d:	77 15                	ja     f0101394 <mem_init+0xb7>$/;"	l
f010137f	obj/kern/kernel.asm	/^f010137f:	50                   	push   %eax$/;"	l
f0101380	obj/kern/kernel.asm	/^f0101380:	68 c8 58 10 f0       	push   $0xf01058c8$/;"	l
f0101385	obj/kern/kernel.asm	/^f0101385:	68 9c 00 00 00       	push   $0x9c$/;"	l
f010138a	obj/kern/kernel.asm	/^f010138a:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f010138f	obj/kern/kernel.asm	/^f010138f:	e8 ac ec ff ff       	call   f0100040 <_panic>$/;"	l
f0101394	obj/kern/kernel.asm	/^f0101394:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f010139a	obj/kern/kernel.asm	/^f010139a:	83 ca 05             	or     $0x5,%edx$/;"	l
f010139d	obj/kern/kernel.asm	/^f010139d:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f01013a3	obj/kern/kernel.asm	/^f01013a3:	a1 08 af 22 f0       	mov    0xf022af08,%eax$/;"	l
f01013a8	obj/kern/kernel.asm	/^f01013a8:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f01013ab	obj/kern/kernel.asm	/^f01013ab:	e8 12 f7 ff ff       	call   f0100ac2 <boot_alloc>$/;"	l
f01013b0	obj/kern/kernel.asm	/^f01013b0:	a3 10 af 22 f0       	mov    %eax,0xf022af10$/;"	l
f01013b5	obj/kern/kernel.asm	/^f01013b5:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01013b8	obj/kern/kernel.asm	/^f01013b8:	8b 0d 08 af 22 f0    	mov    0xf022af08,%ecx$/;"	l
f01013be	obj/kern/kernel.asm	/^f01013be:	8d 14 cd 00 00 00 00 	lea    0x0(,%ecx,8),%edx$/;"	l
f01013c5	obj/kern/kernel.asm	/^f01013c5:	52                   	push   %edx$/;"	l
f01013c6	obj/kern/kernel.asm	/^f01013c6:	6a 00                	push   $0x0$/;"	l
f01013c8	obj/kern/kernel.asm	/^f01013c8:	50                   	push   %eax$/;"	l
f01013c9	obj/kern/kernel.asm	/^f01013c9:	e8 02 38 00 00       	call   f0104bd0 <memset>$/;"	l
f01013ce	obj/kern/kernel.asm	/^f01013ce:	b8 00 f0 01 00       	mov    $0x1f000,%eax$/;"	l
f01013d3	obj/kern/kernel.asm	/^f01013d3:	e8 ea f6 ff ff       	call   f0100ac2 <boot_alloc>$/;"	l
f01013d8	obj/kern/kernel.asm	/^f01013d8:	a3 44 a2 22 f0       	mov    %eax,0xf022a244$/;"	l
f01013dd	obj/kern/kernel.asm	/^f01013dd:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01013e0	obj/kern/kernel.asm	/^f01013e0:	68 00 f0 01 00       	push   $0x1f000$/;"	l
f01013e5	obj/kern/kernel.asm	/^f01013e5:	6a 00                	push   $0x0$/;"	l
f01013e7	obj/kern/kernel.asm	/^f01013e7:	50                   	push   %eax$/;"	l
f01013e8	obj/kern/kernel.asm	/^f01013e8:	e8 e3 37 00 00       	call   f0104bd0 <memset>$/;"	l
f01013ed	obj/kern/kernel.asm	/^f01013ed:	e8 5b fa ff ff       	call   f0100e4d <page_init>$/;"	l
f01013f2	obj/kern/kernel.asm	/^f01013f2:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01013f7	obj/kern/kernel.asm	/^f01013f7:	e8 4f f7 ff ff       	call   f0100b4b <check_page_free_list>$/;"	l
f01013fc	obj/kern/kernel.asm	/^f01013fc:	83 c4 10             	add    $0x10,%esp$/;"	l
f01013ff	obj/kern/kernel.asm	/^f01013ff:	83 3d 10 af 22 f0 00 	cmpl   $0x0,0xf022af10$/;"	l
f0101406	obj/kern/kernel.asm	/^f0101406:	75 17                	jne    f010141f <mem_init+0x142>$/;"	l
f0101408	obj/kern/kernel.asm	/^f0101408:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010140b	obj/kern/kernel.asm	/^f010140b:	68 6e 68 10 f0       	push   $0xf010686e$/;"	l
f0101410	obj/kern/kernel.asm	/^f0101410:	68 5b 03 00 00       	push   $0x35b$/;"	l
f0101415	obj/kern/kernel.asm	/^f0101415:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f010141a	obj/kern/kernel.asm	/^f010141a:	e8 21 ec ff ff       	call   f0100040 <_panic>$/;"	l
f010141f	obj/kern/kernel.asm	/^f010141f:	a1 40 a2 22 f0       	mov    0xf022a240,%eax$/;"	l
f0101424	obj/kern/kernel.asm	/^f0101424:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0101429	obj/kern/kernel.asm	/^f0101429:	eb 05                	jmp    f0101430 <mem_init+0x153>$/;"	l
f010142b	obj/kern/kernel.asm	/^f010142b:	83 c3 01             	add    $0x1,%ebx$/;"	l
f010142e	obj/kern/kernel.asm	/^f010142e:	8b 00                	mov    (%eax),%eax$/;"	l
f0101430	obj/kern/kernel.asm	/^f0101430:	85 c0                	test   %eax,%eax$/;"	l
f0101432	obj/kern/kernel.asm	/^f0101432:	75 f7                	jne    f010142b <mem_init+0x14e>$/;"	l
f0101434	obj/kern/kernel.asm	/^f0101434:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101437	obj/kern/kernel.asm	/^f0101437:	6a 00                	push   $0x0$/;"	l
f0101439	obj/kern/kernel.asm	/^f0101439:	e8 d9 fa ff ff       	call   f0100f17 <page_alloc>$/;"	l
f010143e	obj/kern/kernel.asm	/^f010143e:	89 c7                	mov    %eax,%edi$/;"	l
f0101440	obj/kern/kernel.asm	/^f0101440:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101443	obj/kern/kernel.asm	/^f0101443:	85 c0                	test   %eax,%eax$/;"	l
f0101445	obj/kern/kernel.asm	/^f0101445:	75 19                	jne    f0101460 <mem_init+0x183>$/;"	l
f0101447	obj/kern/kernel.asm	/^f0101447:	68 89 68 10 f0       	push   $0xf0106889$/;"	l
f010144c	obj/kern/kernel.asm	/^f010144c:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0101451	obj/kern/kernel.asm	/^f0101451:	68 63 03 00 00       	push   $0x363$/;"	l
f0101456	obj/kern/kernel.asm	/^f0101456:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f010145b	obj/kern/kernel.asm	/^f010145b:	e8 e0 eb ff ff       	call   f0100040 <_panic>$/;"	l
f0101460	obj/kern/kernel.asm	/^f0101460:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101463	obj/kern/kernel.asm	/^f0101463:	6a 00                	push   $0x0$/;"	l
f0101465	obj/kern/kernel.asm	/^f0101465:	e8 ad fa ff ff       	call   f0100f17 <page_alloc>$/;"	l
f010146a	obj/kern/kernel.asm	/^f010146a:	89 c6                	mov    %eax,%esi$/;"	l
f010146c	obj/kern/kernel.asm	/^f010146c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010146f	obj/kern/kernel.asm	/^f010146f:	85 c0                	test   %eax,%eax$/;"	l
f0101471	obj/kern/kernel.asm	/^f0101471:	75 19                	jne    f010148c <mem_init+0x1af>$/;"	l
f0101473	obj/kern/kernel.asm	/^f0101473:	68 9f 68 10 f0       	push   $0xf010689f$/;"	l
f0101478	obj/kern/kernel.asm	/^f0101478:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f010147d	obj/kern/kernel.asm	/^f010147d:	68 64 03 00 00       	push   $0x364$/;"	l
f0101482	obj/kern/kernel.asm	/^f0101482:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0101487	obj/kern/kernel.asm	/^f0101487:	e8 b4 eb ff ff       	call   f0100040 <_panic>$/;"	l
f010148c	obj/kern/kernel.asm	/^f010148c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010148f	obj/kern/kernel.asm	/^f010148f:	6a 00                	push   $0x0$/;"	l
f0101491	obj/kern/kernel.asm	/^f0101491:	e8 81 fa ff ff       	call   f0100f17 <page_alloc>$/;"	l
f0101496	obj/kern/kernel.asm	/^f0101496:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101499	obj/kern/kernel.asm	/^f0101499:	83 c4 10             	add    $0x10,%esp$/;"	l
f010149c	obj/kern/kernel.asm	/^f010149c:	85 c0                	test   %eax,%eax$/;"	l
f010149e	obj/kern/kernel.asm	/^f010149e:	75 19                	jne    f01014b9 <mem_init+0x1dc>$/;"	l
f01014a0	obj/kern/kernel.asm	/^f01014a0:	68 b5 68 10 f0       	push   $0xf01068b5$/;"	l
f01014a5	obj/kern/kernel.asm	/^f01014a5:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f01014aa	obj/kern/kernel.asm	/^f01014aa:	68 65 03 00 00       	push   $0x365$/;"	l
f01014af	obj/kern/kernel.asm	/^f01014af:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f01014b4	obj/kern/kernel.asm	/^f01014b4:	e8 87 eb ff ff       	call   f0100040 <_panic>$/;"	l
f01014b9	obj/kern/kernel.asm	/^f01014b9:	39 f7                	cmp    %esi,%edi$/;"	l
f01014bb	obj/kern/kernel.asm	/^f01014bb:	75 19                	jne    f01014d6 <mem_init+0x1f9>$/;"	l
f01014bd	obj/kern/kernel.asm	/^f01014bd:	68 cb 68 10 f0       	push   $0xf01068cb$/;"	l
f01014c2	obj/kern/kernel.asm	/^f01014c2:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f01014c7	obj/kern/kernel.asm	/^f01014c7:	68 68 03 00 00       	push   $0x368$/;"	l
f01014cc	obj/kern/kernel.asm	/^f01014cc:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f01014d1	obj/kern/kernel.asm	/^f01014d1:	e8 6a eb ff ff       	call   f0100040 <_panic>$/;"	l
f01014d6	obj/kern/kernel.asm	/^f01014d6:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01014d9	obj/kern/kernel.asm	/^f01014d9:	39 c6                	cmp    %eax,%esi$/;"	l
f01014db	obj/kern/kernel.asm	/^f01014db:	74 04                	je     f01014e1 <mem_init+0x204>$/;"	l
f01014dd	obj/kern/kernel.asm	/^f01014dd:	39 c7                	cmp    %eax,%edi$/;"	l
f01014df	obj/kern/kernel.asm	/^f01014df:	75 19                	jne    f01014fa <mem_init+0x21d>$/;"	l
f01014e1	obj/kern/kernel.asm	/^f01014e1:	68 74 5f 10 f0       	push   $0xf0105f74$/;"	l
f01014e6	obj/kern/kernel.asm	/^f01014e6:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f01014eb	obj/kern/kernel.asm	/^f01014eb:	68 69 03 00 00       	push   $0x369$/;"	l
f01014f0	obj/kern/kernel.asm	/^f01014f0:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f01014f5	obj/kern/kernel.asm	/^f01014f5:	e8 46 eb ff ff       	call   f0100040 <_panic>$/;"	l
f01014fa	obj/kern/kernel.asm	/^f01014fa:	8b 0d 10 af 22 f0    	mov    0xf022af10,%ecx$/;"	l
f0101500	obj/kern/kernel.asm	/^f0101500:	8b 15 08 af 22 f0    	mov    0xf022af08,%edx$/;"	l
f0101506	obj/kern/kernel.asm	/^f0101506:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101509	obj/kern/kernel.asm	/^f0101509:	89 f8                	mov    %edi,%eax$/;"	l
f010150b	obj/kern/kernel.asm	/^f010150b:	29 c8                	sub    %ecx,%eax$/;"	l
f010150d	obj/kern/kernel.asm	/^f010150d:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101510	obj/kern/kernel.asm	/^f0101510:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101513	obj/kern/kernel.asm	/^f0101513:	39 d0                	cmp    %edx,%eax$/;"	l
f0101515	obj/kern/kernel.asm	/^f0101515:	72 19                	jb     f0101530 <mem_init+0x253>$/;"	l
f0101517	obj/kern/kernel.asm	/^f0101517:	68 dd 68 10 f0       	push   $0xf01068dd$/;"	l
f010151c	obj/kern/kernel.asm	/^f010151c:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0101521	obj/kern/kernel.asm	/^f0101521:	68 6a 03 00 00       	push   $0x36a$/;"	l
f0101526	obj/kern/kernel.asm	/^f0101526:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f010152b	obj/kern/kernel.asm	/^f010152b:	e8 10 eb ff ff       	call   f0100040 <_panic>$/;"	l
f0101530	obj/kern/kernel.asm	/^f0101530:	89 f0                	mov    %esi,%eax$/;"	l
f0101532	obj/kern/kernel.asm	/^f0101532:	29 c8                	sub    %ecx,%eax$/;"	l
f0101534	obj/kern/kernel.asm	/^f0101534:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101537	obj/kern/kernel.asm	/^f0101537:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010153a	obj/kern/kernel.asm	/^f010153a:	39 c2                	cmp    %eax,%edx$/;"	l
f010153c	obj/kern/kernel.asm	/^f010153c:	77 19                	ja     f0101557 <mem_init+0x27a>$/;"	l
f010153e	obj/kern/kernel.asm	/^f010153e:	68 fa 68 10 f0       	push   $0xf01068fa$/;"	l
f0101543	obj/kern/kernel.asm	/^f0101543:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0101548	obj/kern/kernel.asm	/^f0101548:	68 6b 03 00 00       	push   $0x36b$/;"	l
f010154d	obj/kern/kernel.asm	/^f010154d:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0101552	obj/kern/kernel.asm	/^f0101552:	e8 e9 ea ff ff       	call   f0100040 <_panic>$/;"	l
f0101557	obj/kern/kernel.asm	/^f0101557:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010155a	obj/kern/kernel.asm	/^f010155a:	29 c8                	sub    %ecx,%eax$/;"	l
f010155c	obj/kern/kernel.asm	/^f010155c:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010155f	obj/kern/kernel.asm	/^f010155f:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101562	obj/kern/kernel.asm	/^f0101562:	39 c2                	cmp    %eax,%edx$/;"	l
f0101564	obj/kern/kernel.asm	/^f0101564:	77 19                	ja     f010157f <mem_init+0x2a2>$/;"	l
f0101566	obj/kern/kernel.asm	/^f0101566:	68 17 69 10 f0       	push   $0xf0106917$/;"	l
f010156b	obj/kern/kernel.asm	/^f010156b:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0101570	obj/kern/kernel.asm	/^f0101570:	68 6c 03 00 00       	push   $0x36c$/;"	l
f0101575	obj/kern/kernel.asm	/^f0101575:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f010157a	obj/kern/kernel.asm	/^f010157a:	e8 c1 ea ff ff       	call   f0100040 <_panic>$/;"	l
f010157f	obj/kern/kernel.asm	/^f010157f:	a1 40 a2 22 f0       	mov    0xf022a240,%eax$/;"	l
f0101584	obj/kern/kernel.asm	/^f0101584:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0101587	obj/kern/kernel.asm	/^f0101587:	c7 05 40 a2 22 f0 00 	movl   $0x0,0xf022a240$/;"	l
f010158e	obj/kern/kernel.asm	/^f010158e:	00 00 00 $/;"	l
f0101591	obj/kern/kernel.asm	/^f0101591:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101594	obj/kern/kernel.asm	/^f0101594:	6a 00                	push   $0x0$/;"	l
f0101596	obj/kern/kernel.asm	/^f0101596:	e8 7c f9 ff ff       	call   f0100f17 <page_alloc>$/;"	l
f010159b	obj/kern/kernel.asm	/^f010159b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010159e	obj/kern/kernel.asm	/^f010159e:	85 c0                	test   %eax,%eax$/;"	l
f01015a0	obj/kern/kernel.asm	/^f01015a0:	74 19                	je     f01015bb <mem_init+0x2de>$/;"	l
f01015a2	obj/kern/kernel.asm	/^f01015a2:	68 34 69 10 f0       	push   $0xf0106934$/;"	l
f01015a7	obj/kern/kernel.asm	/^f01015a7:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f01015ac	obj/kern/kernel.asm	/^f01015ac:	68 73 03 00 00       	push   $0x373$/;"	l
f01015b1	obj/kern/kernel.asm	/^f01015b1:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f01015b6	obj/kern/kernel.asm	/^f01015b6:	e8 85 ea ff ff       	call   f0100040 <_panic>$/;"	l
f01015bb	obj/kern/kernel.asm	/^f01015bb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01015be	obj/kern/kernel.asm	/^f01015be:	57                   	push   %edi$/;"	l
f01015bf	obj/kern/kernel.asm	/^f01015bf:	e8 c3 f9 ff ff       	call   f0100f87 <page_free>$/;"	l
f01015c4	obj/kern/kernel.asm	/^f01015c4:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01015c7	obj/kern/kernel.asm	/^f01015c7:	e8 bb f9 ff ff       	call   f0100f87 <page_free>$/;"	l
f01015cc	obj/kern/kernel.asm	/^f01015cc:	83 c4 04             	add    $0x4,%esp$/;"	l
f01015cf	obj/kern/kernel.asm	/^f01015cf:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f01015d2	obj/kern/kernel.asm	/^f01015d2:	e8 b0 f9 ff ff       	call   f0100f87 <page_free>$/;"	l
f01015d7	obj/kern/kernel.asm	/^f01015d7:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01015de	obj/kern/kernel.asm	/^f01015de:	e8 34 f9 ff ff       	call   f0100f17 <page_alloc>$/;"	l
f01015e3	obj/kern/kernel.asm	/^f01015e3:	89 c6                	mov    %eax,%esi$/;"	l
f01015e5	obj/kern/kernel.asm	/^f01015e5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01015e8	obj/kern/kernel.asm	/^f01015e8:	85 c0                	test   %eax,%eax$/;"	l
f01015ea	obj/kern/kernel.asm	/^f01015ea:	75 19                	jne    f0101605 <mem_init+0x328>$/;"	l
f01015ec	obj/kern/kernel.asm	/^f01015ec:	68 89 68 10 f0       	push   $0xf0106889$/;"	l
f01015f1	obj/kern/kernel.asm	/^f01015f1:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f01015f6	obj/kern/kernel.asm	/^f01015f6:	68 7a 03 00 00       	push   $0x37a$/;"	l
f01015fb	obj/kern/kernel.asm	/^f01015fb:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0101600	obj/kern/kernel.asm	/^f0101600:	e8 3b ea ff ff       	call   f0100040 <_panic>$/;"	l
f0101605	obj/kern/kernel.asm	/^f0101605:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101608	obj/kern/kernel.asm	/^f0101608:	6a 00                	push   $0x0$/;"	l
f010160a	obj/kern/kernel.asm	/^f010160a:	e8 08 f9 ff ff       	call   f0100f17 <page_alloc>$/;"	l
f010160f	obj/kern/kernel.asm	/^f010160f:	89 c7                	mov    %eax,%edi$/;"	l
f0101611	obj/kern/kernel.asm	/^f0101611:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101614	obj/kern/kernel.asm	/^f0101614:	85 c0                	test   %eax,%eax$/;"	l
f0101616	obj/kern/kernel.asm	/^f0101616:	75 19                	jne    f0101631 <mem_init+0x354>$/;"	l
f0101618	obj/kern/kernel.asm	/^f0101618:	68 9f 68 10 f0       	push   $0xf010689f$/;"	l
f010161d	obj/kern/kernel.asm	/^f010161d:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0101622	obj/kern/kernel.asm	/^f0101622:	68 7b 03 00 00       	push   $0x37b$/;"	l
f0101627	obj/kern/kernel.asm	/^f0101627:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f010162c	obj/kern/kernel.asm	/^f010162c:	e8 0f ea ff ff       	call   f0100040 <_panic>$/;"	l
f0101631	obj/kern/kernel.asm	/^f0101631:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101634	obj/kern/kernel.asm	/^f0101634:	6a 00                	push   $0x0$/;"	l
f0101636	obj/kern/kernel.asm	/^f0101636:	e8 dc f8 ff ff       	call   f0100f17 <page_alloc>$/;"	l
f010163b	obj/kern/kernel.asm	/^f010163b:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010163e	obj/kern/kernel.asm	/^f010163e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101641	obj/kern/kernel.asm	/^f0101641:	85 c0                	test   %eax,%eax$/;"	l
f0101643	obj/kern/kernel.asm	/^f0101643:	75 19                	jne    f010165e <mem_init+0x381>$/;"	l
f0101645	obj/kern/kernel.asm	/^f0101645:	68 b5 68 10 f0       	push   $0xf01068b5$/;"	l
f010164a	obj/kern/kernel.asm	/^f010164a:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f010164f	obj/kern/kernel.asm	/^f010164f:	68 7c 03 00 00       	push   $0x37c$/;"	l
f0101654	obj/kern/kernel.asm	/^f0101654:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0101659	obj/kern/kernel.asm	/^f0101659:	e8 e2 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f010165e	obj/kern/kernel.asm	/^f010165e:	39 fe                	cmp    %edi,%esi$/;"	l
f0101660	obj/kern/kernel.asm	/^f0101660:	75 19                	jne    f010167b <mem_init+0x39e>$/;"	l
f0101662	obj/kern/kernel.asm	/^f0101662:	68 cb 68 10 f0       	push   $0xf01068cb$/;"	l
f0101667	obj/kern/kernel.asm	/^f0101667:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f010166c	obj/kern/kernel.asm	/^f010166c:	68 7e 03 00 00       	push   $0x37e$/;"	l
f0101671	obj/kern/kernel.asm	/^f0101671:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0101676	obj/kern/kernel.asm	/^f0101676:	e8 c5 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f010167b	obj/kern/kernel.asm	/^f010167b:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010167e	obj/kern/kernel.asm	/^f010167e:	39 c7                	cmp    %eax,%edi$/;"	l
f0101680	obj/kern/kernel.asm	/^f0101680:	74 04                	je     f0101686 <mem_init+0x3a9>$/;"	l
f0101682	obj/kern/kernel.asm	/^f0101682:	39 c6                	cmp    %eax,%esi$/;"	l
f0101684	obj/kern/kernel.asm	/^f0101684:	75 19                	jne    f010169f <mem_init+0x3c2>$/;"	l
f0101686	obj/kern/kernel.asm	/^f0101686:	68 74 5f 10 f0       	push   $0xf0105f74$/;"	l
f010168b	obj/kern/kernel.asm	/^f010168b:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0101690	obj/kern/kernel.asm	/^f0101690:	68 7f 03 00 00       	push   $0x37f$/;"	l
f0101695	obj/kern/kernel.asm	/^f0101695:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f010169a	obj/kern/kernel.asm	/^f010169a:	e8 a1 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f010169f	obj/kern/kernel.asm	/^f010169f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01016a2	obj/kern/kernel.asm	/^f01016a2:	6a 00                	push   $0x0$/;"	l
f01016a4	obj/kern/kernel.asm	/^f01016a4:	e8 6e f8 ff ff       	call   f0100f17 <page_alloc>$/;"	l
f01016a9	obj/kern/kernel.asm	/^f01016a9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01016ac	obj/kern/kernel.asm	/^f01016ac:	85 c0                	test   %eax,%eax$/;"	l
f01016ae	obj/kern/kernel.asm	/^f01016ae:	74 19                	je     f01016c9 <mem_init+0x3ec>$/;"	l
f01016b0	obj/kern/kernel.asm	/^f01016b0:	68 34 69 10 f0       	push   $0xf0106934$/;"	l
f01016b5	obj/kern/kernel.asm	/^f01016b5:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f01016ba	obj/kern/kernel.asm	/^f01016ba:	68 80 03 00 00       	push   $0x380$/;"	l
f01016bf	obj/kern/kernel.asm	/^f01016bf:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f01016c4	obj/kern/kernel.asm	/^f01016c4:	e8 77 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f01016c9	obj/kern/kernel.asm	/^f01016c9:	89 f0                	mov    %esi,%eax$/;"	l
f01016cb	obj/kern/kernel.asm	/^f01016cb:	2b 05 10 af 22 f0    	sub    0xf022af10,%eax$/;"	l
f01016d1	obj/kern/kernel.asm	/^f01016d1:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01016d4	obj/kern/kernel.asm	/^f01016d4:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01016d7	obj/kern/kernel.asm	/^f01016d7:	89 c2                	mov    %eax,%edx$/;"	l
f01016d9	obj/kern/kernel.asm	/^f01016d9:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01016dc	obj/kern/kernel.asm	/^f01016dc:	3b 15 08 af 22 f0    	cmp    0xf022af08,%edx$/;"	l
f01016e2	obj/kern/kernel.asm	/^f01016e2:	72 12                	jb     f01016f6 <mem_init+0x419>$/;"	l
f01016e4	obj/kern/kernel.asm	/^f01016e4:	50                   	push   %eax$/;"	l
f01016e5	obj/kern/kernel.asm	/^f01016e5:	68 a4 58 10 f0       	push   $0xf01058a4$/;"	l
f01016ea	obj/kern/kernel.asm	/^f01016ea:	6a 58                	push   $0x58$/;"	l
f01016ec	obj/kern/kernel.asm	/^f01016ec:	68 78 67 10 f0       	push   $0xf0106778$/;"	l
f01016f1	obj/kern/kernel.asm	/^f01016f1:	e8 4a e9 ff ff       	call   f0100040 <_panic>$/;"	l
f01016f6	obj/kern/kernel.asm	/^f01016f6:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01016f9	obj/kern/kernel.asm	/^f01016f9:	68 00 10 00 00       	push   $0x1000$/;"	l
f01016fe	obj/kern/kernel.asm	/^f01016fe:	6a 01                	push   $0x1$/;"	l
f0101700	obj/kern/kernel.asm	/^f0101700:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101705	obj/kern/kernel.asm	/^f0101705:	50                   	push   %eax$/;"	l
f0101706	obj/kern/kernel.asm	/^f0101706:	e8 c5 34 00 00       	call   f0104bd0 <memset>$/;"	l
f010170b	obj/kern/kernel.asm	/^f010170b:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010170e	obj/kern/kernel.asm	/^f010170e:	e8 74 f8 ff ff       	call   f0100f87 <page_free>$/;"	l
f0101713	obj/kern/kernel.asm	/^f0101713:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f010171a	obj/kern/kernel.asm	/^f010171a:	e8 f8 f7 ff ff       	call   f0100f17 <page_alloc>$/;"	l
f010171f	obj/kern/kernel.asm	/^f010171f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101722	obj/kern/kernel.asm	/^f0101722:	85 c0                	test   %eax,%eax$/;"	l
f0101724	obj/kern/kernel.asm	/^f0101724:	75 19                	jne    f010173f <mem_init+0x462>$/;"	l
f0101726	obj/kern/kernel.asm	/^f0101726:	68 43 69 10 f0       	push   $0xf0106943$/;"	l
f010172b	obj/kern/kernel.asm	/^f010172b:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0101730	obj/kern/kernel.asm	/^f0101730:	68 85 03 00 00       	push   $0x385$/;"	l
f0101735	obj/kern/kernel.asm	/^f0101735:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f010173a	obj/kern/kernel.asm	/^f010173a:	e8 01 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f010173f	obj/kern/kernel.asm	/^f010173f:	39 c6                	cmp    %eax,%esi$/;"	l
f0101741	obj/kern/kernel.asm	/^f0101741:	74 19                	je     f010175c <mem_init+0x47f>$/;"	l
f0101743	obj/kern/kernel.asm	/^f0101743:	68 61 69 10 f0       	push   $0xf0106961$/;"	l
f0101748	obj/kern/kernel.asm	/^f0101748:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f010174d	obj/kern/kernel.asm	/^f010174d:	68 86 03 00 00       	push   $0x386$/;"	l
f0101752	obj/kern/kernel.asm	/^f0101752:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0101757	obj/kern/kernel.asm	/^f0101757:	e8 e4 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f010175c	obj/kern/kernel.asm	/^f010175c:	89 f0                	mov    %esi,%eax$/;"	l
f010175e	obj/kern/kernel.asm	/^f010175e:	2b 05 10 af 22 f0    	sub    0xf022af10,%eax$/;"	l
f0101764	obj/kern/kernel.asm	/^f0101764:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101767	obj/kern/kernel.asm	/^f0101767:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010176a	obj/kern/kernel.asm	/^f010176a:	89 c2                	mov    %eax,%edx$/;"	l
f010176c	obj/kern/kernel.asm	/^f010176c:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010176f	obj/kern/kernel.asm	/^f010176f:	3b 15 08 af 22 f0    	cmp    0xf022af08,%edx$/;"	l
f0101775	obj/kern/kernel.asm	/^f0101775:	72 12                	jb     f0101789 <mem_init+0x4ac>$/;"	l
f0101777	obj/kern/kernel.asm	/^f0101777:	50                   	push   %eax$/;"	l
f0101778	obj/kern/kernel.asm	/^f0101778:	68 a4 58 10 f0       	push   $0xf01058a4$/;"	l
f010177d	obj/kern/kernel.asm	/^f010177d:	6a 58                	push   $0x58$/;"	l
f010177f	obj/kern/kernel.asm	/^f010177f:	68 78 67 10 f0       	push   $0xf0106778$/;"	l
f0101784	obj/kern/kernel.asm	/^f0101784:	e8 b7 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f0101789	obj/kern/kernel.asm	/^f0101789:	8d 90 00 10 00 f0    	lea    -0xffff000(%eax),%edx$/;"	l
f010178f	obj/kern/kernel.asm	/^f010178f:	8d 80 00 00 00 f0    	lea    -0x10000000(%eax),%eax$/;"	l
f0101795	obj/kern/kernel.asm	/^f0101795:	80 38 00             	cmpb   $0x0,(%eax)$/;"	l
f0101798	obj/kern/kernel.asm	/^f0101798:	74 19                	je     f01017b3 <mem_init+0x4d6>$/;"	l
f010179a	obj/kern/kernel.asm	/^f010179a:	68 71 69 10 f0       	push   $0xf0106971$/;"	l
f010179f	obj/kern/kernel.asm	/^f010179f:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f01017a4	obj/kern/kernel.asm	/^f01017a4:	68 89 03 00 00       	push   $0x389$/;"	l
f01017a9	obj/kern/kernel.asm	/^f01017a9:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f01017ae	obj/kern/kernel.asm	/^f01017ae:	e8 8d e8 ff ff       	call   f0100040 <_panic>$/;"	l
f01017b3	obj/kern/kernel.asm	/^f01017b3:	83 c0 01             	add    $0x1,%eax$/;"	l
f01017b6	obj/kern/kernel.asm	/^f01017b6:	39 d0                	cmp    %edx,%eax$/;"	l
f01017b8	obj/kern/kernel.asm	/^f01017b8:	75 db                	jne    f0101795 <mem_init+0x4b8>$/;"	l
f01017ba	obj/kern/kernel.asm	/^f01017ba:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f01017bd	obj/kern/kernel.asm	/^f01017bd:	a3 40 a2 22 f0       	mov    %eax,0xf022a240$/;"	l
f01017c2	obj/kern/kernel.asm	/^f01017c2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01017c5	obj/kern/kernel.asm	/^f01017c5:	56                   	push   %esi$/;"	l
f01017c6	obj/kern/kernel.asm	/^f01017c6:	e8 bc f7 ff ff       	call   f0100f87 <page_free>$/;"	l
f01017cb	obj/kern/kernel.asm	/^f01017cb:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01017ce	obj/kern/kernel.asm	/^f01017ce:	e8 b4 f7 ff ff       	call   f0100f87 <page_free>$/;"	l
f01017d3	obj/kern/kernel.asm	/^f01017d3:	83 c4 04             	add    $0x4,%esp$/;"	l
f01017d6	obj/kern/kernel.asm	/^f01017d6:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f01017d9	obj/kern/kernel.asm	/^f01017d9:	e8 a9 f7 ff ff       	call   f0100f87 <page_free>$/;"	l
f01017de	obj/kern/kernel.asm	/^f01017de:	a1 40 a2 22 f0       	mov    0xf022a240,%eax$/;"	l
f01017e3	obj/kern/kernel.asm	/^f01017e3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01017e6	obj/kern/kernel.asm	/^f01017e6:	eb 05                	jmp    f01017ed <mem_init+0x510>$/;"	l
f01017e8	obj/kern/kernel.asm	/^f01017e8:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01017eb	obj/kern/kernel.asm	/^f01017eb:	8b 00                	mov    (%eax),%eax$/;"	l
f01017ed	obj/kern/kernel.asm	/^f01017ed:	85 c0                	test   %eax,%eax$/;"	l
f01017ef	obj/kern/kernel.asm	/^f01017ef:	75 f7                	jne    f01017e8 <mem_init+0x50b>$/;"	l
f01017f1	obj/kern/kernel.asm	/^f01017f1:	85 db                	test   %ebx,%ebx$/;"	l
f01017f3	obj/kern/kernel.asm	/^f01017f3:	74 19                	je     f010180e <mem_init+0x531>$/;"	l
f01017f5	obj/kern/kernel.asm	/^f01017f5:	68 7b 69 10 f0       	push   $0xf010697b$/;"	l
f01017fa	obj/kern/kernel.asm	/^f01017fa:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f01017ff	obj/kern/kernel.asm	/^f01017ff:	68 96 03 00 00       	push   $0x396$/;"	l
f0101804	obj/kern/kernel.asm	/^f0101804:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0101809	obj/kern/kernel.asm	/^f0101809:	e8 32 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f010180e	obj/kern/kernel.asm	/^f010180e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101811	obj/kern/kernel.asm	/^f0101811:	68 94 5f 10 f0       	push   $0xf0105f94$/;"	l
f0101816	obj/kern/kernel.asm	/^f0101816:	e8 cd 1d 00 00       	call   f01035e8 <cprintf>$/;"	l
f010181b	obj/kern/kernel.asm	/^f010181b:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101822	obj/kern/kernel.asm	/^f0101822:	e8 f0 f6 ff ff       	call   f0100f17 <page_alloc>$/;"	l
f0101827	obj/kern/kernel.asm	/^f0101827:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010182a	obj/kern/kernel.asm	/^f010182a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010182d	obj/kern/kernel.asm	/^f010182d:	85 c0                	test   %eax,%eax$/;"	l
f010182f	obj/kern/kernel.asm	/^f010182f:	75 19                	jne    f010184a <mem_init+0x56d>$/;"	l
f0101831	obj/kern/kernel.asm	/^f0101831:	68 89 68 10 f0       	push   $0xf0106889$/;"	l
f0101836	obj/kern/kernel.asm	/^f0101836:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f010183b	obj/kern/kernel.asm	/^f010183b:	68 fc 03 00 00       	push   $0x3fc$/;"	l
f0101840	obj/kern/kernel.asm	/^f0101840:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0101845	obj/kern/kernel.asm	/^f0101845:	e8 f6 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f010184a	obj/kern/kernel.asm	/^f010184a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010184d	obj/kern/kernel.asm	/^f010184d:	6a 00                	push   $0x0$/;"	l
f010184f	obj/kern/kernel.asm	/^f010184f:	e8 c3 f6 ff ff       	call   f0100f17 <page_alloc>$/;"	l
f0101854	obj/kern/kernel.asm	/^f0101854:	89 c3                	mov    %eax,%ebx$/;"	l
f0101856	obj/kern/kernel.asm	/^f0101856:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101859	obj/kern/kernel.asm	/^f0101859:	85 c0                	test   %eax,%eax$/;"	l
f010185b	obj/kern/kernel.asm	/^f010185b:	75 19                	jne    f0101876 <mem_init+0x599>$/;"	l
f010185d	obj/kern/kernel.asm	/^f010185d:	68 9f 68 10 f0       	push   $0xf010689f$/;"	l
f0101862	obj/kern/kernel.asm	/^f0101862:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0101867	obj/kern/kernel.asm	/^f0101867:	68 fd 03 00 00       	push   $0x3fd$/;"	l
f010186c	obj/kern/kernel.asm	/^f010186c:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0101871	obj/kern/kernel.asm	/^f0101871:	e8 ca e7 ff ff       	call   f0100040 <_panic>$/;"	l
f0101876	obj/kern/kernel.asm	/^f0101876:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101879	obj/kern/kernel.asm	/^f0101879:	6a 00                	push   $0x0$/;"	l
f010187b	obj/kern/kernel.asm	/^f010187b:	e8 97 f6 ff ff       	call   f0100f17 <page_alloc>$/;"	l
f0101880	obj/kern/kernel.asm	/^f0101880:	89 c6                	mov    %eax,%esi$/;"	l
f0101882	obj/kern/kernel.asm	/^f0101882:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101885	obj/kern/kernel.asm	/^f0101885:	85 c0                	test   %eax,%eax$/;"	l
f0101887	obj/kern/kernel.asm	/^f0101887:	75 19                	jne    f01018a2 <mem_init+0x5c5>$/;"	l
f0101889	obj/kern/kernel.asm	/^f0101889:	68 b5 68 10 f0       	push   $0xf01068b5$/;"	l
f010188e	obj/kern/kernel.asm	/^f010188e:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0101893	obj/kern/kernel.asm	/^f0101893:	68 fe 03 00 00       	push   $0x3fe$/;"	l
f0101898	obj/kern/kernel.asm	/^f0101898:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f010189d	obj/kern/kernel.asm	/^f010189d:	e8 9e e7 ff ff       	call   f0100040 <_panic>$/;"	l
f01018a2	obj/kern/kernel.asm	/^f01018a2:	39 5d d4             	cmp    %ebx,-0x2c(%ebp)$/;"	l
f01018a5	obj/kern/kernel.asm	/^f01018a5:	75 19                	jne    f01018c0 <mem_init+0x5e3>$/;"	l
f01018a7	obj/kern/kernel.asm	/^f01018a7:	68 cb 68 10 f0       	push   $0xf01068cb$/;"	l
f01018ac	obj/kern/kernel.asm	/^f01018ac:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f01018b1	obj/kern/kernel.asm	/^f01018b1:	68 01 04 00 00       	push   $0x401$/;"	l
f01018b6	obj/kern/kernel.asm	/^f01018b6:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f01018bb	obj/kern/kernel.asm	/^f01018bb:	e8 80 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f01018c0	obj/kern/kernel.asm	/^f01018c0:	39 45 d4             	cmp    %eax,-0x2c(%ebp)$/;"	l
f01018c3	obj/kern/kernel.asm	/^f01018c3:	74 04                	je     f01018c9 <mem_init+0x5ec>$/;"	l
f01018c5	obj/kern/kernel.asm	/^f01018c5:	39 c3                	cmp    %eax,%ebx$/;"	l
f01018c7	obj/kern/kernel.asm	/^f01018c7:	75 19                	jne    f01018e2 <mem_init+0x605>$/;"	l
f01018c9	obj/kern/kernel.asm	/^f01018c9:	68 74 5f 10 f0       	push   $0xf0105f74$/;"	l
f01018ce	obj/kern/kernel.asm	/^f01018ce:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f01018d3	obj/kern/kernel.asm	/^f01018d3:	68 02 04 00 00       	push   $0x402$/;"	l
f01018d8	obj/kern/kernel.asm	/^f01018d8:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f01018dd	obj/kern/kernel.asm	/^f01018dd:	e8 5e e7 ff ff       	call   f0100040 <_panic>$/;"	l
f01018e2	obj/kern/kernel.asm	/^f01018e2:	a1 40 a2 22 f0       	mov    0xf022a240,%eax$/;"	l
f01018e7	obj/kern/kernel.asm	/^f01018e7:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01018ea	obj/kern/kernel.asm	/^f01018ea:	c7 05 40 a2 22 f0 00 	movl   $0x0,0xf022a240$/;"	l
f01018f1	obj/kern/kernel.asm	/^f01018f1:	00 00 00 $/;"	l
f01018f4	obj/kern/kernel.asm	/^f01018f4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01018f7	obj/kern/kernel.asm	/^f01018f7:	6a 00                	push   $0x0$/;"	l
f01018f9	obj/kern/kernel.asm	/^f01018f9:	e8 19 f6 ff ff       	call   f0100f17 <page_alloc>$/;"	l
f01018fe	obj/kern/kernel.asm	/^f01018fe:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101901	obj/kern/kernel.asm	/^f0101901:	85 c0                	test   %eax,%eax$/;"	l
f0101903	obj/kern/kernel.asm	/^f0101903:	74 19                	je     f010191e <mem_init+0x641>$/;"	l
f0101905	obj/kern/kernel.asm	/^f0101905:	68 34 69 10 f0       	push   $0xf0106934$/;"	l
f010190a	obj/kern/kernel.asm	/^f010190a:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f010190f	obj/kern/kernel.asm	/^f010190f:	68 09 04 00 00       	push   $0x409$/;"	l
f0101914	obj/kern/kernel.asm	/^f0101914:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0101919	obj/kern/kernel.asm	/^f0101919:	e8 22 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f010191e	obj/kern/kernel.asm	/^f010191e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101921	obj/kern/kernel.asm	/^f0101921:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0101924	obj/kern/kernel.asm	/^f0101924:	50                   	push   %eax$/;"	l
f0101925	obj/kern/kernel.asm	/^f0101925:	6a 00                	push   $0x0$/;"	l
f0101927	obj/kern/kernel.asm	/^f0101927:	ff 35 0c af 22 f0    	pushl  0xf022af0c$/;"	l
f010192d	obj/kern/kernel.asm	/^f010192d:	e8 fb f7 ff ff       	call   f010112d <page_lookup>$/;"	l
f0101932	obj/kern/kernel.asm	/^f0101932:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101935	obj/kern/kernel.asm	/^f0101935:	85 c0                	test   %eax,%eax$/;"	l
f0101937	obj/kern/kernel.asm	/^f0101937:	74 19                	je     f0101952 <mem_init+0x675>$/;"	l
f0101939	obj/kern/kernel.asm	/^f0101939:	68 b4 5f 10 f0       	push   $0xf0105fb4$/;"	l
f010193e	obj/kern/kernel.asm	/^f010193e:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0101943	obj/kern/kernel.asm	/^f0101943:	68 0c 04 00 00       	push   $0x40c$/;"	l
f0101948	obj/kern/kernel.asm	/^f0101948:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f010194d	obj/kern/kernel.asm	/^f010194d:	e8 ee e6 ff ff       	call   f0100040 <_panic>$/;"	l
f0101952	obj/kern/kernel.asm	/^f0101952:	6a 02                	push   $0x2$/;"	l
f0101954	obj/kern/kernel.asm	/^f0101954:	6a 00                	push   $0x0$/;"	l
f0101956	obj/kern/kernel.asm	/^f0101956:	53                   	push   %ebx$/;"	l
f0101957	obj/kern/kernel.asm	/^f0101957:	ff 35 0c af 22 f0    	pushl  0xf022af0c$/;"	l
f010195d	obj/kern/kernel.asm	/^f010195d:	e8 a8 f8 ff ff       	call   f010120a <page_insert>$/;"	l
f0101962	obj/kern/kernel.asm	/^f0101962:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101965	obj/kern/kernel.asm	/^f0101965:	85 c0                	test   %eax,%eax$/;"	l
f0101967	obj/kern/kernel.asm	/^f0101967:	78 19                	js     f0101982 <mem_init+0x6a5>$/;"	l
f0101969	obj/kern/kernel.asm	/^f0101969:	68 ec 5f 10 f0       	push   $0xf0105fec$/;"	l
f010196e	obj/kern/kernel.asm	/^f010196e:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0101973	obj/kern/kernel.asm	/^f0101973:	68 0f 04 00 00       	push   $0x40f$/;"	l
f0101978	obj/kern/kernel.asm	/^f0101978:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f010197d	obj/kern/kernel.asm	/^f010197d:	e8 be e6 ff ff       	call   f0100040 <_panic>$/;"	l
f0101982	obj/kern/kernel.asm	/^f0101982:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101985	obj/kern/kernel.asm	/^f0101985:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0101988	obj/kern/kernel.asm	/^f0101988:	e8 fa f5 ff ff       	call   f0100f87 <page_free>$/;"	l
f010198d	obj/kern/kernel.asm	/^f010198d:	6a 02                	push   $0x2$/;"	l
f010198f	obj/kern/kernel.asm	/^f010198f:	6a 00                	push   $0x0$/;"	l
f0101991	obj/kern/kernel.asm	/^f0101991:	53                   	push   %ebx$/;"	l
f0101992	obj/kern/kernel.asm	/^f0101992:	ff 35 0c af 22 f0    	pushl  0xf022af0c$/;"	l
f0101998	obj/kern/kernel.asm	/^f0101998:	e8 6d f8 ff ff       	call   f010120a <page_insert>$/;"	l
f010199d	obj/kern/kernel.asm	/^f010199d:	83 c4 20             	add    $0x20,%esp$/;"	l
f01019a0	obj/kern/kernel.asm	/^f01019a0:	85 c0                	test   %eax,%eax$/;"	l
f01019a2	obj/kern/kernel.asm	/^f01019a2:	74 19                	je     f01019bd <mem_init+0x6e0>$/;"	l
f01019a4	obj/kern/kernel.asm	/^f01019a4:	68 1c 60 10 f0       	push   $0xf010601c$/;"	l
f01019a9	obj/kern/kernel.asm	/^f01019a9:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f01019ae	obj/kern/kernel.asm	/^f01019ae:	68 13 04 00 00       	push   $0x413$/;"	l
f01019b3	obj/kern/kernel.asm	/^f01019b3:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f01019b8	obj/kern/kernel.asm	/^f01019b8:	e8 83 e6 ff ff       	call   f0100040 <_panic>$/;"	l
f01019bd	obj/kern/kernel.asm	/^f01019bd:	8b 3d 0c af 22 f0    	mov    0xf022af0c,%edi$/;"	l
f01019c3	obj/kern/kernel.asm	/^f01019c3:	a1 10 af 22 f0       	mov    0xf022af10,%eax$/;"	l
f01019c8	obj/kern/kernel.asm	/^f01019c8:	89 c1                	mov    %eax,%ecx$/;"	l
f01019ca	obj/kern/kernel.asm	/^f01019ca:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f01019cd	obj/kern/kernel.asm	/^f01019cd:	8b 17                	mov    (%edi),%edx$/;"	l
f01019cf	obj/kern/kernel.asm	/^f01019cf:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f01019d5	obj/kern/kernel.asm	/^f01019d5:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01019d8	obj/kern/kernel.asm	/^f01019d8:	29 c8                	sub    %ecx,%eax$/;"	l
f01019da	obj/kern/kernel.asm	/^f01019da:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01019dd	obj/kern/kernel.asm	/^f01019dd:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01019e0	obj/kern/kernel.asm	/^f01019e0:	39 c2                	cmp    %eax,%edx$/;"	l
f01019e2	obj/kern/kernel.asm	/^f01019e2:	74 19                	je     f01019fd <mem_init+0x720>$/;"	l
f01019e4	obj/kern/kernel.asm	/^f01019e4:	68 4c 60 10 f0       	push   $0xf010604c$/;"	l
f01019e9	obj/kern/kernel.asm	/^f01019e9:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f01019ee	obj/kern/kernel.asm	/^f01019ee:	68 14 04 00 00       	push   $0x414$/;"	l
f01019f3	obj/kern/kernel.asm	/^f01019f3:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f01019f8	obj/kern/kernel.asm	/^f01019f8:	e8 43 e6 ff ff       	call   f0100040 <_panic>$/;"	l
f01019fd	obj/kern/kernel.asm	/^f01019fd:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101a02	obj/kern/kernel.asm	/^f0101a02:	89 f8                	mov    %edi,%eax$/;"	l
f0101a04	obj/kern/kernel.asm	/^f0101a04:	e8 55 f0 ff ff       	call   f0100a5e <check_va2pa>$/;"	l
f0101a09	obj/kern/kernel.asm	/^f0101a09:	89 da                	mov    %ebx,%edx$/;"	l
f0101a0b	obj/kern/kernel.asm	/^f0101a0b:	2b 55 cc             	sub    -0x34(%ebp),%edx$/;"	l
f0101a0e	obj/kern/kernel.asm	/^f0101a0e:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101a11	obj/kern/kernel.asm	/^f0101a11:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101a14	obj/kern/kernel.asm	/^f0101a14:	39 d0                	cmp    %edx,%eax$/;"	l
f0101a16	obj/kern/kernel.asm	/^f0101a16:	74 19                	je     f0101a31 <mem_init+0x754>$/;"	l
f0101a18	obj/kern/kernel.asm	/^f0101a18:	68 74 60 10 f0       	push   $0xf0106074$/;"	l
f0101a1d	obj/kern/kernel.asm	/^f0101a1d:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0101a22	obj/kern/kernel.asm	/^f0101a22:	68 15 04 00 00       	push   $0x415$/;"	l
f0101a27	obj/kern/kernel.asm	/^f0101a27:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0101a2c	obj/kern/kernel.asm	/^f0101a2c:	e8 0f e6 ff ff       	call   f0100040 <_panic>$/;"	l
f0101a31	obj/kern/kernel.asm	/^f0101a31:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0101a36	obj/kern/kernel.asm	/^f0101a36:	74 19                	je     f0101a51 <mem_init+0x774>$/;"	l
f0101a38	obj/kern/kernel.asm	/^f0101a38:	68 86 69 10 f0       	push   $0xf0106986$/;"	l
f0101a3d	obj/kern/kernel.asm	/^f0101a3d:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0101a42	obj/kern/kernel.asm	/^f0101a42:	68 16 04 00 00       	push   $0x416$/;"	l
f0101a47	obj/kern/kernel.asm	/^f0101a47:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0101a4c	obj/kern/kernel.asm	/^f0101a4c:	e8 ef e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101a51	obj/kern/kernel.asm	/^f0101a51:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101a54	obj/kern/kernel.asm	/^f0101a54:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)$/;"	l
f0101a59	obj/kern/kernel.asm	/^f0101a59:	74 19                	je     f0101a74 <mem_init+0x797>$/;"	l
f0101a5b	obj/kern/kernel.asm	/^f0101a5b:	68 97 69 10 f0       	push   $0xf0106997$/;"	l
f0101a60	obj/kern/kernel.asm	/^f0101a60:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0101a65	obj/kern/kernel.asm	/^f0101a65:	68 17 04 00 00       	push   $0x417$/;"	l
f0101a6a	obj/kern/kernel.asm	/^f0101a6a:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0101a6f	obj/kern/kernel.asm	/^f0101a6f:	e8 cc e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101a74	obj/kern/kernel.asm	/^f0101a74:	6a 02                	push   $0x2$/;"	l
f0101a76	obj/kern/kernel.asm	/^f0101a76:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101a7b	obj/kern/kernel.asm	/^f0101a7b:	56                   	push   %esi$/;"	l
f0101a7c	obj/kern/kernel.asm	/^f0101a7c:	57                   	push   %edi$/;"	l
f0101a7d	obj/kern/kernel.asm	/^f0101a7d:	e8 88 f7 ff ff       	call   f010120a <page_insert>$/;"	l
f0101a82	obj/kern/kernel.asm	/^f0101a82:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101a85	obj/kern/kernel.asm	/^f0101a85:	85 c0                	test   %eax,%eax$/;"	l
f0101a87	obj/kern/kernel.asm	/^f0101a87:	74 19                	je     f0101aa2 <mem_init+0x7c5>$/;"	l
f0101a89	obj/kern/kernel.asm	/^f0101a89:	68 a4 60 10 f0       	push   $0xf01060a4$/;"	l
f0101a8e	obj/kern/kernel.asm	/^f0101a8e:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0101a93	obj/kern/kernel.asm	/^f0101a93:	68 1a 04 00 00       	push   $0x41a$/;"	l
f0101a98	obj/kern/kernel.asm	/^f0101a98:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0101a9d	obj/kern/kernel.asm	/^f0101a9d:	e8 9e e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101aa2	obj/kern/kernel.asm	/^f0101aa2:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101aa7	obj/kern/kernel.asm	/^f0101aa7:	a1 0c af 22 f0       	mov    0xf022af0c,%eax$/;"	l
f0101aac	obj/kern/kernel.asm	/^f0101aac:	e8 ad ef ff ff       	call   f0100a5e <check_va2pa>$/;"	l
f0101ab1	obj/kern/kernel.asm	/^f0101ab1:	89 f2                	mov    %esi,%edx$/;"	l
f0101ab3	obj/kern/kernel.asm	/^f0101ab3:	2b 15 10 af 22 f0    	sub    0xf022af10,%edx$/;"	l
f0101ab9	obj/kern/kernel.asm	/^f0101ab9:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101abc	obj/kern/kernel.asm	/^f0101abc:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101abf	obj/kern/kernel.asm	/^f0101abf:	39 d0                	cmp    %edx,%eax$/;"	l
f0101ac1	obj/kern/kernel.asm	/^f0101ac1:	74 19                	je     f0101adc <mem_init+0x7ff>$/;"	l
f0101ac3	obj/kern/kernel.asm	/^f0101ac3:	68 e0 60 10 f0       	push   $0xf01060e0$/;"	l
f0101ac8	obj/kern/kernel.asm	/^f0101ac8:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0101acd	obj/kern/kernel.asm	/^f0101acd:	68 1b 04 00 00       	push   $0x41b$/;"	l
f0101ad2	obj/kern/kernel.asm	/^f0101ad2:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0101ad7	obj/kern/kernel.asm	/^f0101ad7:	e8 64 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101adc	obj/kern/kernel.asm	/^f0101adc:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0101ae1	obj/kern/kernel.asm	/^f0101ae1:	74 19                	je     f0101afc <mem_init+0x81f>$/;"	l
f0101ae3	obj/kern/kernel.asm	/^f0101ae3:	68 a8 69 10 f0       	push   $0xf01069a8$/;"	l
f0101ae8	obj/kern/kernel.asm	/^f0101ae8:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0101aed	obj/kern/kernel.asm	/^f0101aed:	68 1c 04 00 00       	push   $0x41c$/;"	l
f0101af2	obj/kern/kernel.asm	/^f0101af2:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0101af7	obj/kern/kernel.asm	/^f0101af7:	e8 44 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101afc	obj/kern/kernel.asm	/^f0101afc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101aff	obj/kern/kernel.asm	/^f0101aff:	6a 00                	push   $0x0$/;"	l
f0101b01	obj/kern/kernel.asm	/^f0101b01:	e8 11 f4 ff ff       	call   f0100f17 <page_alloc>$/;"	l
f0101b06	obj/kern/kernel.asm	/^f0101b06:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101b09	obj/kern/kernel.asm	/^f0101b09:	85 c0                	test   %eax,%eax$/;"	l
f0101b0b	obj/kern/kernel.asm	/^f0101b0b:	74 19                	je     f0101b26 <mem_init+0x849>$/;"	l
f0101b0d	obj/kern/kernel.asm	/^f0101b0d:	68 34 69 10 f0       	push   $0xf0106934$/;"	l
f0101b12	obj/kern/kernel.asm	/^f0101b12:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0101b17	obj/kern/kernel.asm	/^f0101b17:	68 1f 04 00 00       	push   $0x41f$/;"	l
f0101b1c	obj/kern/kernel.asm	/^f0101b1c:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0101b21	obj/kern/kernel.asm	/^f0101b21:	e8 1a e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b26	obj/kern/kernel.asm	/^f0101b26:	6a 02                	push   $0x2$/;"	l
f0101b28	obj/kern/kernel.asm	/^f0101b28:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101b2d	obj/kern/kernel.asm	/^f0101b2d:	56                   	push   %esi$/;"	l
f0101b2e	obj/kern/kernel.asm	/^f0101b2e:	ff 35 0c af 22 f0    	pushl  0xf022af0c$/;"	l
f0101b34	obj/kern/kernel.asm	/^f0101b34:	e8 d1 f6 ff ff       	call   f010120a <page_insert>$/;"	l
f0101b39	obj/kern/kernel.asm	/^f0101b39:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101b3c	obj/kern/kernel.asm	/^f0101b3c:	85 c0                	test   %eax,%eax$/;"	l
f0101b3e	obj/kern/kernel.asm	/^f0101b3e:	74 19                	je     f0101b59 <mem_init+0x87c>$/;"	l
f0101b40	obj/kern/kernel.asm	/^f0101b40:	68 a4 60 10 f0       	push   $0xf01060a4$/;"	l
f0101b45	obj/kern/kernel.asm	/^f0101b45:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0101b4a	obj/kern/kernel.asm	/^f0101b4a:	68 22 04 00 00       	push   $0x422$/;"	l
f0101b4f	obj/kern/kernel.asm	/^f0101b4f:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0101b54	obj/kern/kernel.asm	/^f0101b54:	e8 e7 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b59	obj/kern/kernel.asm	/^f0101b59:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101b5e	obj/kern/kernel.asm	/^f0101b5e:	a1 0c af 22 f0       	mov    0xf022af0c,%eax$/;"	l
f0101b63	obj/kern/kernel.asm	/^f0101b63:	e8 f6 ee ff ff       	call   f0100a5e <check_va2pa>$/;"	l
f0101b68	obj/kern/kernel.asm	/^f0101b68:	89 f2                	mov    %esi,%edx$/;"	l
f0101b6a	obj/kern/kernel.asm	/^f0101b6a:	2b 15 10 af 22 f0    	sub    0xf022af10,%edx$/;"	l
f0101b70	obj/kern/kernel.asm	/^f0101b70:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101b73	obj/kern/kernel.asm	/^f0101b73:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101b76	obj/kern/kernel.asm	/^f0101b76:	39 d0                	cmp    %edx,%eax$/;"	l
f0101b78	obj/kern/kernel.asm	/^f0101b78:	74 19                	je     f0101b93 <mem_init+0x8b6>$/;"	l
f0101b7a	obj/kern/kernel.asm	/^f0101b7a:	68 e0 60 10 f0       	push   $0xf01060e0$/;"	l
f0101b7f	obj/kern/kernel.asm	/^f0101b7f:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0101b84	obj/kern/kernel.asm	/^f0101b84:	68 23 04 00 00       	push   $0x423$/;"	l
f0101b89	obj/kern/kernel.asm	/^f0101b89:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0101b8e	obj/kern/kernel.asm	/^f0101b8e:	e8 ad e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b93	obj/kern/kernel.asm	/^f0101b93:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0101b98	obj/kern/kernel.asm	/^f0101b98:	74 19                	je     f0101bb3 <mem_init+0x8d6>$/;"	l
f0101b9a	obj/kern/kernel.asm	/^f0101b9a:	68 a8 69 10 f0       	push   $0xf01069a8$/;"	l
f0101b9f	obj/kern/kernel.asm	/^f0101b9f:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0101ba4	obj/kern/kernel.asm	/^f0101ba4:	68 24 04 00 00       	push   $0x424$/;"	l
f0101ba9	obj/kern/kernel.asm	/^f0101ba9:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0101bae	obj/kern/kernel.asm	/^f0101bae:	e8 8d e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101bb3	obj/kern/kernel.asm	/^f0101bb3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101bb6	obj/kern/kernel.asm	/^f0101bb6:	6a 00                	push   $0x0$/;"	l
f0101bb8	obj/kern/kernel.asm	/^f0101bb8:	e8 5a f3 ff ff       	call   f0100f17 <page_alloc>$/;"	l
f0101bbd	obj/kern/kernel.asm	/^f0101bbd:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101bc0	obj/kern/kernel.asm	/^f0101bc0:	85 c0                	test   %eax,%eax$/;"	l
f0101bc2	obj/kern/kernel.asm	/^f0101bc2:	74 19                	je     f0101bdd <mem_init+0x900>$/;"	l
f0101bc4	obj/kern/kernel.asm	/^f0101bc4:	68 34 69 10 f0       	push   $0xf0106934$/;"	l
f0101bc9	obj/kern/kernel.asm	/^f0101bc9:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0101bce	obj/kern/kernel.asm	/^f0101bce:	68 28 04 00 00       	push   $0x428$/;"	l
f0101bd3	obj/kern/kernel.asm	/^f0101bd3:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0101bd8	obj/kern/kernel.asm	/^f0101bd8:	e8 63 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101bdd	obj/kern/kernel.asm	/^f0101bdd:	8b 15 0c af 22 f0    	mov    0xf022af0c,%edx$/;"	l
f0101be3	obj/kern/kernel.asm	/^f0101be3:	8b 02                	mov    (%edx),%eax$/;"	l
f0101be5	obj/kern/kernel.asm	/^f0101be5:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101bea	obj/kern/kernel.asm	/^f0101bea:	89 c1                	mov    %eax,%ecx$/;"	l
f0101bec	obj/kern/kernel.asm	/^f0101bec:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0101bef	obj/kern/kernel.asm	/^f0101bef:	3b 0d 08 af 22 f0    	cmp    0xf022af08,%ecx$/;"	l
f0101bf5	obj/kern/kernel.asm	/^f0101bf5:	72 15                	jb     f0101c0c <mem_init+0x92f>$/;"	l
f0101bf7	obj/kern/kernel.asm	/^f0101bf7:	50                   	push   %eax$/;"	l
f0101bf8	obj/kern/kernel.asm	/^f0101bf8:	68 a4 58 10 f0       	push   $0xf01058a4$/;"	l
f0101bfd	obj/kern/kernel.asm	/^f0101bfd:	68 2b 04 00 00       	push   $0x42b$/;"	l
f0101c02	obj/kern/kernel.asm	/^f0101c02:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0101c07	obj/kern/kernel.asm	/^f0101c07:	e8 34 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c0c	obj/kern/kernel.asm	/^f0101c0c:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101c11	obj/kern/kernel.asm	/^f0101c11:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0101c14	obj/kern/kernel.asm	/^f0101c14:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101c17	obj/kern/kernel.asm	/^f0101c17:	6a 00                	push   $0x0$/;"	l
f0101c19	obj/kern/kernel.asm	/^f0101c19:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101c1e	obj/kern/kernel.asm	/^f0101c1e:	52                   	push   %edx$/;"	l
f0101c1f	obj/kern/kernel.asm	/^f0101c1f:	e8 c5 f3 ff ff       	call   f0100fe9 <pgdir_walk>$/;"	l
f0101c24	obj/kern/kernel.asm	/^f0101c24:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f0101c27	obj/kern/kernel.asm	/^f0101c27:	8d 51 04             	lea    0x4(%ecx),%edx$/;"	l
f0101c2a	obj/kern/kernel.asm	/^f0101c2a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101c2d	obj/kern/kernel.asm	/^f0101c2d:	39 d0                	cmp    %edx,%eax$/;"	l
f0101c2f	obj/kern/kernel.asm	/^f0101c2f:	74 19                	je     f0101c4a <mem_init+0x96d>$/;"	l
f0101c31	obj/kern/kernel.asm	/^f0101c31:	68 10 61 10 f0       	push   $0xf0106110$/;"	l
f0101c36	obj/kern/kernel.asm	/^f0101c36:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0101c3b	obj/kern/kernel.asm	/^f0101c3b:	68 2c 04 00 00       	push   $0x42c$/;"	l
f0101c40	obj/kern/kernel.asm	/^f0101c40:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0101c45	obj/kern/kernel.asm	/^f0101c45:	e8 f6 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c4a	obj/kern/kernel.asm	/^f0101c4a:	6a 06                	push   $0x6$/;"	l
f0101c4c	obj/kern/kernel.asm	/^f0101c4c:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101c51	obj/kern/kernel.asm	/^f0101c51:	56                   	push   %esi$/;"	l
f0101c52	obj/kern/kernel.asm	/^f0101c52:	ff 35 0c af 22 f0    	pushl  0xf022af0c$/;"	l
f0101c58	obj/kern/kernel.asm	/^f0101c58:	e8 ad f5 ff ff       	call   f010120a <page_insert>$/;"	l
f0101c5d	obj/kern/kernel.asm	/^f0101c5d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101c60	obj/kern/kernel.asm	/^f0101c60:	85 c0                	test   %eax,%eax$/;"	l
f0101c62	obj/kern/kernel.asm	/^f0101c62:	74 19                	je     f0101c7d <mem_init+0x9a0>$/;"	l
f0101c64	obj/kern/kernel.asm	/^f0101c64:	68 50 61 10 f0       	push   $0xf0106150$/;"	l
f0101c69	obj/kern/kernel.asm	/^f0101c69:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0101c6e	obj/kern/kernel.asm	/^f0101c6e:	68 2f 04 00 00       	push   $0x42f$/;"	l
f0101c73	obj/kern/kernel.asm	/^f0101c73:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0101c78	obj/kern/kernel.asm	/^f0101c78:	e8 c3 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c7d	obj/kern/kernel.asm	/^f0101c7d:	8b 3d 0c af 22 f0    	mov    0xf022af0c,%edi$/;"	l
f0101c83	obj/kern/kernel.asm	/^f0101c83:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101c88	obj/kern/kernel.asm	/^f0101c88:	89 f8                	mov    %edi,%eax$/;"	l
f0101c8a	obj/kern/kernel.asm	/^f0101c8a:	e8 cf ed ff ff       	call   f0100a5e <check_va2pa>$/;"	l
f0101c8f	obj/kern/kernel.asm	/^f0101c8f:	89 f2                	mov    %esi,%edx$/;"	l
f0101c91	obj/kern/kernel.asm	/^f0101c91:	2b 15 10 af 22 f0    	sub    0xf022af10,%edx$/;"	l
f0101c97	obj/kern/kernel.asm	/^f0101c97:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101c9a	obj/kern/kernel.asm	/^f0101c9a:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101c9d	obj/kern/kernel.asm	/^f0101c9d:	39 d0                	cmp    %edx,%eax$/;"	l
f0101c9f	obj/kern/kernel.asm	/^f0101c9f:	74 19                	je     f0101cba <mem_init+0x9dd>$/;"	l
f0101ca1	obj/kern/kernel.asm	/^f0101ca1:	68 e0 60 10 f0       	push   $0xf01060e0$/;"	l
f0101ca6	obj/kern/kernel.asm	/^f0101ca6:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0101cab	obj/kern/kernel.asm	/^f0101cab:	68 30 04 00 00       	push   $0x430$/;"	l
f0101cb0	obj/kern/kernel.asm	/^f0101cb0:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0101cb5	obj/kern/kernel.asm	/^f0101cb5:	e8 86 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101cba	obj/kern/kernel.asm	/^f0101cba:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0101cbf	obj/kern/kernel.asm	/^f0101cbf:	74 19                	je     f0101cda <mem_init+0x9fd>$/;"	l
f0101cc1	obj/kern/kernel.asm	/^f0101cc1:	68 a8 69 10 f0       	push   $0xf01069a8$/;"	l
f0101cc6	obj/kern/kernel.asm	/^f0101cc6:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0101ccb	obj/kern/kernel.asm	/^f0101ccb:	68 31 04 00 00       	push   $0x431$/;"	l
f0101cd0	obj/kern/kernel.asm	/^f0101cd0:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0101cd5	obj/kern/kernel.asm	/^f0101cd5:	e8 66 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101cda	obj/kern/kernel.asm	/^f0101cda:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101cdd	obj/kern/kernel.asm	/^f0101cdd:	6a 00                	push   $0x0$/;"	l
f0101cdf	obj/kern/kernel.asm	/^f0101cdf:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101ce4	obj/kern/kernel.asm	/^f0101ce4:	57                   	push   %edi$/;"	l
f0101ce5	obj/kern/kernel.asm	/^f0101ce5:	e8 ff f2 ff ff       	call   f0100fe9 <pgdir_walk>$/;"	l
f0101cea	obj/kern/kernel.asm	/^f0101cea:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101ced	obj/kern/kernel.asm	/^f0101ced:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0101cf0	obj/kern/kernel.asm	/^f0101cf0:	75 19                	jne    f0101d0b <mem_init+0xa2e>$/;"	l
f0101cf2	obj/kern/kernel.asm	/^f0101cf2:	68 90 61 10 f0       	push   $0xf0106190$/;"	l
f0101cf7	obj/kern/kernel.asm	/^f0101cf7:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0101cfc	obj/kern/kernel.asm	/^f0101cfc:	68 32 04 00 00       	push   $0x432$/;"	l
f0101d01	obj/kern/kernel.asm	/^f0101d01:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0101d06	obj/kern/kernel.asm	/^f0101d06:	e8 35 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d0b	obj/kern/kernel.asm	/^f0101d0b:	a1 0c af 22 f0       	mov    0xf022af0c,%eax$/;"	l
f0101d10	obj/kern/kernel.asm	/^f0101d10:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0101d13	obj/kern/kernel.asm	/^f0101d13:	75 19                	jne    f0101d2e <mem_init+0xa51>$/;"	l
f0101d15	obj/kern/kernel.asm	/^f0101d15:	68 b9 69 10 f0       	push   $0xf01069b9$/;"	l
f0101d1a	obj/kern/kernel.asm	/^f0101d1a:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0101d1f	obj/kern/kernel.asm	/^f0101d1f:	68 33 04 00 00       	push   $0x433$/;"	l
f0101d24	obj/kern/kernel.asm	/^f0101d24:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0101d29	obj/kern/kernel.asm	/^f0101d29:	e8 12 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d2e	obj/kern/kernel.asm	/^f0101d2e:	6a 02                	push   $0x2$/;"	l
f0101d30	obj/kern/kernel.asm	/^f0101d30:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101d35	obj/kern/kernel.asm	/^f0101d35:	56                   	push   %esi$/;"	l
f0101d36	obj/kern/kernel.asm	/^f0101d36:	50                   	push   %eax$/;"	l
f0101d37	obj/kern/kernel.asm	/^f0101d37:	e8 ce f4 ff ff       	call   f010120a <page_insert>$/;"	l
f0101d3c	obj/kern/kernel.asm	/^f0101d3c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101d3f	obj/kern/kernel.asm	/^f0101d3f:	85 c0                	test   %eax,%eax$/;"	l
f0101d41	obj/kern/kernel.asm	/^f0101d41:	74 19                	je     f0101d5c <mem_init+0xa7f>$/;"	l
f0101d43	obj/kern/kernel.asm	/^f0101d43:	68 a4 60 10 f0       	push   $0xf01060a4$/;"	l
f0101d48	obj/kern/kernel.asm	/^f0101d48:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0101d4d	obj/kern/kernel.asm	/^f0101d4d:	68 36 04 00 00       	push   $0x436$/;"	l
f0101d52	obj/kern/kernel.asm	/^f0101d52:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0101d57	obj/kern/kernel.asm	/^f0101d57:	e8 e4 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d5c	obj/kern/kernel.asm	/^f0101d5c:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101d5f	obj/kern/kernel.asm	/^f0101d5f:	6a 00                	push   $0x0$/;"	l
f0101d61	obj/kern/kernel.asm	/^f0101d61:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101d66	obj/kern/kernel.asm	/^f0101d66:	ff 35 0c af 22 f0    	pushl  0xf022af0c$/;"	l
f0101d6c	obj/kern/kernel.asm	/^f0101d6c:	e8 78 f2 ff ff       	call   f0100fe9 <pgdir_walk>$/;"	l
f0101d71	obj/kern/kernel.asm	/^f0101d71:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101d74	obj/kern/kernel.asm	/^f0101d74:	f6 00 02             	testb  $0x2,(%eax)$/;"	l
f0101d77	obj/kern/kernel.asm	/^f0101d77:	75 19                	jne    f0101d92 <mem_init+0xab5>$/;"	l
f0101d79	obj/kern/kernel.asm	/^f0101d79:	68 c4 61 10 f0       	push   $0xf01061c4$/;"	l
f0101d7e	obj/kern/kernel.asm	/^f0101d7e:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0101d83	obj/kern/kernel.asm	/^f0101d83:	68 37 04 00 00       	push   $0x437$/;"	l
f0101d88	obj/kern/kernel.asm	/^f0101d88:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0101d8d	obj/kern/kernel.asm	/^f0101d8d:	e8 ae e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d92	obj/kern/kernel.asm	/^f0101d92:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101d95	obj/kern/kernel.asm	/^f0101d95:	6a 00                	push   $0x0$/;"	l
f0101d97	obj/kern/kernel.asm	/^f0101d97:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101d9c	obj/kern/kernel.asm	/^f0101d9c:	ff 35 0c af 22 f0    	pushl  0xf022af0c$/;"	l
f0101da2	obj/kern/kernel.asm	/^f0101da2:	e8 42 f2 ff ff       	call   f0100fe9 <pgdir_walk>$/;"	l
f0101da7	obj/kern/kernel.asm	/^f0101da7:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101daa	obj/kern/kernel.asm	/^f0101daa:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0101dad	obj/kern/kernel.asm	/^f0101dad:	74 19                	je     f0101dc8 <mem_init+0xaeb>$/;"	l
f0101daf	obj/kern/kernel.asm	/^f0101daf:	68 f8 61 10 f0       	push   $0xf01061f8$/;"	l
f0101db4	obj/kern/kernel.asm	/^f0101db4:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0101db9	obj/kern/kernel.asm	/^f0101db9:	68 38 04 00 00       	push   $0x438$/;"	l
f0101dbe	obj/kern/kernel.asm	/^f0101dbe:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0101dc3	obj/kern/kernel.asm	/^f0101dc3:	e8 78 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101dc8	obj/kern/kernel.asm	/^f0101dc8:	6a 02                	push   $0x2$/;"	l
f0101dca	obj/kern/kernel.asm	/^f0101dca:	68 00 00 40 00       	push   $0x400000$/;"	l
f0101dcf	obj/kern/kernel.asm	/^f0101dcf:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0101dd2	obj/kern/kernel.asm	/^f0101dd2:	ff 35 0c af 22 f0    	pushl  0xf022af0c$/;"	l
f0101dd8	obj/kern/kernel.asm	/^f0101dd8:	e8 2d f4 ff ff       	call   f010120a <page_insert>$/;"	l
f0101ddd	obj/kern/kernel.asm	/^f0101ddd:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101de0	obj/kern/kernel.asm	/^f0101de0:	85 c0                	test   %eax,%eax$/;"	l
f0101de2	obj/kern/kernel.asm	/^f0101de2:	78 19                	js     f0101dfd <mem_init+0xb20>$/;"	l
f0101de4	obj/kern/kernel.asm	/^f0101de4:	68 30 62 10 f0       	push   $0xf0106230$/;"	l
f0101de9	obj/kern/kernel.asm	/^f0101de9:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0101dee	obj/kern/kernel.asm	/^f0101dee:	68 3b 04 00 00       	push   $0x43b$/;"	l
f0101df3	obj/kern/kernel.asm	/^f0101df3:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0101df8	obj/kern/kernel.asm	/^f0101df8:	e8 43 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101dfd	obj/kern/kernel.asm	/^f0101dfd:	6a 02                	push   $0x2$/;"	l
f0101dff	obj/kern/kernel.asm	/^f0101dff:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101e04	obj/kern/kernel.asm	/^f0101e04:	53                   	push   %ebx$/;"	l
f0101e05	obj/kern/kernel.asm	/^f0101e05:	ff 35 0c af 22 f0    	pushl  0xf022af0c$/;"	l
f0101e0b	obj/kern/kernel.asm	/^f0101e0b:	e8 fa f3 ff ff       	call   f010120a <page_insert>$/;"	l
f0101e10	obj/kern/kernel.asm	/^f0101e10:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101e13	obj/kern/kernel.asm	/^f0101e13:	85 c0                	test   %eax,%eax$/;"	l
f0101e15	obj/kern/kernel.asm	/^f0101e15:	74 19                	je     f0101e30 <mem_init+0xb53>$/;"	l
f0101e17	obj/kern/kernel.asm	/^f0101e17:	68 68 62 10 f0       	push   $0xf0106268$/;"	l
f0101e1c	obj/kern/kernel.asm	/^f0101e1c:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0101e21	obj/kern/kernel.asm	/^f0101e21:	68 3e 04 00 00       	push   $0x43e$/;"	l
f0101e26	obj/kern/kernel.asm	/^f0101e26:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0101e2b	obj/kern/kernel.asm	/^f0101e2b:	e8 10 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e30	obj/kern/kernel.asm	/^f0101e30:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101e33	obj/kern/kernel.asm	/^f0101e33:	6a 00                	push   $0x0$/;"	l
f0101e35	obj/kern/kernel.asm	/^f0101e35:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101e3a	obj/kern/kernel.asm	/^f0101e3a:	ff 35 0c af 22 f0    	pushl  0xf022af0c$/;"	l
f0101e40	obj/kern/kernel.asm	/^f0101e40:	e8 a4 f1 ff ff       	call   f0100fe9 <pgdir_walk>$/;"	l
f0101e45	obj/kern/kernel.asm	/^f0101e45:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101e48	obj/kern/kernel.asm	/^f0101e48:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0101e4b	obj/kern/kernel.asm	/^f0101e4b:	74 19                	je     f0101e66 <mem_init+0xb89>$/;"	l
f0101e4d	obj/kern/kernel.asm	/^f0101e4d:	68 f8 61 10 f0       	push   $0xf01061f8$/;"	l
f0101e52	obj/kern/kernel.asm	/^f0101e52:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0101e57	obj/kern/kernel.asm	/^f0101e57:	68 3f 04 00 00       	push   $0x43f$/;"	l
f0101e5c	obj/kern/kernel.asm	/^f0101e5c:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0101e61	obj/kern/kernel.asm	/^f0101e61:	e8 da e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e66	obj/kern/kernel.asm	/^f0101e66:	8b 3d 0c af 22 f0    	mov    0xf022af0c,%edi$/;"	l
f0101e6c	obj/kern/kernel.asm	/^f0101e6c:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101e71	obj/kern/kernel.asm	/^f0101e71:	89 f8                	mov    %edi,%eax$/;"	l
f0101e73	obj/kern/kernel.asm	/^f0101e73:	e8 e6 eb ff ff       	call   f0100a5e <check_va2pa>$/;"	l
f0101e78	obj/kern/kernel.asm	/^f0101e78:	89 c1                	mov    %eax,%ecx$/;"	l
f0101e7a	obj/kern/kernel.asm	/^f0101e7a:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0101e7d	obj/kern/kernel.asm	/^f0101e7d:	89 d8                	mov    %ebx,%eax$/;"	l
f0101e7f	obj/kern/kernel.asm	/^f0101e7f:	2b 05 10 af 22 f0    	sub    0xf022af10,%eax$/;"	l
f0101e85	obj/kern/kernel.asm	/^f0101e85:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101e88	obj/kern/kernel.asm	/^f0101e88:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101e8b	obj/kern/kernel.asm	/^f0101e8b:	39 c1                	cmp    %eax,%ecx$/;"	l
f0101e8d	obj/kern/kernel.asm	/^f0101e8d:	74 19                	je     f0101ea8 <mem_init+0xbcb>$/;"	l
f0101e8f	obj/kern/kernel.asm	/^f0101e8f:	68 a4 62 10 f0       	push   $0xf01062a4$/;"	l
f0101e94	obj/kern/kernel.asm	/^f0101e94:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0101e99	obj/kern/kernel.asm	/^f0101e99:	68 42 04 00 00       	push   $0x442$/;"	l
f0101e9e	obj/kern/kernel.asm	/^f0101e9e:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0101ea3	obj/kern/kernel.asm	/^f0101ea3:	e8 98 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ea8	obj/kern/kernel.asm	/^f0101ea8:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101ead	obj/kern/kernel.asm	/^f0101ead:	89 f8                	mov    %edi,%eax$/;"	l
f0101eaf	obj/kern/kernel.asm	/^f0101eaf:	e8 aa eb ff ff       	call   f0100a5e <check_va2pa>$/;"	l
f0101eb4	obj/kern/kernel.asm	/^f0101eb4:	39 45 cc             	cmp    %eax,-0x34(%ebp)$/;"	l
f0101eb7	obj/kern/kernel.asm	/^f0101eb7:	74 19                	je     f0101ed2 <mem_init+0xbf5>$/;"	l
f0101eb9	obj/kern/kernel.asm	/^f0101eb9:	68 d0 62 10 f0       	push   $0xf01062d0$/;"	l
f0101ebe	obj/kern/kernel.asm	/^f0101ebe:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0101ec3	obj/kern/kernel.asm	/^f0101ec3:	68 43 04 00 00       	push   $0x443$/;"	l
f0101ec8	obj/kern/kernel.asm	/^f0101ec8:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0101ecd	obj/kern/kernel.asm	/^f0101ecd:	e8 6e e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ed2	obj/kern/kernel.asm	/^f0101ed2:	66 83 7b 04 02       	cmpw   $0x2,0x4(%ebx)$/;"	l
f0101ed7	obj/kern/kernel.asm	/^f0101ed7:	74 19                	je     f0101ef2 <mem_init+0xc15>$/;"	l
f0101ed9	obj/kern/kernel.asm	/^f0101ed9:	68 cf 69 10 f0       	push   $0xf01069cf$/;"	l
f0101ede	obj/kern/kernel.asm	/^f0101ede:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0101ee3	obj/kern/kernel.asm	/^f0101ee3:	68 45 04 00 00       	push   $0x445$/;"	l
f0101ee8	obj/kern/kernel.asm	/^f0101ee8:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0101eed	obj/kern/kernel.asm	/^f0101eed:	e8 4e e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ef2	obj/kern/kernel.asm	/^f0101ef2:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0101ef7	obj/kern/kernel.asm	/^f0101ef7:	74 19                	je     f0101f12 <mem_init+0xc35>$/;"	l
f0101ef9	obj/kern/kernel.asm	/^f0101ef9:	68 e0 69 10 f0       	push   $0xf01069e0$/;"	l
f0101efe	obj/kern/kernel.asm	/^f0101efe:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0101f03	obj/kern/kernel.asm	/^f0101f03:	68 46 04 00 00       	push   $0x446$/;"	l
f0101f08	obj/kern/kernel.asm	/^f0101f08:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0101f0d	obj/kern/kernel.asm	/^f0101f0d:	e8 2e e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f12	obj/kern/kernel.asm	/^f0101f12:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101f15	obj/kern/kernel.asm	/^f0101f15:	6a 00                	push   $0x0$/;"	l
f0101f17	obj/kern/kernel.asm	/^f0101f17:	e8 fb ef ff ff       	call   f0100f17 <page_alloc>$/;"	l
f0101f1c	obj/kern/kernel.asm	/^f0101f1c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101f1f	obj/kern/kernel.asm	/^f0101f1f:	39 c6                	cmp    %eax,%esi$/;"	l
f0101f21	obj/kern/kernel.asm	/^f0101f21:	75 04                	jne    f0101f27 <mem_init+0xc4a>$/;"	l
f0101f23	obj/kern/kernel.asm	/^f0101f23:	85 c0                	test   %eax,%eax$/;"	l
f0101f25	obj/kern/kernel.asm	/^f0101f25:	75 19                	jne    f0101f40 <mem_init+0xc63>$/;"	l
f0101f27	obj/kern/kernel.asm	/^f0101f27:	68 00 63 10 f0       	push   $0xf0106300$/;"	l
f0101f2c	obj/kern/kernel.asm	/^f0101f2c:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0101f31	obj/kern/kernel.asm	/^f0101f31:	68 49 04 00 00       	push   $0x449$/;"	l
f0101f36	obj/kern/kernel.asm	/^f0101f36:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0101f3b	obj/kern/kernel.asm	/^f0101f3b:	e8 00 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f40	obj/kern/kernel.asm	/^f0101f40:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101f43	obj/kern/kernel.asm	/^f0101f43:	6a 00                	push   $0x0$/;"	l
f0101f45	obj/kern/kernel.asm	/^f0101f45:	ff 35 0c af 22 f0    	pushl  0xf022af0c$/;"	l
f0101f4b	obj/kern/kernel.asm	/^f0101f4b:	e8 6c f2 ff ff       	call   f01011bc <page_remove>$/;"	l
f0101f50	obj/kern/kernel.asm	/^f0101f50:	8b 3d 0c af 22 f0    	mov    0xf022af0c,%edi$/;"	l
f0101f56	obj/kern/kernel.asm	/^f0101f56:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101f5b	obj/kern/kernel.asm	/^f0101f5b:	89 f8                	mov    %edi,%eax$/;"	l
f0101f5d	obj/kern/kernel.asm	/^f0101f5d:	e8 fc ea ff ff       	call   f0100a5e <check_va2pa>$/;"	l
f0101f62	obj/kern/kernel.asm	/^f0101f62:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101f65	obj/kern/kernel.asm	/^f0101f65:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0101f68	obj/kern/kernel.asm	/^f0101f68:	74 19                	je     f0101f83 <mem_init+0xca6>$/;"	l
f0101f6a	obj/kern/kernel.asm	/^f0101f6a:	68 24 63 10 f0       	push   $0xf0106324$/;"	l
f0101f6f	obj/kern/kernel.asm	/^f0101f6f:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0101f74	obj/kern/kernel.asm	/^f0101f74:	68 4d 04 00 00       	push   $0x44d$/;"	l
f0101f79	obj/kern/kernel.asm	/^f0101f79:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0101f7e	obj/kern/kernel.asm	/^f0101f7e:	e8 bd e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f83	obj/kern/kernel.asm	/^f0101f83:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101f88	obj/kern/kernel.asm	/^f0101f88:	89 f8                	mov    %edi,%eax$/;"	l
f0101f8a	obj/kern/kernel.asm	/^f0101f8a:	e8 cf ea ff ff       	call   f0100a5e <check_va2pa>$/;"	l
f0101f8f	obj/kern/kernel.asm	/^f0101f8f:	89 da                	mov    %ebx,%edx$/;"	l
f0101f91	obj/kern/kernel.asm	/^f0101f91:	2b 15 10 af 22 f0    	sub    0xf022af10,%edx$/;"	l
f0101f97	obj/kern/kernel.asm	/^f0101f97:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101f9a	obj/kern/kernel.asm	/^f0101f9a:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101f9d	obj/kern/kernel.asm	/^f0101f9d:	39 d0                	cmp    %edx,%eax$/;"	l
f0101f9f	obj/kern/kernel.asm	/^f0101f9f:	74 19                	je     f0101fba <mem_init+0xcdd>$/;"	l
f0101fa1	obj/kern/kernel.asm	/^f0101fa1:	68 d0 62 10 f0       	push   $0xf01062d0$/;"	l
f0101fa6	obj/kern/kernel.asm	/^f0101fa6:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0101fab	obj/kern/kernel.asm	/^f0101fab:	68 4e 04 00 00       	push   $0x44e$/;"	l
f0101fb0	obj/kern/kernel.asm	/^f0101fb0:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0101fb5	obj/kern/kernel.asm	/^f0101fb5:	e8 86 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101fba	obj/kern/kernel.asm	/^f0101fba:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0101fbf	obj/kern/kernel.asm	/^f0101fbf:	74 19                	je     f0101fda <mem_init+0xcfd>$/;"	l
f0101fc1	obj/kern/kernel.asm	/^f0101fc1:	68 86 69 10 f0       	push   $0xf0106986$/;"	l
f0101fc6	obj/kern/kernel.asm	/^f0101fc6:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0101fcb	obj/kern/kernel.asm	/^f0101fcb:	68 4f 04 00 00       	push   $0x44f$/;"	l
f0101fd0	obj/kern/kernel.asm	/^f0101fd0:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0101fd5	obj/kern/kernel.asm	/^f0101fd5:	e8 66 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101fda	obj/kern/kernel.asm	/^f0101fda:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0101fdf	obj/kern/kernel.asm	/^f0101fdf:	74 19                	je     f0101ffa <mem_init+0xd1d>$/;"	l
f0101fe1	obj/kern/kernel.asm	/^f0101fe1:	68 e0 69 10 f0       	push   $0xf01069e0$/;"	l
f0101fe6	obj/kern/kernel.asm	/^f0101fe6:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0101feb	obj/kern/kernel.asm	/^f0101feb:	68 50 04 00 00       	push   $0x450$/;"	l
f0101ff0	obj/kern/kernel.asm	/^f0101ff0:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0101ff5	obj/kern/kernel.asm	/^f0101ff5:	e8 46 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ffa	obj/kern/kernel.asm	/^f0101ffa:	6a 00                	push   $0x0$/;"	l
f0101ffc	obj/kern/kernel.asm	/^f0101ffc:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102001	obj/kern/kernel.asm	/^f0102001:	53                   	push   %ebx$/;"	l
f0102002	obj/kern/kernel.asm	/^f0102002:	57                   	push   %edi$/;"	l
f0102003	obj/kern/kernel.asm	/^f0102003:	e8 02 f2 ff ff       	call   f010120a <page_insert>$/;"	l
f0102008	obj/kern/kernel.asm	/^f0102008:	83 c4 10             	add    $0x10,%esp$/;"	l
f010200b	obj/kern/kernel.asm	/^f010200b:	85 c0                	test   %eax,%eax$/;"	l
f010200d	obj/kern/kernel.asm	/^f010200d:	74 19                	je     f0102028 <mem_init+0xd4b>$/;"	l
f010200f	obj/kern/kernel.asm	/^f010200f:	68 48 63 10 f0       	push   $0xf0106348$/;"	l
f0102014	obj/kern/kernel.asm	/^f0102014:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0102019	obj/kern/kernel.asm	/^f0102019:	68 53 04 00 00       	push   $0x453$/;"	l
f010201e	obj/kern/kernel.asm	/^f010201e:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0102023	obj/kern/kernel.asm	/^f0102023:	e8 18 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102028	obj/kern/kernel.asm	/^f0102028:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f010202d	obj/kern/kernel.asm	/^f010202d:	75 19                	jne    f0102048 <mem_init+0xd6b>$/;"	l
f010202f	obj/kern/kernel.asm	/^f010202f:	68 f1 69 10 f0       	push   $0xf01069f1$/;"	l
f0102034	obj/kern/kernel.asm	/^f0102034:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0102039	obj/kern/kernel.asm	/^f0102039:	68 54 04 00 00       	push   $0x454$/;"	l
f010203e	obj/kern/kernel.asm	/^f010203e:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0102043	obj/kern/kernel.asm	/^f0102043:	e8 f8 df ff ff       	call   f0100040 <_panic>$/;"	l
f0102048	obj/kern/kernel.asm	/^f0102048:	83 3b 00             	cmpl   $0x0,(%ebx)$/;"	l
f010204b	obj/kern/kernel.asm	/^f010204b:	74 19                	je     f0102066 <mem_init+0xd89>$/;"	l
f010204d	obj/kern/kernel.asm	/^f010204d:	68 fd 69 10 f0       	push   $0xf01069fd$/;"	l
f0102052	obj/kern/kernel.asm	/^f0102052:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0102057	obj/kern/kernel.asm	/^f0102057:	68 55 04 00 00       	push   $0x455$/;"	l
f010205c	obj/kern/kernel.asm	/^f010205c:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0102061	obj/kern/kernel.asm	/^f0102061:	e8 da df ff ff       	call   f0100040 <_panic>$/;"	l
f0102066	obj/kern/kernel.asm	/^f0102066:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102069	obj/kern/kernel.asm	/^f0102069:	68 00 10 00 00       	push   $0x1000$/;"	l
f010206e	obj/kern/kernel.asm	/^f010206e:	ff 35 0c af 22 f0    	pushl  0xf022af0c$/;"	l
f0102074	obj/kern/kernel.asm	/^f0102074:	e8 43 f1 ff ff       	call   f01011bc <page_remove>$/;"	l
f0102079	obj/kern/kernel.asm	/^f0102079:	8b 3d 0c af 22 f0    	mov    0xf022af0c,%edi$/;"	l
f010207f	obj/kern/kernel.asm	/^f010207f:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102084	obj/kern/kernel.asm	/^f0102084:	89 f8                	mov    %edi,%eax$/;"	l
f0102086	obj/kern/kernel.asm	/^f0102086:	e8 d3 e9 ff ff       	call   f0100a5e <check_va2pa>$/;"	l
f010208b	obj/kern/kernel.asm	/^f010208b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010208e	obj/kern/kernel.asm	/^f010208e:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102091	obj/kern/kernel.asm	/^f0102091:	74 19                	je     f01020ac <mem_init+0xdcf>$/;"	l
f0102093	obj/kern/kernel.asm	/^f0102093:	68 24 63 10 f0       	push   $0xf0106324$/;"	l
f0102098	obj/kern/kernel.asm	/^f0102098:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f010209d	obj/kern/kernel.asm	/^f010209d:	68 59 04 00 00       	push   $0x459$/;"	l
f01020a2	obj/kern/kernel.asm	/^f01020a2:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f01020a7	obj/kern/kernel.asm	/^f01020a7:	e8 94 df ff ff       	call   f0100040 <_panic>$/;"	l
f01020ac	obj/kern/kernel.asm	/^f01020ac:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01020b1	obj/kern/kernel.asm	/^f01020b1:	89 f8                	mov    %edi,%eax$/;"	l
f01020b3	obj/kern/kernel.asm	/^f01020b3:	e8 a6 e9 ff ff       	call   f0100a5e <check_va2pa>$/;"	l
f01020b8	obj/kern/kernel.asm	/^f01020b8:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01020bb	obj/kern/kernel.asm	/^f01020bb:	74 19                	je     f01020d6 <mem_init+0xdf9>$/;"	l
f01020bd	obj/kern/kernel.asm	/^f01020bd:	68 80 63 10 f0       	push   $0xf0106380$/;"	l
f01020c2	obj/kern/kernel.asm	/^f01020c2:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f01020c7	obj/kern/kernel.asm	/^f01020c7:	68 5a 04 00 00       	push   $0x45a$/;"	l
f01020cc	obj/kern/kernel.asm	/^f01020cc:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f01020d1	obj/kern/kernel.asm	/^f01020d1:	e8 6a df ff ff       	call   f0100040 <_panic>$/;"	l
f01020d6	obj/kern/kernel.asm	/^f01020d6:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f01020db	obj/kern/kernel.asm	/^f01020db:	74 19                	je     f01020f6 <mem_init+0xe19>$/;"	l
f01020dd	obj/kern/kernel.asm	/^f01020dd:	68 12 6a 10 f0       	push   $0xf0106a12$/;"	l
f01020e2	obj/kern/kernel.asm	/^f01020e2:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f01020e7	obj/kern/kernel.asm	/^f01020e7:	68 5b 04 00 00       	push   $0x45b$/;"	l
f01020ec	obj/kern/kernel.asm	/^f01020ec:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f01020f1	obj/kern/kernel.asm	/^f01020f1:	e8 4a df ff ff       	call   f0100040 <_panic>$/;"	l
f01020f6	obj/kern/kernel.asm	/^f01020f6:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f01020fb	obj/kern/kernel.asm	/^f01020fb:	74 19                	je     f0102116 <mem_init+0xe39>$/;"	l
f01020fd	obj/kern/kernel.asm	/^f01020fd:	68 e0 69 10 f0       	push   $0xf01069e0$/;"	l
f0102102	obj/kern/kernel.asm	/^f0102102:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0102107	obj/kern/kernel.asm	/^f0102107:	68 5c 04 00 00       	push   $0x45c$/;"	l
f010210c	obj/kern/kernel.asm	/^f010210c:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0102111	obj/kern/kernel.asm	/^f0102111:	e8 2a df ff ff       	call   f0100040 <_panic>$/;"	l
f0102116	obj/kern/kernel.asm	/^f0102116:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102119	obj/kern/kernel.asm	/^f0102119:	6a 00                	push   $0x0$/;"	l
f010211b	obj/kern/kernel.asm	/^f010211b:	e8 f7 ed ff ff       	call   f0100f17 <page_alloc>$/;"	l
f0102120	obj/kern/kernel.asm	/^f0102120:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102123	obj/kern/kernel.asm	/^f0102123:	85 c0                	test   %eax,%eax$/;"	l
f0102125	obj/kern/kernel.asm	/^f0102125:	74 04                	je     f010212b <mem_init+0xe4e>$/;"	l
f0102127	obj/kern/kernel.asm	/^f0102127:	39 c3                	cmp    %eax,%ebx$/;"	l
f0102129	obj/kern/kernel.asm	/^f0102129:	74 19                	je     f0102144 <mem_init+0xe67>$/;"	l
f010212b	obj/kern/kernel.asm	/^f010212b:	68 a8 63 10 f0       	push   $0xf01063a8$/;"	l
f0102130	obj/kern/kernel.asm	/^f0102130:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0102135	obj/kern/kernel.asm	/^f0102135:	68 5f 04 00 00       	push   $0x45f$/;"	l
f010213a	obj/kern/kernel.asm	/^f010213a:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f010213f	obj/kern/kernel.asm	/^f010213f:	e8 fc de ff ff       	call   f0100040 <_panic>$/;"	l
f0102144	obj/kern/kernel.asm	/^f0102144:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102147	obj/kern/kernel.asm	/^f0102147:	6a 00                	push   $0x0$/;"	l
f0102149	obj/kern/kernel.asm	/^f0102149:	e8 c9 ed ff ff       	call   f0100f17 <page_alloc>$/;"	l
f010214e	obj/kern/kernel.asm	/^f010214e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102151	obj/kern/kernel.asm	/^f0102151:	85 c0                	test   %eax,%eax$/;"	l
f0102153	obj/kern/kernel.asm	/^f0102153:	74 19                	je     f010216e <mem_init+0xe91>$/;"	l
f0102155	obj/kern/kernel.asm	/^f0102155:	68 34 69 10 f0       	push   $0xf0106934$/;"	l
f010215a	obj/kern/kernel.asm	/^f010215a:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f010215f	obj/kern/kernel.asm	/^f010215f:	68 62 04 00 00       	push   $0x462$/;"	l
f0102164	obj/kern/kernel.asm	/^f0102164:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0102169	obj/kern/kernel.asm	/^f0102169:	e8 d2 de ff ff       	call   f0100040 <_panic>$/;"	l
f010216e	obj/kern/kernel.asm	/^f010216e:	8b 0d 0c af 22 f0    	mov    0xf022af0c,%ecx$/;"	l
f0102174	obj/kern/kernel.asm	/^f0102174:	8b 11                	mov    (%ecx),%edx$/;"	l
f0102176	obj/kern/kernel.asm	/^f0102176:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f010217c	obj/kern/kernel.asm	/^f010217c:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010217f	obj/kern/kernel.asm	/^f010217f:	2b 05 10 af 22 f0    	sub    0xf022af10,%eax$/;"	l
f0102185	obj/kern/kernel.asm	/^f0102185:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102188	obj/kern/kernel.asm	/^f0102188:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010218b	obj/kern/kernel.asm	/^f010218b:	39 c2                	cmp    %eax,%edx$/;"	l
f010218d	obj/kern/kernel.asm	/^f010218d:	74 19                	je     f01021a8 <mem_init+0xecb>$/;"	l
f010218f	obj/kern/kernel.asm	/^f010218f:	68 4c 60 10 f0       	push   $0xf010604c$/;"	l
f0102194	obj/kern/kernel.asm	/^f0102194:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0102199	obj/kern/kernel.asm	/^f0102199:	68 65 04 00 00       	push   $0x465$/;"	l
f010219e	obj/kern/kernel.asm	/^f010219e:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f01021a3	obj/kern/kernel.asm	/^f01021a3:	e8 98 de ff ff       	call   f0100040 <_panic>$/;"	l
f01021a8	obj/kern/kernel.asm	/^f01021a8:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)$/;"	l
f01021ae	obj/kern/kernel.asm	/^f01021ae:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01021b1	obj/kern/kernel.asm	/^f01021b1:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)$/;"	l
f01021b6	obj/kern/kernel.asm	/^f01021b6:	74 19                	je     f01021d1 <mem_init+0xef4>$/;"	l
f01021b8	obj/kern/kernel.asm	/^f01021b8:	68 97 69 10 f0       	push   $0xf0106997$/;"	l
f01021bd	obj/kern/kernel.asm	/^f01021bd:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f01021c2	obj/kern/kernel.asm	/^f01021c2:	68 67 04 00 00       	push   $0x467$/;"	l
f01021c7	obj/kern/kernel.asm	/^f01021c7:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f01021cc	obj/kern/kernel.asm	/^f01021cc:	e8 6f de ff ff       	call   f0100040 <_panic>$/;"	l
f01021d1	obj/kern/kernel.asm	/^f01021d1:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01021d4	obj/kern/kernel.asm	/^f01021d4:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f01021da	obj/kern/kernel.asm	/^f01021da:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01021dd	obj/kern/kernel.asm	/^f01021dd:	50                   	push   %eax$/;"	l
f01021de	obj/kern/kernel.asm	/^f01021de:	e8 a4 ed ff ff       	call   f0100f87 <page_free>$/;"	l
f01021e3	obj/kern/kernel.asm	/^f01021e3:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01021e6	obj/kern/kernel.asm	/^f01021e6:	6a 01                	push   $0x1$/;"	l
f01021e8	obj/kern/kernel.asm	/^f01021e8:	68 00 10 40 00       	push   $0x401000$/;"	l
f01021ed	obj/kern/kernel.asm	/^f01021ed:	ff 35 0c af 22 f0    	pushl  0xf022af0c$/;"	l
f01021f3	obj/kern/kernel.asm	/^f01021f3:	e8 f1 ed ff ff       	call   f0100fe9 <pgdir_walk>$/;"	l
f01021f8	obj/kern/kernel.asm	/^f01021f8:	89 c7                	mov    %eax,%edi$/;"	l
f01021fa	obj/kern/kernel.asm	/^f01021fa:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01021fd	obj/kern/kernel.asm	/^f01021fd:	a1 0c af 22 f0       	mov    0xf022af0c,%eax$/;"	l
f0102202	obj/kern/kernel.asm	/^f0102202:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0102205	obj/kern/kernel.asm	/^f0102205:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0102208	obj/kern/kernel.asm	/^f0102208:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010220d	obj/kern/kernel.asm	/^f010220d:	8b 0d 08 af 22 f0    	mov    0xf022af08,%ecx$/;"	l
f0102213	obj/kern/kernel.asm	/^f0102213:	89 c2                	mov    %eax,%edx$/;"	l
f0102215	obj/kern/kernel.asm	/^f0102215:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102218	obj/kern/kernel.asm	/^f0102218:	83 c4 10             	add    $0x10,%esp$/;"	l
f010221b	obj/kern/kernel.asm	/^f010221b:	39 ca                	cmp    %ecx,%edx$/;"	l
f010221d	obj/kern/kernel.asm	/^f010221d:	72 15                	jb     f0102234 <mem_init+0xf57>$/;"	l
f010221f	obj/kern/kernel.asm	/^f010221f:	50                   	push   %eax$/;"	l
f0102220	obj/kern/kernel.asm	/^f0102220:	68 a4 58 10 f0       	push   $0xf01058a4$/;"	l
f0102225	obj/kern/kernel.asm	/^f0102225:	68 6e 04 00 00       	push   $0x46e$/;"	l
f010222a	obj/kern/kernel.asm	/^f010222a:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f010222f	obj/kern/kernel.asm	/^f010222f:	e8 0c de ff ff       	call   f0100040 <_panic>$/;"	l
f0102234	obj/kern/kernel.asm	/^f0102234:	2d fc ff ff 0f       	sub    $0xffffffc,%eax$/;"	l
f0102239	obj/kern/kernel.asm	/^f0102239:	39 c7                	cmp    %eax,%edi$/;"	l
f010223b	obj/kern/kernel.asm	/^f010223b:	74 19                	je     f0102256 <mem_init+0xf79>$/;"	l
f010223d	obj/kern/kernel.asm	/^f010223d:	68 23 6a 10 f0       	push   $0xf0106a23$/;"	l
f0102242	obj/kern/kernel.asm	/^f0102242:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0102247	obj/kern/kernel.asm	/^f0102247:	68 6f 04 00 00       	push   $0x46f$/;"	l
f010224c	obj/kern/kernel.asm	/^f010224c:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0102251	obj/kern/kernel.asm	/^f0102251:	e8 ea dd ff ff       	call   f0100040 <_panic>$/;"	l
f0102256	obj/kern/kernel.asm	/^f0102256:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f0102259	obj/kern/kernel.asm	/^f0102259:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
f0102260	obj/kern/kernel.asm	/^f0102260:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102263	obj/kern/kernel.asm	/^f0102263:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f0102269	obj/kern/kernel.asm	/^f0102269:	2b 05 10 af 22 f0    	sub    0xf022af10,%eax$/;"	l
f010226f	obj/kern/kernel.asm	/^f010226f:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102272	obj/kern/kernel.asm	/^f0102272:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102275	obj/kern/kernel.asm	/^f0102275:	89 c2                	mov    %eax,%edx$/;"	l
f0102277	obj/kern/kernel.asm	/^f0102277:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010227a	obj/kern/kernel.asm	/^f010227a:	39 d1                	cmp    %edx,%ecx$/;"	l
f010227c	obj/kern/kernel.asm	/^f010227c:	77 12                	ja     f0102290 <mem_init+0xfb3>$/;"	l
f010227e	obj/kern/kernel.asm	/^f010227e:	50                   	push   %eax$/;"	l
f010227f	obj/kern/kernel.asm	/^f010227f:	68 a4 58 10 f0       	push   $0xf01058a4$/;"	l
f0102284	obj/kern/kernel.asm	/^f0102284:	6a 58                	push   $0x58$/;"	l
f0102286	obj/kern/kernel.asm	/^f0102286:	68 78 67 10 f0       	push   $0xf0106778$/;"	l
f010228b	obj/kern/kernel.asm	/^f010228b:	e8 b0 dd ff ff       	call   f0100040 <_panic>$/;"	l
f0102290	obj/kern/kernel.asm	/^f0102290:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102293	obj/kern/kernel.asm	/^f0102293:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102298	obj/kern/kernel.asm	/^f0102298:	68 ff 00 00 00       	push   $0xff$/;"	l
f010229d	obj/kern/kernel.asm	/^f010229d:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01022a2	obj/kern/kernel.asm	/^f01022a2:	50                   	push   %eax$/;"	l
f01022a3	obj/kern/kernel.asm	/^f01022a3:	e8 28 29 00 00       	call   f0104bd0 <memset>$/;"	l
f01022a8	obj/kern/kernel.asm	/^f01022a8:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f01022ab	obj/kern/kernel.asm	/^f01022ab:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01022ae	obj/kern/kernel.asm	/^f01022ae:	e8 d4 ec ff ff       	call   f0100f87 <page_free>$/;"	l
f01022b3	obj/kern/kernel.asm	/^f01022b3:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01022b6	obj/kern/kernel.asm	/^f01022b6:	6a 01                	push   $0x1$/;"	l
f01022b8	obj/kern/kernel.asm	/^f01022b8:	6a 00                	push   $0x0$/;"	l
f01022ba	obj/kern/kernel.asm	/^f01022ba:	ff 35 0c af 22 f0    	pushl  0xf022af0c$/;"	l
f01022c0	obj/kern/kernel.asm	/^f01022c0:	e8 24 ed ff ff       	call   f0100fe9 <pgdir_walk>$/;"	l
f01022c5	obj/kern/kernel.asm	/^f01022c5:	89 fa                	mov    %edi,%edx$/;"	l
f01022c7	obj/kern/kernel.asm	/^f01022c7:	2b 15 10 af 22 f0    	sub    0xf022af10,%edx$/;"	l
f01022cd	obj/kern/kernel.asm	/^f01022cd:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01022d0	obj/kern/kernel.asm	/^f01022d0:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01022d3	obj/kern/kernel.asm	/^f01022d3:	89 d0                	mov    %edx,%eax$/;"	l
f01022d5	obj/kern/kernel.asm	/^f01022d5:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01022d8	obj/kern/kernel.asm	/^f01022d8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01022db	obj/kern/kernel.asm	/^f01022db:	3b 05 08 af 22 f0    	cmp    0xf022af08,%eax$/;"	l
f01022e1	obj/kern/kernel.asm	/^f01022e1:	72 12                	jb     f01022f5 <mem_init+0x1018>$/;"	l
f01022e3	obj/kern/kernel.asm	/^f01022e3:	52                   	push   %edx$/;"	l
f01022e4	obj/kern/kernel.asm	/^f01022e4:	68 a4 58 10 f0       	push   $0xf01058a4$/;"	l
f01022e9	obj/kern/kernel.asm	/^f01022e9:	6a 58                	push   $0x58$/;"	l
f01022eb	obj/kern/kernel.asm	/^f01022eb:	68 78 67 10 f0       	push   $0xf0106778$/;"	l
f01022f0	obj/kern/kernel.asm	/^f01022f0:	e8 4b dd ff ff       	call   f0100040 <_panic>$/;"	l
f01022f5	obj/kern/kernel.asm	/^f01022f5:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eax$/;"	l
f01022fb	obj/kern/kernel.asm	/^f01022fb:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01022fe	obj/kern/kernel.asm	/^f01022fe:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edx$/;"	l
f0102304	obj/kern/kernel.asm	/^f0102304:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f0102307	obj/kern/kernel.asm	/^f0102307:	74 19                	je     f0102322 <mem_init+0x1045>$/;"	l
f0102309	obj/kern/kernel.asm	/^f0102309:	68 3b 6a 10 f0       	push   $0xf0106a3b$/;"	l
f010230e	obj/kern/kernel.asm	/^f010230e:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0102313	obj/kern/kernel.asm	/^f0102313:	68 79 04 00 00       	push   $0x479$/;"	l
f0102318	obj/kern/kernel.asm	/^f0102318:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f010231d	obj/kern/kernel.asm	/^f010231d:	e8 1e dd ff ff       	call   f0100040 <_panic>$/;"	l
f0102322	obj/kern/kernel.asm	/^f0102322:	83 c0 04             	add    $0x4,%eax$/;"	l
f0102325	obj/kern/kernel.asm	/^f0102325:	39 d0                	cmp    %edx,%eax$/;"	l
f0102327	obj/kern/kernel.asm	/^f0102327:	75 db                	jne    f0102304 <mem_init+0x1027>$/;"	l
f0102329	obj/kern/kernel.asm	/^f0102329:	a1 0c af 22 f0       	mov    0xf022af0c,%eax$/;"	l
f010232e	obj/kern/kernel.asm	/^f010232e:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102334	obj/kern/kernel.asm	/^f0102334:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102337	obj/kern/kernel.asm	/^f0102337:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f010233d	obj/kern/kernel.asm	/^f010233d:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f0102340	obj/kern/kernel.asm	/^f0102340:	89 0d 40 a2 22 f0    	mov    %ecx,0xf022a240$/;"	l
f0102346	obj/kern/kernel.asm	/^f0102346:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102349	obj/kern/kernel.asm	/^f0102349:	50                   	push   %eax$/;"	l
f010234a	obj/kern/kernel.asm	/^f010234a:	e8 38 ec ff ff       	call   f0100f87 <page_free>$/;"	l
f010234f	obj/kern/kernel.asm	/^f010234f:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0102352	obj/kern/kernel.asm	/^f0102352:	e8 30 ec ff ff       	call   f0100f87 <page_free>$/;"	l
f0102357	obj/kern/kernel.asm	/^f0102357:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010235a	obj/kern/kernel.asm	/^f010235a:	e8 28 ec ff ff       	call   f0100f87 <page_free>$/;"	l
f010235f	obj/kern/kernel.asm	/^f010235f:	83 c4 08             	add    $0x8,%esp$/;"	l
f0102362	obj/kern/kernel.asm	/^f0102362:	68 01 10 00 00       	push   $0x1001$/;"	l
f0102367	obj/kern/kernel.asm	/^f0102367:	6a 00                	push   $0x0$/;"	l
f0102369	obj/kern/kernel.asm	/^f0102369:	e8 02 ef ff ff       	call   f0101270 <mmio_map_region>$/;"	l
f010236e	obj/kern/kernel.asm	/^f010236e:	89 c3                	mov    %eax,%ebx$/;"	l
f0102370	obj/kern/kernel.asm	/^f0102370:	83 c4 08             	add    $0x8,%esp$/;"	l
f0102373	obj/kern/kernel.asm	/^f0102373:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102378	obj/kern/kernel.asm	/^f0102378:	6a 00                	push   $0x0$/;"	l
f010237a	obj/kern/kernel.asm	/^f010237a:	e8 f1 ee ff ff       	call   f0101270 <mmio_map_region>$/;"	l
f010237f	obj/kern/kernel.asm	/^f010237f:	89 c6                	mov    %eax,%esi$/;"	l
f0102381	obj/kern/kernel.asm	/^f0102381:	8d 83 00 20 00 00    	lea    0x2000(%ebx),%eax$/;"	l
f0102387	obj/kern/kernel.asm	/^f0102387:	83 c4 10             	add    $0x10,%esp$/;"	l
f010238a	obj/kern/kernel.asm	/^f010238a:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f0102390	obj/kern/kernel.asm	/^f0102390:	76 07                	jbe    f0102399 <mem_init+0x10bc>$/;"	l
f0102392	obj/kern/kernel.asm	/^f0102392:	3d ff ff bf ef       	cmp    $0xefbfffff,%eax$/;"	l
f0102397	obj/kern/kernel.asm	/^f0102397:	76 19                	jbe    f01023b2 <mem_init+0x10d5>$/;"	l
f0102399	obj/kern/kernel.asm	/^f0102399:	68 cc 63 10 f0       	push   $0xf01063cc$/;"	l
f010239e	obj/kern/kernel.asm	/^f010239e:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f01023a3	obj/kern/kernel.asm	/^f01023a3:	68 89 04 00 00       	push   $0x489$/;"	l
f01023a8	obj/kern/kernel.asm	/^f01023a8:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f01023ad	obj/kern/kernel.asm	/^f01023ad:	e8 8e dc ff ff       	call   f0100040 <_panic>$/;"	l
f01023b2	obj/kern/kernel.asm	/^f01023b2:	8d 96 00 20 00 00    	lea    0x2000(%esi),%edx$/;"	l
f01023b8	obj/kern/kernel.asm	/^f01023b8:	81 fa ff ff bf ef    	cmp    $0xefbfffff,%edx$/;"	l
f01023be	obj/kern/kernel.asm	/^f01023be:	77 08                	ja     f01023c8 <mem_init+0x10eb>$/;"	l
f01023c0	obj/kern/kernel.asm	/^f01023c0:	81 fe ff ff 7f ef    	cmp    $0xef7fffff,%esi$/;"	l
f01023c6	obj/kern/kernel.asm	/^f01023c6:	77 19                	ja     f01023e1 <mem_init+0x1104>$/;"	l
f01023c8	obj/kern/kernel.asm	/^f01023c8:	68 f4 63 10 f0       	push   $0xf01063f4$/;"	l
f01023cd	obj/kern/kernel.asm	/^f01023cd:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f01023d2	obj/kern/kernel.asm	/^f01023d2:	68 8a 04 00 00       	push   $0x48a$/;"	l
f01023d7	obj/kern/kernel.asm	/^f01023d7:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f01023dc	obj/kern/kernel.asm	/^f01023dc:	e8 5f dc ff ff       	call   f0100040 <_panic>$/;"	l
f01023e1	obj/kern/kernel.asm	/^f01023e1:	89 da                	mov    %ebx,%edx$/;"	l
f01023e3	obj/kern/kernel.asm	/^f01023e3:	09 f2                	or     %esi,%edx$/;"	l
f01023e5	obj/kern/kernel.asm	/^f01023e5:	f7 c2 ff 0f 00 00    	test   $0xfff,%edx$/;"	l
f01023eb	obj/kern/kernel.asm	/^f01023eb:	74 19                	je     f0102406 <mem_init+0x1129>$/;"	l
f01023ed	obj/kern/kernel.asm	/^f01023ed:	68 1c 64 10 f0       	push   $0xf010641c$/;"	l
f01023f2	obj/kern/kernel.asm	/^f01023f2:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f01023f7	obj/kern/kernel.asm	/^f01023f7:	68 8c 04 00 00       	push   $0x48c$/;"	l
f01023fc	obj/kern/kernel.asm	/^f01023fc:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0102401	obj/kern/kernel.asm	/^f0102401:	e8 3a dc ff ff       	call   f0100040 <_panic>$/;"	l
f0102406	obj/kern/kernel.asm	/^f0102406:	39 c6                	cmp    %eax,%esi$/;"	l
f0102408	obj/kern/kernel.asm	/^f0102408:	73 19                	jae    f0102423 <mem_init+0x1146>$/;"	l
f010240a	obj/kern/kernel.asm	/^f010240a:	68 52 6a 10 f0       	push   $0xf0106a52$/;"	l
f010240f	obj/kern/kernel.asm	/^f010240f:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0102414	obj/kern/kernel.asm	/^f0102414:	68 8e 04 00 00       	push   $0x48e$/;"	l
f0102419	obj/kern/kernel.asm	/^f0102419:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f010241e	obj/kern/kernel.asm	/^f010241e:	e8 1d dc ff ff       	call   f0100040 <_panic>$/;"	l
f0102423	obj/kern/kernel.asm	/^f0102423:	8b 3d 0c af 22 f0    	mov    0xf022af0c,%edi$/;"	l
f0102429	obj/kern/kernel.asm	/^f0102429:	89 da                	mov    %ebx,%edx$/;"	l
f010242b	obj/kern/kernel.asm	/^f010242b:	89 f8                	mov    %edi,%eax$/;"	l
f010242d	obj/kern/kernel.asm	/^f010242d:	e8 2c e6 ff ff       	call   f0100a5e <check_va2pa>$/;"	l
f0102432	obj/kern/kernel.asm	/^f0102432:	85 c0                	test   %eax,%eax$/;"	l
f0102434	obj/kern/kernel.asm	/^f0102434:	74 19                	je     f010244f <mem_init+0x1172>$/;"	l
f0102436	obj/kern/kernel.asm	/^f0102436:	68 44 64 10 f0       	push   $0xf0106444$/;"	l
f010243b	obj/kern/kernel.asm	/^f010243b:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0102440	obj/kern/kernel.asm	/^f0102440:	68 90 04 00 00       	push   $0x490$/;"	l
f0102445	obj/kern/kernel.asm	/^f0102445:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f010244a	obj/kern/kernel.asm	/^f010244a:	e8 f1 db ff ff       	call   f0100040 <_panic>$/;"	l
f010244f	obj/kern/kernel.asm	/^f010244f:	8d 83 00 10 00 00    	lea    0x1000(%ebx),%eax$/;"	l
f0102455	obj/kern/kernel.asm	/^f0102455:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102458	obj/kern/kernel.asm	/^f0102458:	89 c2                	mov    %eax,%edx$/;"	l
f010245a	obj/kern/kernel.asm	/^f010245a:	89 f8                	mov    %edi,%eax$/;"	l
f010245c	obj/kern/kernel.asm	/^f010245c:	e8 fd e5 ff ff       	call   f0100a5e <check_va2pa>$/;"	l
f0102461	obj/kern/kernel.asm	/^f0102461:	3d 00 10 00 00       	cmp    $0x1000,%eax$/;"	l
f0102466	obj/kern/kernel.asm	/^f0102466:	74 19                	je     f0102481 <mem_init+0x11a4>$/;"	l
f0102468	obj/kern/kernel.asm	/^f0102468:	68 68 64 10 f0       	push   $0xf0106468$/;"	l
f010246d	obj/kern/kernel.asm	/^f010246d:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0102472	obj/kern/kernel.asm	/^f0102472:	68 91 04 00 00       	push   $0x491$/;"	l
f0102477	obj/kern/kernel.asm	/^f0102477:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f010247c	obj/kern/kernel.asm	/^f010247c:	e8 bf db ff ff       	call   f0100040 <_panic>$/;"	l
f0102481	obj/kern/kernel.asm	/^f0102481:	89 f2                	mov    %esi,%edx$/;"	l
f0102483	obj/kern/kernel.asm	/^f0102483:	89 f8                	mov    %edi,%eax$/;"	l
f0102485	obj/kern/kernel.asm	/^f0102485:	e8 d4 e5 ff ff       	call   f0100a5e <check_va2pa>$/;"	l
f010248a	obj/kern/kernel.asm	/^f010248a:	85 c0                	test   %eax,%eax$/;"	l
f010248c	obj/kern/kernel.asm	/^f010248c:	74 19                	je     f01024a7 <mem_init+0x11ca>$/;"	l
f010248e	obj/kern/kernel.asm	/^f010248e:	68 98 64 10 f0       	push   $0xf0106498$/;"	l
f0102493	obj/kern/kernel.asm	/^f0102493:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0102498	obj/kern/kernel.asm	/^f0102498:	68 92 04 00 00       	push   $0x492$/;"	l
f010249d	obj/kern/kernel.asm	/^f010249d:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f01024a2	obj/kern/kernel.asm	/^f01024a2:	e8 99 db ff ff       	call   f0100040 <_panic>$/;"	l
f01024a7	obj/kern/kernel.asm	/^f01024a7:	8d 96 00 10 00 00    	lea    0x1000(%esi),%edx$/;"	l
f01024ad	obj/kern/kernel.asm	/^f01024ad:	89 f8                	mov    %edi,%eax$/;"	l
f01024af	obj/kern/kernel.asm	/^f01024af:	e8 aa e5 ff ff       	call   f0100a5e <check_va2pa>$/;"	l
f01024b4	obj/kern/kernel.asm	/^f01024b4:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01024b7	obj/kern/kernel.asm	/^f01024b7:	74 19                	je     f01024d2 <mem_init+0x11f5>$/;"	l
f01024b9	obj/kern/kernel.asm	/^f01024b9:	68 bc 64 10 f0       	push   $0xf01064bc$/;"	l
f01024be	obj/kern/kernel.asm	/^f01024be:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f01024c3	obj/kern/kernel.asm	/^f01024c3:	68 93 04 00 00       	push   $0x493$/;"	l
f01024c8	obj/kern/kernel.asm	/^f01024c8:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f01024cd	obj/kern/kernel.asm	/^f01024cd:	e8 6e db ff ff       	call   f0100040 <_panic>$/;"	l
f01024d2	obj/kern/kernel.asm	/^f01024d2:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01024d5	obj/kern/kernel.asm	/^f01024d5:	6a 00                	push   $0x0$/;"	l
f01024d7	obj/kern/kernel.asm	/^f01024d7:	53                   	push   %ebx$/;"	l
f01024d8	obj/kern/kernel.asm	/^f01024d8:	57                   	push   %edi$/;"	l
f01024d9	obj/kern/kernel.asm	/^f01024d9:	e8 0b eb ff ff       	call   f0100fe9 <pgdir_walk>$/;"	l
f01024de	obj/kern/kernel.asm	/^f01024de:	83 c4 10             	add    $0x10,%esp$/;"	l
f01024e1	obj/kern/kernel.asm	/^f01024e1:	f6 00 1a             	testb  $0x1a,(%eax)$/;"	l
f01024e4	obj/kern/kernel.asm	/^f01024e4:	75 19                	jne    f01024ff <mem_init+0x1222>$/;"	l
f01024e6	obj/kern/kernel.asm	/^f01024e6:	68 e8 64 10 f0       	push   $0xf01064e8$/;"	l
f01024eb	obj/kern/kernel.asm	/^f01024eb:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f01024f0	obj/kern/kernel.asm	/^f01024f0:	68 95 04 00 00       	push   $0x495$/;"	l
f01024f5	obj/kern/kernel.asm	/^f01024f5:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f01024fa	obj/kern/kernel.asm	/^f01024fa:	e8 41 db ff ff       	call   f0100040 <_panic>$/;"	l
f01024ff	obj/kern/kernel.asm	/^f01024ff:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102502	obj/kern/kernel.asm	/^f0102502:	6a 00                	push   $0x0$/;"	l
f0102504	obj/kern/kernel.asm	/^f0102504:	53                   	push   %ebx$/;"	l
f0102505	obj/kern/kernel.asm	/^f0102505:	ff 35 0c af 22 f0    	pushl  0xf022af0c$/;"	l
f010250b	obj/kern/kernel.asm	/^f010250b:	e8 d9 ea ff ff       	call   f0100fe9 <pgdir_walk>$/;"	l
f0102510	obj/kern/kernel.asm	/^f0102510:	8b 00                	mov    (%eax),%eax$/;"	l
f0102512	obj/kern/kernel.asm	/^f0102512:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102515	obj/kern/kernel.asm	/^f0102515:	83 e0 04             	and    $0x4,%eax$/;"	l
f0102518	obj/kern/kernel.asm	/^f0102518:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f010251b	obj/kern/kernel.asm	/^f010251b:	74 19                	je     f0102536 <mem_init+0x1259>$/;"	l
f010251d	obj/kern/kernel.asm	/^f010251d:	68 2c 65 10 f0       	push   $0xf010652c$/;"	l
f0102522	obj/kern/kernel.asm	/^f0102522:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0102527	obj/kern/kernel.asm	/^f0102527:	68 96 04 00 00       	push   $0x496$/;"	l
f010252c	obj/kern/kernel.asm	/^f010252c:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0102531	obj/kern/kernel.asm	/^f0102531:	e8 0a db ff ff       	call   f0100040 <_panic>$/;"	l
f0102536	obj/kern/kernel.asm	/^f0102536:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102539	obj/kern/kernel.asm	/^f0102539:	6a 00                	push   $0x0$/;"	l
f010253b	obj/kern/kernel.asm	/^f010253b:	53                   	push   %ebx$/;"	l
f010253c	obj/kern/kernel.asm	/^f010253c:	ff 35 0c af 22 f0    	pushl  0xf022af0c$/;"	l
f0102542	obj/kern/kernel.asm	/^f0102542:	e8 a2 ea ff ff       	call   f0100fe9 <pgdir_walk>$/;"	l
f0102547	obj/kern/kernel.asm	/^f0102547:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f010254d	obj/kern/kernel.asm	/^f010254d:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0102550	obj/kern/kernel.asm	/^f0102550:	6a 00                	push   $0x0$/;"	l
f0102552	obj/kern/kernel.asm	/^f0102552:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0102555	obj/kern/kernel.asm	/^f0102555:	ff 35 0c af 22 f0    	pushl  0xf022af0c$/;"	l
f010255b	obj/kern/kernel.asm	/^f010255b:	e8 89 ea ff ff       	call   f0100fe9 <pgdir_walk>$/;"	l
f0102560	obj/kern/kernel.asm	/^f0102560:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102566	obj/kern/kernel.asm	/^f0102566:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0102569	obj/kern/kernel.asm	/^f0102569:	6a 00                	push   $0x0$/;"	l
f010256b	obj/kern/kernel.asm	/^f010256b:	56                   	push   %esi$/;"	l
f010256c	obj/kern/kernel.asm	/^f010256c:	ff 35 0c af 22 f0    	pushl  0xf022af0c$/;"	l
f0102572	obj/kern/kernel.asm	/^f0102572:	e8 72 ea ff ff       	call   f0100fe9 <pgdir_walk>$/;"	l
f0102577	obj/kern/kernel.asm	/^f0102577:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f010257d	obj/kern/kernel.asm	/^f010257d:	c7 04 24 64 6a 10 f0 	movl   $0xf0106a64,(%esp)$/;"	l
f0102584	obj/kern/kernel.asm	/^f0102584:	e8 5f 10 00 00       	call   f01035e8 <cprintf>$/;"	l
f0102589	obj/kern/kernel.asm	/^f0102589:	a1 10 af 22 f0       	mov    0xf022af10,%eax$/;"	l
f010258e	obj/kern/kernel.asm	/^f010258e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102591	obj/kern/kernel.asm	/^f0102591:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102596	obj/kern/kernel.asm	/^f0102596:	77 15                	ja     f01025ad <mem_init+0x12d0>$/;"	l
f0102598	obj/kern/kernel.asm	/^f0102598:	50                   	push   %eax$/;"	l
f0102599	obj/kern/kernel.asm	/^f0102599:	68 c8 58 10 f0       	push   $0xf01058c8$/;"	l
f010259e	obj/kern/kernel.asm	/^f010259e:	68 cc 00 00 00       	push   $0xcc$/;"	l
f01025a3	obj/kern/kernel.asm	/^f01025a3:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f01025a8	obj/kern/kernel.asm	/^f01025a8:	e8 93 da ff ff       	call   f0100040 <_panic>$/;"	l
f01025ad	obj/kern/kernel.asm	/^f01025ad:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01025b0	obj/kern/kernel.asm	/^f01025b0:	6a 05                	push   $0x5$/;"	l
f01025b2	obj/kern/kernel.asm	/^f01025b2:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01025b7	obj/kern/kernel.asm	/^f01025b7:	50                   	push   %eax$/;"	l
f01025b8	obj/kern/kernel.asm	/^f01025b8:	b9 00 00 40 00       	mov    $0x400000,%ecx$/;"	l
f01025bd	obj/kern/kernel.asm	/^f01025bd:	ba 00 00 00 ef       	mov    $0xef000000,%edx$/;"	l
f01025c2	obj/kern/kernel.asm	/^f01025c2:	a1 0c af 22 f0       	mov    0xf022af0c,%eax$/;"	l
f01025c7	obj/kern/kernel.asm	/^f01025c7:	e8 ea ea ff ff       	call   f01010b6 <boot_map_region>$/;"	l
f01025cc	obj/kern/kernel.asm	/^f01025cc:	a1 44 a2 22 f0       	mov    0xf022a244,%eax$/;"	l
f01025d1	obj/kern/kernel.asm	/^f01025d1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01025d4	obj/kern/kernel.asm	/^f01025d4:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01025d9	obj/kern/kernel.asm	/^f01025d9:	77 15                	ja     f01025f0 <mem_init+0x1313>$/;"	l
f01025db	obj/kern/kernel.asm	/^f01025db:	50                   	push   %eax$/;"	l
f01025dc	obj/kern/kernel.asm	/^f01025dc:	68 c8 58 10 f0       	push   $0xf01058c8$/;"	l
f01025e1	obj/kern/kernel.asm	/^f01025e1:	68 dd 00 00 00       	push   $0xdd$/;"	l
f01025e6	obj/kern/kernel.asm	/^f01025e6:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f01025eb	obj/kern/kernel.asm	/^f01025eb:	e8 50 da ff ff       	call   f0100040 <_panic>$/;"	l
f01025f0	obj/kern/kernel.asm	/^f01025f0:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01025f3	obj/kern/kernel.asm	/^f01025f3:	6a 05                	push   $0x5$/;"	l
f01025f5	obj/kern/kernel.asm	/^f01025f5:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01025fa	obj/kern/kernel.asm	/^f01025fa:	50                   	push   %eax$/;"	l
f01025fb	obj/kern/kernel.asm	/^f01025fb:	b9 00 f0 01 00       	mov    $0x1f000,%ecx$/;"	l
f0102600	obj/kern/kernel.asm	/^f0102600:	ba 00 00 c0 ee       	mov    $0xeec00000,%edx$/;"	l
f0102605	obj/kern/kernel.asm	/^f0102605:	a1 0c af 22 f0       	mov    0xf022af0c,%eax$/;"	l
f010260a	obj/kern/kernel.asm	/^f010260a:	e8 a7 ea ff ff       	call   f01010b6 <boot_map_region>$/;"	l
f010260f	obj/kern/kernel.asm	/^f010260f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102612	obj/kern/kernel.asm	/^f0102612:	b8 00 50 11 f0       	mov    $0xf0115000,%eax$/;"	l
f0102617	obj/kern/kernel.asm	/^f0102617:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010261c	obj/kern/kernel.asm	/^f010261c:	77 15                	ja     f0102633 <mem_init+0x1356>$/;"	l
f010261e	obj/kern/kernel.asm	/^f010261e:	50                   	push   %eax$/;"	l
f010261f	obj/kern/kernel.asm	/^f010261f:	68 c8 58 10 f0       	push   $0xf01058c8$/;"	l
f0102624	obj/kern/kernel.asm	/^f0102624:	68 ec 00 00 00       	push   $0xec$/;"	l
f0102629	obj/kern/kernel.asm	/^f0102629:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f010262e	obj/kern/kernel.asm	/^f010262e:	e8 0d da ff ff       	call   f0100040 <_panic>$/;"	l
f0102633	obj/kern/kernel.asm	/^f0102633:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102636	obj/kern/kernel.asm	/^f0102636:	6a 02                	push   $0x2$/;"	l
f0102638	obj/kern/kernel.asm	/^f0102638:	68 00 50 11 00       	push   $0x115000$/;"	l
f010263d	obj/kern/kernel.asm	/^f010263d:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f0102642	obj/kern/kernel.asm	/^f0102642:	ba 00 80 ff ef       	mov    $0xefff8000,%edx$/;"	l
f0102647	obj/kern/kernel.asm	/^f0102647:	a1 0c af 22 f0       	mov    0xf022af0c,%eax$/;"	l
f010264c	obj/kern/kernel.asm	/^f010264c:	e8 65 ea ff ff       	call   f01010b6 <boot_map_region>$/;"	l
f0102651	obj/kern/kernel.asm	/^f0102651:	83 c4 08             	add    $0x8,%esp$/;"	l
f0102654	obj/kern/kernel.asm	/^f0102654:	6a 02                	push   $0x2$/;"	l
f0102656	obj/kern/kernel.asm	/^f0102656:	6a 00                	push   $0x0$/;"	l
f0102658	obj/kern/kernel.asm	/^f0102658:	b9 00 00 00 10       	mov    $0x10000000,%ecx$/;"	l
f010265d	obj/kern/kernel.asm	/^f010265d:	ba 00 00 00 f0       	mov    $0xf0000000,%edx$/;"	l
f0102662	obj/kern/kernel.asm	/^f0102662:	a1 0c af 22 f0       	mov    0xf022af0c,%eax$/;"	l
f0102667	obj/kern/kernel.asm	/^f0102667:	e8 4a ea ff ff       	call   f01010b6 <boot_map_region>$/;"	l
f010266c	obj/kern/kernel.asm	/^f010266c:	8b 3d 0c af 22 f0    	mov    0xf022af0c,%edi$/;"	l
f0102672	obj/kern/kernel.asm	/^f0102672:	a1 08 af 22 f0       	mov    0xf022af08,%eax$/;"	l
f0102677	obj/kern/kernel.asm	/^f0102677:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f010267a	obj/kern/kernel.asm	/^f010267a:	8d 04 c5 ff 0f 00 00 	lea    0xfff(,%eax,8),%eax$/;"	l
f0102681	obj/kern/kernel.asm	/^f0102681:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0102686	obj/kern/kernel.asm	/^f0102686:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102689	obj/kern/kernel.asm	/^f0102689:	8b 35 10 af 22 f0    	mov    0xf022af10,%esi$/;"	l
f010268f	obj/kern/kernel.asm	/^f010268f:	89 75 d0             	mov    %esi,-0x30(%ebp)$/;"	l
f0102692	obj/kern/kernel.asm	/^f0102692:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102695	obj/kern/kernel.asm	/^f0102695:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010269a	obj/kern/kernel.asm	/^f010269a:	eb 55                	jmp    f01026f1 <mem_init+0x1414>$/;"	l
f010269c	obj/kern/kernel.asm	/^f010269c:	8d 93 00 00 00 ef    	lea    -0x11000000(%ebx),%edx$/;"	l
f01026a2	obj/kern/kernel.asm	/^f01026a2:	89 f8                	mov    %edi,%eax$/;"	l
f01026a4	obj/kern/kernel.asm	/^f01026a4:	e8 b5 e3 ff ff       	call   f0100a5e <check_va2pa>$/;"	l
f01026a9	obj/kern/kernel.asm	/^f01026a9:	81 7d d0 ff ff ff ef 	cmpl   $0xefffffff,-0x30(%ebp)$/;"	l
f01026b0	obj/kern/kernel.asm	/^f01026b0:	77 15                	ja     f01026c7 <mem_init+0x13ea>$/;"	l
f01026b2	obj/kern/kernel.asm	/^f01026b2:	56                   	push   %esi$/;"	l
f01026b3	obj/kern/kernel.asm	/^f01026b3:	68 c8 58 10 f0       	push   $0xf01058c8$/;"	l
f01026b8	obj/kern/kernel.asm	/^f01026b8:	68 ae 03 00 00       	push   $0x3ae$/;"	l
f01026bd	obj/kern/kernel.asm	/^f01026bd:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f01026c2	obj/kern/kernel.asm	/^f01026c2:	e8 79 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f01026c7	obj/kern/kernel.asm	/^f01026c7:	8d 94 1e 00 00 00 10 	lea    0x10000000(%esi,%ebx,1),%edx$/;"	l
f01026ce	obj/kern/kernel.asm	/^f01026ce:	39 d0                	cmp    %edx,%eax$/;"	l
f01026d0	obj/kern/kernel.asm	/^f01026d0:	74 19                	je     f01026eb <mem_init+0x140e>$/;"	l
f01026d2	obj/kern/kernel.asm	/^f01026d2:	68 60 65 10 f0       	push   $0xf0106560$/;"	l
f01026d7	obj/kern/kernel.asm	/^f01026d7:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f01026dc	obj/kern/kernel.asm	/^f01026dc:	68 ae 03 00 00       	push   $0x3ae$/;"	l
f01026e1	obj/kern/kernel.asm	/^f01026e1:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f01026e6	obj/kern/kernel.asm	/^f01026e6:	e8 55 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f01026eb	obj/kern/kernel.asm	/^f01026eb:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01026f1	obj/kern/kernel.asm	/^f01026f1:	39 5d d4             	cmp    %ebx,-0x2c(%ebp)$/;"	l
f01026f4	obj/kern/kernel.asm	/^f01026f4:	77 a6                	ja     f010269c <mem_init+0x13bf>$/;"	l
f01026f6	obj/kern/kernel.asm	/^f01026f6:	8b 35 44 a2 22 f0    	mov    0xf022a244,%esi$/;"	l
f01026fc	obj/kern/kernel.asm	/^f01026fc:	89 75 d4             	mov    %esi,-0x2c(%ebp)$/;"	l
f01026ff	obj/kern/kernel.asm	/^f01026ff:	bb 00 00 c0 ee       	mov    $0xeec00000,%ebx$/;"	l
f0102704	obj/kern/kernel.asm	/^f0102704:	89 da                	mov    %ebx,%edx$/;"	l
f0102706	obj/kern/kernel.asm	/^f0102706:	89 f8                	mov    %edi,%eax$/;"	l
f0102708	obj/kern/kernel.asm	/^f0102708:	e8 51 e3 ff ff       	call   f0100a5e <check_va2pa>$/;"	l
f010270d	obj/kern/kernel.asm	/^f010270d:	81 7d d4 ff ff ff ef 	cmpl   $0xefffffff,-0x2c(%ebp)$/;"	l
f0102714	obj/kern/kernel.asm	/^f0102714:	77 15                	ja     f010272b <mem_init+0x144e>$/;"	l
f0102716	obj/kern/kernel.asm	/^f0102716:	56                   	push   %esi$/;"	l
f0102717	obj/kern/kernel.asm	/^f0102717:	68 c8 58 10 f0       	push   $0xf01058c8$/;"	l
f010271c	obj/kern/kernel.asm	/^f010271c:	68 b3 03 00 00       	push   $0x3b3$/;"	l
f0102721	obj/kern/kernel.asm	/^f0102721:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0102726	obj/kern/kernel.asm	/^f0102726:	e8 15 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f010272b	obj/kern/kernel.asm	/^f010272b:	8d 94 1e 00 00 40 21 	lea    0x21400000(%esi,%ebx,1),%edx$/;"	l
f0102732	obj/kern/kernel.asm	/^f0102732:	39 d0                	cmp    %edx,%eax$/;"	l
f0102734	obj/kern/kernel.asm	/^f0102734:	74 19                	je     f010274f <mem_init+0x1472>$/;"	l
f0102736	obj/kern/kernel.asm	/^f0102736:	68 94 65 10 f0       	push   $0xf0106594$/;"	l
f010273b	obj/kern/kernel.asm	/^f010273b:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0102740	obj/kern/kernel.asm	/^f0102740:	68 b3 03 00 00       	push   $0x3b3$/;"	l
f0102745	obj/kern/kernel.asm	/^f0102745:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f010274a	obj/kern/kernel.asm	/^f010274a:	e8 f1 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f010274f	obj/kern/kernel.asm	/^f010274f:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102755	obj/kern/kernel.asm	/^f0102755:	81 fb 00 f0 c1 ee    	cmp    $0xeec1f000,%ebx$/;"	l
f010275b	obj/kern/kernel.asm	/^f010275b:	75 a7                	jne    f0102704 <mem_init+0x1427>$/;"	l
f010275d	obj/kern/kernel.asm	/^f010275d:	8b 75 cc             	mov    -0x34(%ebp),%esi$/;"	l
f0102760	obj/kern/kernel.asm	/^f0102760:	c1 e6 0c             	shl    $0xc,%esi$/;"	l
f0102763	obj/kern/kernel.asm	/^f0102763:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0102768	obj/kern/kernel.asm	/^f0102768:	eb 30                	jmp    f010279a <mem_init+0x14bd>$/;"	l
f010276a	obj/kern/kernel.asm	/^f010276a:	8d 93 00 00 00 f0    	lea    -0x10000000(%ebx),%edx$/;"	l
f0102770	obj/kern/kernel.asm	/^f0102770:	89 f8                	mov    %edi,%eax$/;"	l
f0102772	obj/kern/kernel.asm	/^f0102772:	e8 e7 e2 ff ff       	call   f0100a5e <check_va2pa>$/;"	l
f0102777	obj/kern/kernel.asm	/^f0102777:	39 c3                	cmp    %eax,%ebx$/;"	l
f0102779	obj/kern/kernel.asm	/^f0102779:	74 19                	je     f0102794 <mem_init+0x14b7>$/;"	l
f010277b	obj/kern/kernel.asm	/^f010277b:	68 c8 65 10 f0       	push   $0xf01065c8$/;"	l
f0102780	obj/kern/kernel.asm	/^f0102780:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0102785	obj/kern/kernel.asm	/^f0102785:	68 b7 03 00 00       	push   $0x3b7$/;"	l
f010278a	obj/kern/kernel.asm	/^f010278a:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f010278f	obj/kern/kernel.asm	/^f010278f:	e8 ac d8 ff ff       	call   f0100040 <_panic>$/;"	l
f0102794	obj/kern/kernel.asm	/^f0102794:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f010279a	obj/kern/kernel.asm	/^f010279a:	39 f3                	cmp    %esi,%ebx$/;"	l
f010279c	obj/kern/kernel.asm	/^f010279c:	72 cc                	jb     f010276a <mem_init+0x148d>$/;"	l
f010279e	obj/kern/kernel.asm	/^f010279e:	be 00 c0 22 f0       	mov    $0xf022c000,%esi$/;"	l
f01027a3	obj/kern/kernel.asm	/^f01027a3:	c7 45 cc 00 80 ff ef 	movl   $0xefff8000,-0x34(%ebp)$/;"	l
f01027aa	obj/kern/kernel.asm	/^f01027aa:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f01027ad	obj/kern/kernel.asm	/^f01027ad:	8d 88 00 80 00 00    	lea    0x8000(%eax),%ecx$/;"	l
f01027b3	obj/kern/kernel.asm	/^f01027b3:	89 4d d4             	mov    %ecx,-0x2c(%ebp)$/;"	l
f01027b6	obj/kern/kernel.asm	/^f01027b6:	89 c3                	mov    %eax,%ebx$/;"	l
f01027b8	obj/kern/kernel.asm	/^f01027b8:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
f01027bb	obj/kern/kernel.asm	/^f01027bb:	05 00 80 00 20       	add    $0x20008000,%eax$/;"	l
f01027c0	obj/kern/kernel.asm	/^f01027c0:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01027c3	obj/kern/kernel.asm	/^f01027c3:	89 da                	mov    %ebx,%edx$/;"	l
f01027c5	obj/kern/kernel.asm	/^f01027c5:	89 f8                	mov    %edi,%eax$/;"	l
f01027c7	obj/kern/kernel.asm	/^f01027c7:	e8 92 e2 ff ff       	call   f0100a5e <check_va2pa>$/;"	l
f01027cc	obj/kern/kernel.asm	/^f01027cc:	81 fe ff ff ff ef    	cmp    $0xefffffff,%esi$/;"	l
f01027d2	obj/kern/kernel.asm	/^f01027d2:	77 15                	ja     f01027e9 <mem_init+0x150c>$/;"	l
f01027d4	obj/kern/kernel.asm	/^f01027d4:	56                   	push   %esi$/;"	l
f01027d5	obj/kern/kernel.asm	/^f01027d5:	68 c8 58 10 f0       	push   $0xf01058c8$/;"	l
f01027da	obj/kern/kernel.asm	/^f01027da:	68 bf 03 00 00       	push   $0x3bf$/;"	l
f01027df	obj/kern/kernel.asm	/^f01027df:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f01027e4	obj/kern/kernel.asm	/^f01027e4:	e8 57 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f01027e9	obj/kern/kernel.asm	/^f01027e9:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f01027ec	obj/kern/kernel.asm	/^f01027ec:	8d 94 0b 00 c0 22 f0 	lea    -0xfdd4000(%ebx,%ecx,1),%edx$/;"	l
f01027f3	obj/kern/kernel.asm	/^f01027f3:	39 d0                	cmp    %edx,%eax$/;"	l
f01027f5	obj/kern/kernel.asm	/^f01027f5:	74 19                	je     f0102810 <mem_init+0x1533>$/;"	l
f01027f7	obj/kern/kernel.asm	/^f01027f7:	68 f0 65 10 f0       	push   $0xf01065f0$/;"	l
f01027fc	obj/kern/kernel.asm	/^f01027fc:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0102801	obj/kern/kernel.asm	/^f0102801:	68 bf 03 00 00       	push   $0x3bf$/;"	l
f0102806	obj/kern/kernel.asm	/^f0102806:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f010280b	obj/kern/kernel.asm	/^f010280b:	e8 30 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f0102810	obj/kern/kernel.asm	/^f0102810:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102816	obj/kern/kernel.asm	/^f0102816:	39 5d d4             	cmp    %ebx,-0x2c(%ebp)$/;"	l
f0102819	obj/kern/kernel.asm	/^f0102819:	75 a8                	jne    f01027c3 <mem_init+0x14e6>$/;"	l
f010281b	obj/kern/kernel.asm	/^f010281b:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f010281e	obj/kern/kernel.asm	/^f010281e:	8d 98 00 80 ff ff    	lea    -0x8000(%eax),%ebx$/;"	l
f0102824	obj/kern/kernel.asm	/^f0102824:	89 75 d4             	mov    %esi,-0x2c(%ebp)$/;"	l
f0102827	obj/kern/kernel.asm	/^f0102827:	89 c6                	mov    %eax,%esi$/;"	l
f0102829	obj/kern/kernel.asm	/^f0102829:	89 da                	mov    %ebx,%edx$/;"	l
f010282b	obj/kern/kernel.asm	/^f010282b:	89 f8                	mov    %edi,%eax$/;"	l
f010282d	obj/kern/kernel.asm	/^f010282d:	e8 2c e2 ff ff       	call   f0100a5e <check_va2pa>$/;"	l
f0102832	obj/kern/kernel.asm	/^f0102832:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102835	obj/kern/kernel.asm	/^f0102835:	74 19                	je     f0102850 <mem_init+0x1573>$/;"	l
f0102837	obj/kern/kernel.asm	/^f0102837:	68 38 66 10 f0       	push   $0xf0106638$/;"	l
f010283c	obj/kern/kernel.asm	/^f010283c:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0102841	obj/kern/kernel.asm	/^f0102841:	68 c1 03 00 00       	push   $0x3c1$/;"	l
f0102846	obj/kern/kernel.asm	/^f0102846:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f010284b	obj/kern/kernel.asm	/^f010284b:	e8 f0 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f0102850	obj/kern/kernel.asm	/^f0102850:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102856	obj/kern/kernel.asm	/^f0102856:	39 f3                	cmp    %esi,%ebx$/;"	l
f0102858	obj/kern/kernel.asm	/^f0102858:	75 cf                	jne    f0102829 <mem_init+0x154c>$/;"	l
f010285a	obj/kern/kernel.asm	/^f010285a:	8b 75 d4             	mov    -0x2c(%ebp),%esi$/;"	l
f010285d	obj/kern/kernel.asm	/^f010285d:	81 6d cc 00 00 01 00 	subl   $0x10000,-0x34(%ebp)$/;"	l
f0102864	obj/kern/kernel.asm	/^f0102864:	81 45 c8 00 80 01 00 	addl   $0x18000,-0x38(%ebp)$/;"	l
f010286b	obj/kern/kernel.asm	/^f010286b:	81 c6 00 80 00 00    	add    $0x8000,%esi$/;"	l
f0102871	obj/kern/kernel.asm	/^f0102871:	81 fe 00 c0 26 f0    	cmp    $0xf026c000,%esi$/;"	l
f0102877	obj/kern/kernel.asm	/^f0102877:	0f 85 2d ff ff ff    	jne    f01027aa <mem_init+0x14cd>$/;"	l
f010287d	obj/kern/kernel.asm	/^f010287d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102882	obj/kern/kernel.asm	/^f0102882:	eb 2a                	jmp    f01028ae <mem_init+0x15d1>$/;"	l
f0102884	obj/kern/kernel.asm	/^f0102884:	8d 90 45 fc ff ff    	lea    -0x3bb(%eax),%edx$/;"	l
f010288a	obj/kern/kernel.asm	/^f010288a:	83 fa 04             	cmp    $0x4,%edx$/;"	l
f010288d	obj/kern/kernel.asm	/^f010288d:	77 1f                	ja     f01028ae <mem_init+0x15d1>$/;"	l
f010288f	obj/kern/kernel.asm	/^f010288f:	f6 04 87 01          	testb  $0x1,(%edi,%eax,4)$/;"	l
f0102893	obj/kern/kernel.asm	/^f0102893:	75 7e                	jne    f0102913 <mem_init+0x1636>$/;"	l
f0102895	obj/kern/kernel.asm	/^f0102895:	68 7d 6a 10 f0       	push   $0xf0106a7d$/;"	l
f010289a	obj/kern/kernel.asm	/^f010289a:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f010289f	obj/kern/kernel.asm	/^f010289f:	68 cc 03 00 00       	push   $0x3cc$/;"	l
f01028a4	obj/kern/kernel.asm	/^f01028a4:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f01028a9	obj/kern/kernel.asm	/^f01028a9:	e8 92 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f01028ae	obj/kern/kernel.asm	/^f01028ae:	3d bf 03 00 00       	cmp    $0x3bf,%eax$/;"	l
f01028b3	obj/kern/kernel.asm	/^f01028b3:	76 3f                	jbe    f01028f4 <mem_init+0x1617>$/;"	l
f01028b5	obj/kern/kernel.asm	/^f01028b5:	8b 14 87             	mov    (%edi,%eax,4),%edx$/;"	l
f01028b8	obj/kern/kernel.asm	/^f01028b8:	f6 c2 01             	test   $0x1,%dl$/;"	l
f01028bb	obj/kern/kernel.asm	/^f01028bb:	75 19                	jne    f01028d6 <mem_init+0x15f9>$/;"	l
f01028bd	obj/kern/kernel.asm	/^f01028bd:	68 7d 6a 10 f0       	push   $0xf0106a7d$/;"	l
f01028c2	obj/kern/kernel.asm	/^f01028c2:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f01028c7	obj/kern/kernel.asm	/^f01028c7:	68 d0 03 00 00       	push   $0x3d0$/;"	l
f01028cc	obj/kern/kernel.asm	/^f01028cc:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f01028d1	obj/kern/kernel.asm	/^f01028d1:	e8 6a d7 ff ff       	call   f0100040 <_panic>$/;"	l
f01028d6	obj/kern/kernel.asm	/^f01028d6:	f6 c2 02             	test   $0x2,%dl$/;"	l
f01028d9	obj/kern/kernel.asm	/^f01028d9:	75 38                	jne    f0102913 <mem_init+0x1636>$/;"	l
f01028db	obj/kern/kernel.asm	/^f01028db:	68 8e 6a 10 f0       	push   $0xf0106a8e$/;"	l
f01028e0	obj/kern/kernel.asm	/^f01028e0:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f01028e5	obj/kern/kernel.asm	/^f01028e5:	68 d1 03 00 00       	push   $0x3d1$/;"	l
f01028ea	obj/kern/kernel.asm	/^f01028ea:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f01028ef	obj/kern/kernel.asm	/^f01028ef:	e8 4c d7 ff ff       	call   f0100040 <_panic>$/;"	l
f01028f4	obj/kern/kernel.asm	/^f01028f4:	83 3c 87 00          	cmpl   $0x0,(%edi,%eax,4)$/;"	l
f01028f8	obj/kern/kernel.asm	/^f01028f8:	74 19                	je     f0102913 <mem_init+0x1636>$/;"	l
f01028fa	obj/kern/kernel.asm	/^f01028fa:	68 9f 6a 10 f0       	push   $0xf0106a9f$/;"	l
f01028ff	obj/kern/kernel.asm	/^f01028ff:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0102904	obj/kern/kernel.asm	/^f0102904:	68 d3 03 00 00       	push   $0x3d3$/;"	l
f0102909	obj/kern/kernel.asm	/^f0102909:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f010290e	obj/kern/kernel.asm	/^f010290e:	e8 2d d7 ff ff       	call   f0100040 <_panic>$/;"	l
f0102913	obj/kern/kernel.asm	/^f0102913:	83 c0 01             	add    $0x1,%eax$/;"	l
f0102916	obj/kern/kernel.asm	/^f0102916:	3d ff 03 00 00       	cmp    $0x3ff,%eax$/;"	l
f010291b	obj/kern/kernel.asm	/^f010291b:	0f 86 63 ff ff ff    	jbe    f0102884 <mem_init+0x15a7>$/;"	l
f0102921	obj/kern/kernel.asm	/^f0102921:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102924	obj/kern/kernel.asm	/^f0102924:	68 5c 66 10 f0       	push   $0xf010665c$/;"	l
f0102929	obj/kern/kernel.asm	/^f0102929:	e8 ba 0c 00 00       	call   f01035e8 <cprintf>$/;"	l
f010292e	obj/kern/kernel.asm	/^f010292e:	a1 0c af 22 f0       	mov    0xf022af0c,%eax$/;"	l
f0102933	obj/kern/kernel.asm	/^f0102933:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102936	obj/kern/kernel.asm	/^f0102936:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010293b	obj/kern/kernel.asm	/^f010293b:	77 15                	ja     f0102952 <mem_init+0x1675>$/;"	l
f010293d	obj/kern/kernel.asm	/^f010293d:	50                   	push   %eax$/;"	l
f010293e	obj/kern/kernel.asm	/^f010293e:	68 c8 58 10 f0       	push   $0xf01058c8$/;"	l
f0102943	obj/kern/kernel.asm	/^f0102943:	68 06 01 00 00       	push   $0x106$/;"	l
f0102948	obj/kern/kernel.asm	/^f0102948:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f010294d	obj/kern/kernel.asm	/^f010294d:	e8 ee d6 ff ff       	call   f0100040 <_panic>$/;"	l
f0102952	obj/kern/kernel.asm	/^f0102952:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102957	obj/kern/kernel.asm	/^f0102957:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010295a	obj/kern/kernel.asm	/^f010295a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010295f	obj/kern/kernel.asm	/^f010295f:	e8 e7 e1 ff ff       	call   f0100b4b <check_page_free_list>$/;"	l
f0102964	obj/kern/kernel.asm	/^f0102964:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0102967	obj/kern/kernel.asm	/^f0102967:	83 e0 f3             	and    $0xfffffff3,%eax$/;"	l
f010296a	obj/kern/kernel.asm	/^f010296a:	0d 23 00 05 80       	or     $0x80050023,%eax$/;"	l
f010296f	obj/kern/kernel.asm	/^f010296f:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0102972	obj/kern/kernel.asm	/^f0102972:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102975	obj/kern/kernel.asm	/^f0102975:	6a 00                	push   $0x0$/;"	l
f0102977	obj/kern/kernel.asm	/^f0102977:	e8 9b e5 ff ff       	call   f0100f17 <page_alloc>$/;"	l
f010297c	obj/kern/kernel.asm	/^f010297c:	89 c3                	mov    %eax,%ebx$/;"	l
f010297e	obj/kern/kernel.asm	/^f010297e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102981	obj/kern/kernel.asm	/^f0102981:	85 c0                	test   %eax,%eax$/;"	l
f0102983	obj/kern/kernel.asm	/^f0102983:	75 19                	jne    f010299e <mem_init+0x16c1>$/;"	l
f0102985	obj/kern/kernel.asm	/^f0102985:	68 89 68 10 f0       	push   $0xf0106889$/;"	l
f010298a	obj/kern/kernel.asm	/^f010298a:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f010298f	obj/kern/kernel.asm	/^f010298f:	68 ab 04 00 00       	push   $0x4ab$/;"	l
f0102994	obj/kern/kernel.asm	/^f0102994:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0102999	obj/kern/kernel.asm	/^f0102999:	e8 a2 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f010299e	obj/kern/kernel.asm	/^f010299e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01029a1	obj/kern/kernel.asm	/^f01029a1:	6a 00                	push   $0x0$/;"	l
f01029a3	obj/kern/kernel.asm	/^f01029a3:	e8 6f e5 ff ff       	call   f0100f17 <page_alloc>$/;"	l
f01029a8	obj/kern/kernel.asm	/^f01029a8:	89 c7                	mov    %eax,%edi$/;"	l
f01029aa	obj/kern/kernel.asm	/^f01029aa:	83 c4 10             	add    $0x10,%esp$/;"	l
f01029ad	obj/kern/kernel.asm	/^f01029ad:	85 c0                	test   %eax,%eax$/;"	l
f01029af	obj/kern/kernel.asm	/^f01029af:	75 19                	jne    f01029ca <mem_init+0x16ed>$/;"	l
f01029b1	obj/kern/kernel.asm	/^f01029b1:	68 9f 68 10 f0       	push   $0xf010689f$/;"	l
f01029b6	obj/kern/kernel.asm	/^f01029b6:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f01029bb	obj/kern/kernel.asm	/^f01029bb:	68 ac 04 00 00       	push   $0x4ac$/;"	l
f01029c0	obj/kern/kernel.asm	/^f01029c0:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f01029c5	obj/kern/kernel.asm	/^f01029c5:	e8 76 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f01029ca	obj/kern/kernel.asm	/^f01029ca:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01029cd	obj/kern/kernel.asm	/^f01029cd:	6a 00                	push   $0x0$/;"	l
f01029cf	obj/kern/kernel.asm	/^f01029cf:	e8 43 e5 ff ff       	call   f0100f17 <page_alloc>$/;"	l
f01029d4	obj/kern/kernel.asm	/^f01029d4:	89 c6                	mov    %eax,%esi$/;"	l
f01029d6	obj/kern/kernel.asm	/^f01029d6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01029d9	obj/kern/kernel.asm	/^f01029d9:	85 c0                	test   %eax,%eax$/;"	l
f01029db	obj/kern/kernel.asm	/^f01029db:	75 19                	jne    f01029f6 <mem_init+0x1719>$/;"	l
f01029dd	obj/kern/kernel.asm	/^f01029dd:	68 b5 68 10 f0       	push   $0xf01068b5$/;"	l
f01029e2	obj/kern/kernel.asm	/^f01029e2:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f01029e7	obj/kern/kernel.asm	/^f01029e7:	68 ad 04 00 00       	push   $0x4ad$/;"	l
f01029ec	obj/kern/kernel.asm	/^f01029ec:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f01029f1	obj/kern/kernel.asm	/^f01029f1:	e8 4a d6 ff ff       	call   f0100040 <_panic>$/;"	l
f01029f6	obj/kern/kernel.asm	/^f01029f6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01029f9	obj/kern/kernel.asm	/^f01029f9:	53                   	push   %ebx$/;"	l
f01029fa	obj/kern/kernel.asm	/^f01029fa:	e8 88 e5 ff ff       	call   f0100f87 <page_free>$/;"	l
f01029ff	obj/kern/kernel.asm	/^f01029ff:	89 f8                	mov    %edi,%eax$/;"	l
f0102a01	obj/kern/kernel.asm	/^f0102a01:	2b 05 10 af 22 f0    	sub    0xf022af10,%eax$/;"	l
f0102a07	obj/kern/kernel.asm	/^f0102a07:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102a0a	obj/kern/kernel.asm	/^f0102a0a:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102a0d	obj/kern/kernel.asm	/^f0102a0d:	89 c2                	mov    %eax,%edx$/;"	l
f0102a0f	obj/kern/kernel.asm	/^f0102a0f:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102a12	obj/kern/kernel.asm	/^f0102a12:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102a15	obj/kern/kernel.asm	/^f0102a15:	3b 15 08 af 22 f0    	cmp    0xf022af08,%edx$/;"	l
f0102a1b	obj/kern/kernel.asm	/^f0102a1b:	72 12                	jb     f0102a2f <mem_init+0x1752>$/;"	l
f0102a1d	obj/kern/kernel.asm	/^f0102a1d:	50                   	push   %eax$/;"	l
f0102a1e	obj/kern/kernel.asm	/^f0102a1e:	68 a4 58 10 f0       	push   $0xf01058a4$/;"	l
f0102a23	obj/kern/kernel.asm	/^f0102a23:	6a 58                	push   $0x58$/;"	l
f0102a25	obj/kern/kernel.asm	/^f0102a25:	68 78 67 10 f0       	push   $0xf0106778$/;"	l
f0102a2a	obj/kern/kernel.asm	/^f0102a2a:	e8 11 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a2f	obj/kern/kernel.asm	/^f0102a2f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102a32	obj/kern/kernel.asm	/^f0102a32:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102a37	obj/kern/kernel.asm	/^f0102a37:	6a 01                	push   $0x1$/;"	l
f0102a39	obj/kern/kernel.asm	/^f0102a39:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102a3e	obj/kern/kernel.asm	/^f0102a3e:	50                   	push   %eax$/;"	l
f0102a3f	obj/kern/kernel.asm	/^f0102a3f:	e8 8c 21 00 00       	call   f0104bd0 <memset>$/;"	l
f0102a44	obj/kern/kernel.asm	/^f0102a44:	89 f0                	mov    %esi,%eax$/;"	l
f0102a46	obj/kern/kernel.asm	/^f0102a46:	2b 05 10 af 22 f0    	sub    0xf022af10,%eax$/;"	l
f0102a4c	obj/kern/kernel.asm	/^f0102a4c:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102a4f	obj/kern/kernel.asm	/^f0102a4f:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102a52	obj/kern/kernel.asm	/^f0102a52:	89 c2                	mov    %eax,%edx$/;"	l
f0102a54	obj/kern/kernel.asm	/^f0102a54:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102a57	obj/kern/kernel.asm	/^f0102a57:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102a5a	obj/kern/kernel.asm	/^f0102a5a:	3b 15 08 af 22 f0    	cmp    0xf022af08,%edx$/;"	l
f0102a60	obj/kern/kernel.asm	/^f0102a60:	72 12                	jb     f0102a74 <mem_init+0x1797>$/;"	l
f0102a62	obj/kern/kernel.asm	/^f0102a62:	50                   	push   %eax$/;"	l
f0102a63	obj/kern/kernel.asm	/^f0102a63:	68 a4 58 10 f0       	push   $0xf01058a4$/;"	l
f0102a68	obj/kern/kernel.asm	/^f0102a68:	6a 58                	push   $0x58$/;"	l
f0102a6a	obj/kern/kernel.asm	/^f0102a6a:	68 78 67 10 f0       	push   $0xf0106778$/;"	l
f0102a6f	obj/kern/kernel.asm	/^f0102a6f:	e8 cc d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a74	obj/kern/kernel.asm	/^f0102a74:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102a77	obj/kern/kernel.asm	/^f0102a77:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102a7c	obj/kern/kernel.asm	/^f0102a7c:	6a 02                	push   $0x2$/;"	l
f0102a7e	obj/kern/kernel.asm	/^f0102a7e:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102a83	obj/kern/kernel.asm	/^f0102a83:	50                   	push   %eax$/;"	l
f0102a84	obj/kern/kernel.asm	/^f0102a84:	e8 47 21 00 00       	call   f0104bd0 <memset>$/;"	l
f0102a89	obj/kern/kernel.asm	/^f0102a89:	6a 02                	push   $0x2$/;"	l
f0102a8b	obj/kern/kernel.asm	/^f0102a8b:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102a90	obj/kern/kernel.asm	/^f0102a90:	57                   	push   %edi$/;"	l
f0102a91	obj/kern/kernel.asm	/^f0102a91:	ff 35 0c af 22 f0    	pushl  0xf022af0c$/;"	l
f0102a97	obj/kern/kernel.asm	/^f0102a97:	e8 6e e7 ff ff       	call   f010120a <page_insert>$/;"	l
f0102a9c	obj/kern/kernel.asm	/^f0102a9c:	83 c4 20             	add    $0x20,%esp$/;"	l
f0102a9f	obj/kern/kernel.asm	/^f0102a9f:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f0102aa4	obj/kern/kernel.asm	/^f0102aa4:	74 19                	je     f0102abf <mem_init+0x17e2>$/;"	l
f0102aa6	obj/kern/kernel.asm	/^f0102aa6:	68 86 69 10 f0       	push   $0xf0106986$/;"	l
f0102aab	obj/kern/kernel.asm	/^f0102aab:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0102ab0	obj/kern/kernel.asm	/^f0102ab0:	68 b2 04 00 00       	push   $0x4b2$/;"	l
f0102ab5	obj/kern/kernel.asm	/^f0102ab5:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0102aba	obj/kern/kernel.asm	/^f0102aba:	e8 81 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102abf	obj/kern/kernel.asm	/^f0102abf:	81 3d 00 10 00 00 01 	cmpl   $0x1010101,0x1000$/;"	l
f0102ac6	obj/kern/kernel.asm	/^f0102ac6:	01 01 01 $/;"	l
f0102ac9	obj/kern/kernel.asm	/^f0102ac9:	74 19                	je     f0102ae4 <mem_init+0x1807>$/;"	l
f0102acb	obj/kern/kernel.asm	/^f0102acb:	68 7c 66 10 f0       	push   $0xf010667c$/;"	l
f0102ad0	obj/kern/kernel.asm	/^f0102ad0:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0102ad5	obj/kern/kernel.asm	/^f0102ad5:	68 b3 04 00 00       	push   $0x4b3$/;"	l
f0102ada	obj/kern/kernel.asm	/^f0102ada:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0102adf	obj/kern/kernel.asm	/^f0102adf:	e8 5c d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ae4	obj/kern/kernel.asm	/^f0102ae4:	6a 02                	push   $0x2$/;"	l
f0102ae6	obj/kern/kernel.asm	/^f0102ae6:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102aeb	obj/kern/kernel.asm	/^f0102aeb:	56                   	push   %esi$/;"	l
f0102aec	obj/kern/kernel.asm	/^f0102aec:	ff 35 0c af 22 f0    	pushl  0xf022af0c$/;"	l
f0102af2	obj/kern/kernel.asm	/^f0102af2:	e8 13 e7 ff ff       	call   f010120a <page_insert>$/;"	l
f0102af7	obj/kern/kernel.asm	/^f0102af7:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102afa	obj/kern/kernel.asm	/^f0102afa:	81 3d 00 10 00 00 02 	cmpl   $0x2020202,0x1000$/;"	l
f0102b01	obj/kern/kernel.asm	/^f0102b01:	02 02 02 $/;"	l
f0102b04	obj/kern/kernel.asm	/^f0102b04:	74 19                	je     f0102b1f <mem_init+0x1842>$/;"	l
f0102b06	obj/kern/kernel.asm	/^f0102b06:	68 a0 66 10 f0       	push   $0xf01066a0$/;"	l
f0102b0b	obj/kern/kernel.asm	/^f0102b0b:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0102b10	obj/kern/kernel.asm	/^f0102b10:	68 b5 04 00 00       	push   $0x4b5$/;"	l
f0102b15	obj/kern/kernel.asm	/^f0102b15:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0102b1a	obj/kern/kernel.asm	/^f0102b1a:	e8 21 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b1f	obj/kern/kernel.asm	/^f0102b1f:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0102b24	obj/kern/kernel.asm	/^f0102b24:	74 19                	je     f0102b3f <mem_init+0x1862>$/;"	l
f0102b26	obj/kern/kernel.asm	/^f0102b26:	68 a8 69 10 f0       	push   $0xf01069a8$/;"	l
f0102b2b	obj/kern/kernel.asm	/^f0102b2b:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0102b30	obj/kern/kernel.asm	/^f0102b30:	68 b6 04 00 00       	push   $0x4b6$/;"	l
f0102b35	obj/kern/kernel.asm	/^f0102b35:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0102b3a	obj/kern/kernel.asm	/^f0102b3a:	e8 01 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b3f	obj/kern/kernel.asm	/^f0102b3f:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f0102b44	obj/kern/kernel.asm	/^f0102b44:	74 19                	je     f0102b5f <mem_init+0x1882>$/;"	l
f0102b46	obj/kern/kernel.asm	/^f0102b46:	68 12 6a 10 f0       	push   $0xf0106a12$/;"	l
f0102b4b	obj/kern/kernel.asm	/^f0102b4b:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0102b50	obj/kern/kernel.asm	/^f0102b50:	68 b7 04 00 00       	push   $0x4b7$/;"	l
f0102b55	obj/kern/kernel.asm	/^f0102b55:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0102b5a	obj/kern/kernel.asm	/^f0102b5a:	e8 e1 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b5f	obj/kern/kernel.asm	/^f0102b5f:	c7 05 00 10 00 00 03 	movl   $0x3030303,0x1000$/;"	l
f0102b66	obj/kern/kernel.asm	/^f0102b66:	03 03 03 $/;"	l
f0102b69	obj/kern/kernel.asm	/^f0102b69:	89 f0                	mov    %esi,%eax$/;"	l
f0102b6b	obj/kern/kernel.asm	/^f0102b6b:	2b 05 10 af 22 f0    	sub    0xf022af10,%eax$/;"	l
f0102b71	obj/kern/kernel.asm	/^f0102b71:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102b74	obj/kern/kernel.asm	/^f0102b74:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102b77	obj/kern/kernel.asm	/^f0102b77:	89 c2                	mov    %eax,%edx$/;"	l
f0102b79	obj/kern/kernel.asm	/^f0102b79:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102b7c	obj/kern/kernel.asm	/^f0102b7c:	3b 15 08 af 22 f0    	cmp    0xf022af08,%edx$/;"	l
f0102b82	obj/kern/kernel.asm	/^f0102b82:	72 12                	jb     f0102b96 <mem_init+0x18b9>$/;"	l
f0102b84	obj/kern/kernel.asm	/^f0102b84:	50                   	push   %eax$/;"	l
f0102b85	obj/kern/kernel.asm	/^f0102b85:	68 a4 58 10 f0       	push   $0xf01058a4$/;"	l
f0102b8a	obj/kern/kernel.asm	/^f0102b8a:	6a 58                	push   $0x58$/;"	l
f0102b8c	obj/kern/kernel.asm	/^f0102b8c:	68 78 67 10 f0       	push   $0xf0106778$/;"	l
f0102b91	obj/kern/kernel.asm	/^f0102b91:	e8 aa d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b96	obj/kern/kernel.asm	/^f0102b96:	81 b8 00 00 00 f0 03 	cmpl   $0x3030303,-0x10000000(%eax)$/;"	l
f0102b9d	obj/kern/kernel.asm	/^f0102b9d:	03 03 03 $/;"	l
f0102ba0	obj/kern/kernel.asm	/^f0102ba0:	74 19                	je     f0102bbb <mem_init+0x18de>$/;"	l
f0102ba2	obj/kern/kernel.asm	/^f0102ba2:	68 c4 66 10 f0       	push   $0xf01066c4$/;"	l
f0102ba7	obj/kern/kernel.asm	/^f0102ba7:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0102bac	obj/kern/kernel.asm	/^f0102bac:	68 b9 04 00 00       	push   $0x4b9$/;"	l
f0102bb1	obj/kern/kernel.asm	/^f0102bb1:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0102bb6	obj/kern/kernel.asm	/^f0102bb6:	e8 85 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102bbb	obj/kern/kernel.asm	/^f0102bbb:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102bbe	obj/kern/kernel.asm	/^f0102bbe:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102bc3	obj/kern/kernel.asm	/^f0102bc3:	ff 35 0c af 22 f0    	pushl  0xf022af0c$/;"	l
f0102bc9	obj/kern/kernel.asm	/^f0102bc9:	e8 ee e5 ff ff       	call   f01011bc <page_remove>$/;"	l
f0102bce	obj/kern/kernel.asm	/^f0102bce:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102bd1	obj/kern/kernel.asm	/^f0102bd1:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0102bd6	obj/kern/kernel.asm	/^f0102bd6:	74 19                	je     f0102bf1 <mem_init+0x1914>$/;"	l
f0102bd8	obj/kern/kernel.asm	/^f0102bd8:	68 e0 69 10 f0       	push   $0xf01069e0$/;"	l
f0102bdd	obj/kern/kernel.asm	/^f0102bdd:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0102be2	obj/kern/kernel.asm	/^f0102be2:	68 bb 04 00 00       	push   $0x4bb$/;"	l
f0102be7	obj/kern/kernel.asm	/^f0102be7:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0102bec	obj/kern/kernel.asm	/^f0102bec:	e8 4f d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102bf1	obj/kern/kernel.asm	/^f0102bf1:	8b 0d 0c af 22 f0    	mov    0xf022af0c,%ecx$/;"	l
f0102bf7	obj/kern/kernel.asm	/^f0102bf7:	8b 11                	mov    (%ecx),%edx$/;"	l
f0102bf9	obj/kern/kernel.asm	/^f0102bf9:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0102bff	obj/kern/kernel.asm	/^f0102bff:	89 d8                	mov    %ebx,%eax$/;"	l
f0102c01	obj/kern/kernel.asm	/^f0102c01:	2b 05 10 af 22 f0    	sub    0xf022af10,%eax$/;"	l
f0102c07	obj/kern/kernel.asm	/^f0102c07:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102c0a	obj/kern/kernel.asm	/^f0102c0a:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102c0d	obj/kern/kernel.asm	/^f0102c0d:	39 c2                	cmp    %eax,%edx$/;"	l
f0102c0f	obj/kern/kernel.asm	/^f0102c0f:	74 19                	je     f0102c2a <mem_init+0x194d>$/;"	l
f0102c11	obj/kern/kernel.asm	/^f0102c11:	68 4c 60 10 f0       	push   $0xf010604c$/;"	l
f0102c16	obj/kern/kernel.asm	/^f0102c16:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0102c1b	obj/kern/kernel.asm	/^f0102c1b:	68 be 04 00 00       	push   $0x4be$/;"	l
f0102c20	obj/kern/kernel.asm	/^f0102c20:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0102c25	obj/kern/kernel.asm	/^f0102c25:	e8 16 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c2a	obj/kern/kernel.asm	/^f0102c2a:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)$/;"	l
f0102c30	obj/kern/kernel.asm	/^f0102c30:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0102c35	obj/kern/kernel.asm	/^f0102c35:	74 19                	je     f0102c50 <mem_init+0x1973>$/;"	l
f0102c37	obj/kern/kernel.asm	/^f0102c37:	68 97 69 10 f0       	push   $0xf0106997$/;"	l
f0102c3c	obj/kern/kernel.asm	/^f0102c3c:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0102c41	obj/kern/kernel.asm	/^f0102c41:	68 c0 04 00 00       	push   $0x4c0$/;"	l
f0102c46	obj/kern/kernel.asm	/^f0102c46:	68 51 67 10 f0       	push   $0xf0106751$/;"	l
f0102c4b	obj/kern/kernel.asm	/^f0102c4b:	e8 f0 d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c50	obj/kern/kernel.asm	/^f0102c50:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f0102c56	obj/kern/kernel.asm	/^f0102c56:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102c59	obj/kern/kernel.asm	/^f0102c59:	53                   	push   %ebx$/;"	l
f0102c5a	obj/kern/kernel.asm	/^f0102c5a:	e8 28 e3 ff ff       	call   f0100f87 <page_free>$/;"	l
f0102c5f	obj/kern/kernel.asm	/^f0102c5f:	c7 04 24 f0 66 10 f0 	movl   $0xf01066f0,(%esp)$/;"	l
f0102c66	obj/kern/kernel.asm	/^f0102c66:	e8 7d 09 00 00       	call   f01035e8 <cprintf>$/;"	l
f0102c6b	obj/kern/kernel.asm	/^f0102c6b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102c6e	obj/kern/kernel.asm	/^f0102c6e:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0102c71	obj/kern/kernel.asm	/^f0102c71:	5b                   	pop    %ebx$/;"	l
f0102c72	obj/kern/kernel.asm	/^f0102c72:	5e                   	pop    %esi$/;"	l
f0102c73	obj/kern/kernel.asm	/^f0102c73:	5f                   	pop    %edi$/;"	l
f0102c74	obj/kern/kernel.asm	/^f0102c74:	5d                   	pop    %ebp$/;"	l
f0102c75	obj/kern/kernel.asm	/^f0102c75:	c3                   	ret    $/;"	l
f0102c76	obj/kern/kernel.asm	/^f0102c76 <user_mem_check>:$/;"	l
f0102c76	obj/kern/kernel.asm	/^f0102c76:	55                   	push   %ebp$/;"	l
f0102c77	obj/kern/kernel.asm	/^f0102c77:	89 e5                	mov    %esp,%ebp$/;"	l
f0102c79	obj/kern/kernel.asm	/^f0102c79:	57                   	push   %edi$/;"	l
f0102c7a	obj/kern/kernel.asm	/^f0102c7a:	56                   	push   %esi$/;"	l
f0102c7b	obj/kern/kernel.asm	/^f0102c7b:	53                   	push   %ebx$/;"	l
f0102c7c	obj/kern/kernel.asm	/^f0102c7c:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0102c7f	obj/kern/kernel.asm	/^f0102c7f:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0102c82	obj/kern/kernel.asm	/^f0102c82:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0102c85	obj/kern/kernel.asm	/^f0102c85:	8b 75 14             	mov    0x14(%ebp),%esi$/;"	l
f0102c88	obj/kern/kernel.asm	/^f0102c88:	89 d8                	mov    %ebx,%eax$/;"	l
f0102c8a	obj/kern/kernel.asm	/^f0102c8a:	03 45 10             	add    0x10(%ebp),%eax$/;"	l
f0102c8d	obj/kern/kernel.asm	/^f0102c8d:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f0102c92	obj/kern/kernel.asm	/^f0102c92:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0102c97	obj/kern/kernel.asm	/^f0102c97:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102c9a	obj/kern/kernel.asm	/^f0102c9a:	eb 3e                	jmp    f0102cda <user_mem_check+0x64>$/;"	l
f0102c9c	obj/kern/kernel.asm	/^f0102c9c:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102c9f	obj/kern/kernel.asm	/^f0102c9f:	6a 00                	push   $0x0$/;"	l
f0102ca1	obj/kern/kernel.asm	/^f0102ca1:	53                   	push   %ebx$/;"	l
f0102ca2	obj/kern/kernel.asm	/^f0102ca2:	ff 77 60             	pushl  0x60(%edi)$/;"	l
f0102ca5	obj/kern/kernel.asm	/^f0102ca5:	e8 3f e3 ff ff       	call   f0100fe9 <pgdir_walk>$/;"	l
f0102caa	obj/kern/kernel.asm	/^f0102caa:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102cad	obj/kern/kernel.asm	/^f0102cad:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f0102cb3	obj/kern/kernel.asm	/^f0102cb3:	77 0c                	ja     f0102cc1 <user_mem_check+0x4b>$/;"	l
f0102cb5	obj/kern/kernel.asm	/^f0102cb5:	85 c0                	test   %eax,%eax$/;"	l
f0102cb7	obj/kern/kernel.asm	/^f0102cb7:	74 08                	je     f0102cc1 <user_mem_check+0x4b>$/;"	l
f0102cb9	obj/kern/kernel.asm	/^f0102cb9:	89 f2                	mov    %esi,%edx$/;"	l
f0102cbb	obj/kern/kernel.asm	/^f0102cbb:	23 10                	and    (%eax),%edx$/;"	l
f0102cbd	obj/kern/kernel.asm	/^f0102cbd:	39 d6                	cmp    %edx,%esi$/;"	l
f0102cbf	obj/kern/kernel.asm	/^f0102cbf:	74 0d                	je     f0102cce <user_mem_check+0x58>$/;"	l
f0102cc1	obj/kern/kernel.asm	/^f0102cc1:	89 1d 3c a2 22 f0    	mov    %ebx,0xf022a23c$/;"	l
f0102cc7	obj/kern/kernel.asm	/^f0102cc7:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f0102ccc	obj/kern/kernel.asm	/^f0102ccc:	eb 16                	jmp    f0102ce4 <user_mem_check+0x6e>$/;"	l
f0102cce	obj/kern/kernel.asm	/^f0102cce:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102cd4	obj/kern/kernel.asm	/^f0102cd4:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0102cda	obj/kern/kernel.asm	/^f0102cda:	3b 5d e4             	cmp    -0x1c(%ebp),%ebx$/;"	l
f0102cdd	obj/kern/kernel.asm	/^f0102cdd:	72 bd                	jb     f0102c9c <user_mem_check+0x26>$/;"	l
f0102cdf	obj/kern/kernel.asm	/^f0102cdf:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102ce4	obj/kern/kernel.asm	/^f0102ce4:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0102ce7	obj/kern/kernel.asm	/^f0102ce7:	5b                   	pop    %ebx$/;"	l
f0102ce8	obj/kern/kernel.asm	/^f0102ce8:	5e                   	pop    %esi$/;"	l
f0102ce9	obj/kern/kernel.asm	/^f0102ce9:	5f                   	pop    %edi$/;"	l
f0102cea	obj/kern/kernel.asm	/^f0102cea:	5d                   	pop    %ebp$/;"	l
f0102ceb	obj/kern/kernel.asm	/^f0102ceb:	c3                   	ret    $/;"	l
f0102cec	obj/kern/kernel.asm	/^f0102cec <user_mem_assert>:$/;"	l
f0102cec	obj/kern/kernel.asm	/^f0102cec:	55                   	push   %ebp$/;"	l
f0102ced	obj/kern/kernel.asm	/^f0102ced:	89 e5                	mov    %esp,%ebp$/;"	l
f0102cef	obj/kern/kernel.asm	/^f0102cef:	53                   	push   %ebx$/;"	l
f0102cf0	obj/kern/kernel.asm	/^f0102cf0:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102cf3	obj/kern/kernel.asm	/^f0102cf3:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0102cf6	obj/kern/kernel.asm	/^f0102cf6:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0102cf9	obj/kern/kernel.asm	/^f0102cf9:	83 c8 04             	or     $0x4,%eax$/;"	l
f0102cfc	obj/kern/kernel.asm	/^f0102cfc:	50                   	push   %eax$/;"	l
f0102cfd	obj/kern/kernel.asm	/^f0102cfd:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0102d00	obj/kern/kernel.asm	/^f0102d00:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0102d03	obj/kern/kernel.asm	/^f0102d03:	53                   	push   %ebx$/;"	l
f0102d04	obj/kern/kernel.asm	/^f0102d04:	e8 6d ff ff ff       	call   f0102c76 <user_mem_check>$/;"	l
f0102d09	obj/kern/kernel.asm	/^f0102d09:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102d0c	obj/kern/kernel.asm	/^f0102d0c:	85 c0                	test   %eax,%eax$/;"	l
f0102d0e	obj/kern/kernel.asm	/^f0102d0e:	79 21                	jns    f0102d31 <user_mem_assert+0x45>$/;"	l
f0102d10	obj/kern/kernel.asm	/^f0102d10:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102d13	obj/kern/kernel.asm	/^f0102d13:	ff 35 3c a2 22 f0    	pushl  0xf022a23c$/;"	l
f0102d19	obj/kern/kernel.asm	/^f0102d19:	ff 73 48             	pushl  0x48(%ebx)$/;"	l
f0102d1c	obj/kern/kernel.asm	/^f0102d1c:	68 1c 67 10 f0       	push   $0xf010671c$/;"	l
f0102d21	obj/kern/kernel.asm	/^f0102d21:	e8 c2 08 00 00       	call   f01035e8 <cprintf>$/;"	l
f0102d26	obj/kern/kernel.asm	/^f0102d26:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0102d29	obj/kern/kernel.asm	/^f0102d29:	e8 0f 06 00 00       	call   f010333d <env_destroy>$/;"	l
f0102d2e	obj/kern/kernel.asm	/^f0102d2e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102d31	obj/kern/kernel.asm	/^f0102d31:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0102d34	obj/kern/kernel.asm	/^f0102d34:	c9                   	leave  $/;"	l
f0102d35	obj/kern/kernel.asm	/^f0102d35:	c3                   	ret    $/;"	l
f0102d36	obj/kern/kernel.asm	/^f0102d36 <region_alloc>:$/;"	l
f0102d36	obj/kern/kernel.asm	/^f0102d36:	55                   	push   %ebp$/;"	l
f0102d37	obj/kern/kernel.asm	/^f0102d37:	89 e5                	mov    %esp,%ebp$/;"	l
f0102d39	obj/kern/kernel.asm	/^f0102d39:	57                   	push   %edi$/;"	l
f0102d3a	obj/kern/kernel.asm	/^f0102d3a:	56                   	push   %esi$/;"	l
f0102d3b	obj/kern/kernel.asm	/^f0102d3b:	53                   	push   %ebx$/;"	l
f0102d3c	obj/kern/kernel.asm	/^f0102d3c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102d3f	obj/kern/kernel.asm	/^f0102d3f:	89 c7                	mov    %eax,%edi$/;"	l
f0102d41	obj/kern/kernel.asm	/^f0102d41:	89 d3                	mov    %edx,%ebx$/;"	l
f0102d43	obj/kern/kernel.asm	/^f0102d43:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0102d49	obj/kern/kernel.asm	/^f0102d49:	8d b4 0a ff 0f 00 00 	lea    0xfff(%edx,%ecx,1),%esi$/;"	l
f0102d50	obj/kern/kernel.asm	/^f0102d50:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f0102d56	obj/kern/kernel.asm	/^f0102d56:	eb 3d                	jmp    f0102d95 <region_alloc+0x5f>$/;"	l
f0102d58	obj/kern/kernel.asm	/^f0102d58:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102d5b	obj/kern/kernel.asm	/^f0102d5b:	6a 00                	push   $0x0$/;"	l
f0102d5d	obj/kern/kernel.asm	/^f0102d5d:	e8 b5 e1 ff ff       	call   f0100f17 <page_alloc>$/;"	l
f0102d62	obj/kern/kernel.asm	/^f0102d62:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102d65	obj/kern/kernel.asm	/^f0102d65:	85 c0                	test   %eax,%eax$/;"	l
f0102d67	obj/kern/kernel.asm	/^f0102d67:	75 17                	jne    f0102d80 <region_alloc+0x4a>$/;"	l
f0102d69	obj/kern/kernel.asm	/^f0102d69:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102d6c	obj/kern/kernel.asm	/^f0102d6c:	68 b0 6a 10 f0       	push   $0xf0106ab0$/;"	l
f0102d71	obj/kern/kernel.asm	/^f0102d71:	68 4c 01 00 00       	push   $0x14c$/;"	l
f0102d76	obj/kern/kernel.asm	/^f0102d76:	68 ff 6a 10 f0       	push   $0xf0106aff$/;"	l
f0102d7b	obj/kern/kernel.asm	/^f0102d7b:	e8 c0 d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102d80	obj/kern/kernel.asm	/^f0102d80:	6a 06                	push   $0x6$/;"	l
f0102d82	obj/kern/kernel.asm	/^f0102d82:	53                   	push   %ebx$/;"	l
f0102d83	obj/kern/kernel.asm	/^f0102d83:	50                   	push   %eax$/;"	l
f0102d84	obj/kern/kernel.asm	/^f0102d84:	ff 77 60             	pushl  0x60(%edi)$/;"	l
f0102d87	obj/kern/kernel.asm	/^f0102d87:	e8 7e e4 ff ff       	call   f010120a <page_insert>$/;"	l
f0102d8c	obj/kern/kernel.asm	/^f0102d8c:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102d92	obj/kern/kernel.asm	/^f0102d92:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102d95	obj/kern/kernel.asm	/^f0102d95:	39 f3                	cmp    %esi,%ebx$/;"	l
f0102d97	obj/kern/kernel.asm	/^f0102d97:	72 bf                	jb     f0102d58 <region_alloc+0x22>$/;"	l
f0102d99	obj/kern/kernel.asm	/^f0102d99:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0102d9c	obj/kern/kernel.asm	/^f0102d9c:	5b                   	pop    %ebx$/;"	l
f0102d9d	obj/kern/kernel.asm	/^f0102d9d:	5e                   	pop    %esi$/;"	l
f0102d9e	obj/kern/kernel.asm	/^f0102d9e:	5f                   	pop    %edi$/;"	l
f0102d9f	obj/kern/kernel.asm	/^f0102d9f:	5d                   	pop    %ebp$/;"	l
f0102da0	obj/kern/kernel.asm	/^f0102da0:	c3                   	ret    $/;"	l
f0102da1	obj/kern/kernel.asm	/^f0102da1 <envid2env>:$/;"	l
f0102da1	obj/kern/kernel.asm	/^f0102da1:	55                   	push   %ebp$/;"	l
f0102da2	obj/kern/kernel.asm	/^f0102da2:	89 e5                	mov    %esp,%ebp$/;"	l
f0102da4	obj/kern/kernel.asm	/^f0102da4:	56                   	push   %esi$/;"	l
f0102da5	obj/kern/kernel.asm	/^f0102da5:	53                   	push   %ebx$/;"	l
f0102da6	obj/kern/kernel.asm	/^f0102da6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0102da9	obj/kern/kernel.asm	/^f0102da9:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f0102dac	obj/kern/kernel.asm	/^f0102dac:	85 c0                	test   %eax,%eax$/;"	l
f0102dae	obj/kern/kernel.asm	/^f0102dae:	75 1a                	jne    f0102dca <envid2env+0x29>$/;"	l
f0102db0	obj/kern/kernel.asm	/^f0102db0:	e8 3d 24 00 00       	call   f01051f2 <cpunum>$/;"	l
f0102db5	obj/kern/kernel.asm	/^f0102db5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0102db8	obj/kern/kernel.asm	/^f0102db8:	8b 80 28 b0 22 f0    	mov    -0xfdd4fd8(%eax),%eax$/;"	l
f0102dbe	obj/kern/kernel.asm	/^f0102dbe:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0102dc1	obj/kern/kernel.asm	/^f0102dc1:	89 01                	mov    %eax,(%ecx)$/;"	l
f0102dc3	obj/kern/kernel.asm	/^f0102dc3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102dc8	obj/kern/kernel.asm	/^f0102dc8:	eb 70                	jmp    f0102e3a <envid2env+0x99>$/;"	l
f0102dca	obj/kern/kernel.asm	/^f0102dca:	89 c3                	mov    %eax,%ebx$/;"	l
f0102dcc	obj/kern/kernel.asm	/^f0102dcc:	81 e3 ff 03 00 00    	and    $0x3ff,%ebx$/;"	l
f0102dd2	obj/kern/kernel.asm	/^f0102dd2:	6b db 7c             	imul   $0x7c,%ebx,%ebx$/;"	l
f0102dd5	obj/kern/kernel.asm	/^f0102dd5:	03 1d 44 a2 22 f0    	add    0xf022a244,%ebx$/;"	l
f0102ddb	obj/kern/kernel.asm	/^f0102ddb:	83 7b 54 00          	cmpl   $0x0,0x54(%ebx)$/;"	l
f0102ddf	obj/kern/kernel.asm	/^f0102ddf:	74 05                	je     f0102de6 <envid2env+0x45>$/;"	l
f0102de1	obj/kern/kernel.asm	/^f0102de1:	3b 43 48             	cmp    0x48(%ebx),%eax$/;"	l
f0102de4	obj/kern/kernel.asm	/^f0102de4:	74 10                	je     f0102df6 <envid2env+0x55>$/;"	l
f0102de6	obj/kern/kernel.asm	/^f0102de6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0102de9	obj/kern/kernel.asm	/^f0102de9:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102def	obj/kern/kernel.asm	/^f0102def:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0102df4	obj/kern/kernel.asm	/^f0102df4:	eb 44                	jmp    f0102e3a <envid2env+0x99>$/;"	l
f0102df6	obj/kern/kernel.asm	/^f0102df6:	84 d2                	test   %dl,%dl$/;"	l
f0102df8	obj/kern/kernel.asm	/^f0102df8:	74 36                	je     f0102e30 <envid2env+0x8f>$/;"	l
f0102dfa	obj/kern/kernel.asm	/^f0102dfa:	e8 f3 23 00 00       	call   f01051f2 <cpunum>$/;"	l
f0102dff	obj/kern/kernel.asm	/^f0102dff:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0102e02	obj/kern/kernel.asm	/^f0102e02:	3b 98 28 b0 22 f0    	cmp    -0xfdd4fd8(%eax),%ebx$/;"	l
f0102e08	obj/kern/kernel.asm	/^f0102e08:	74 26                	je     f0102e30 <envid2env+0x8f>$/;"	l
f0102e0a	obj/kern/kernel.asm	/^f0102e0a:	8b 73 4c             	mov    0x4c(%ebx),%esi$/;"	l
f0102e0d	obj/kern/kernel.asm	/^f0102e0d:	e8 e0 23 00 00       	call   f01051f2 <cpunum>$/;"	l
f0102e12	obj/kern/kernel.asm	/^f0102e12:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0102e15	obj/kern/kernel.asm	/^f0102e15:	8b 80 28 b0 22 f0    	mov    -0xfdd4fd8(%eax),%eax$/;"	l
f0102e1b	obj/kern/kernel.asm	/^f0102e1b:	3b 70 48             	cmp    0x48(%eax),%esi$/;"	l
f0102e1e	obj/kern/kernel.asm	/^f0102e1e:	74 10                	je     f0102e30 <envid2env+0x8f>$/;"	l
f0102e20	obj/kern/kernel.asm	/^f0102e20:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0102e23	obj/kern/kernel.asm	/^f0102e23:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102e29	obj/kern/kernel.asm	/^f0102e29:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0102e2e	obj/kern/kernel.asm	/^f0102e2e:	eb 0a                	jmp    f0102e3a <envid2env+0x99>$/;"	l
f0102e30	obj/kern/kernel.asm	/^f0102e30:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0102e33	obj/kern/kernel.asm	/^f0102e33:	89 18                	mov    %ebx,(%eax)$/;"	l
f0102e35	obj/kern/kernel.asm	/^f0102e35:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102e3a	obj/kern/kernel.asm	/^f0102e3a:	5b                   	pop    %ebx$/;"	l
f0102e3b	obj/kern/kernel.asm	/^f0102e3b:	5e                   	pop    %esi$/;"	l
f0102e3c	obj/kern/kernel.asm	/^f0102e3c:	5d                   	pop    %ebp$/;"	l
f0102e3d	obj/kern/kernel.asm	/^f0102e3d:	c3                   	ret    $/;"	l
f0102e3e	obj/kern/kernel.asm	/^f0102e3e <env_init_percpu>:$/;"	l
f0102e3e	obj/kern/kernel.asm	/^f0102e3e:	55                   	push   %ebp$/;"	l
f0102e3f	obj/kern/kernel.asm	/^f0102e3f:	89 e5                	mov    %esp,%ebp$/;"	l
f0102e41	obj/kern/kernel.asm	/^f0102e41:	b8 20 f3 11 f0       	mov    $0xf011f320,%eax$/;"	l
f0102e46	obj/kern/kernel.asm	/^f0102e46:	0f 01 10             	lgdtl  (%eax)$/;"	l
f0102e49	obj/kern/kernel.asm	/^f0102e49:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
f0102e4e	obj/kern/kernel.asm	/^f0102e4e:	8e e8                	mov    %eax,%gs$/;"	l
f0102e50	obj/kern/kernel.asm	/^f0102e50:	8e e0                	mov    %eax,%fs$/;"	l
f0102e52	obj/kern/kernel.asm	/^f0102e52:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0102e57	obj/kern/kernel.asm	/^f0102e57:	8e c0                	mov    %eax,%es$/;"	l
f0102e59	obj/kern/kernel.asm	/^f0102e59:	8e d8                	mov    %eax,%ds$/;"	l
f0102e5b	obj/kern/kernel.asm	/^f0102e5b:	8e d0                	mov    %eax,%ss$/;"	l
f0102e5d	obj/kern/kernel.asm	/^f0102e5d:	ea 64 2e 10 f0 08 00 	ljmp   $0x8,$0xf0102e64$/;"	l
f0102e64	obj/kern/kernel.asm	/^f0102e64:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102e69	obj/kern/kernel.asm	/^f0102e69:	0f 00 d0             	lldt   %ax$/;"	l
f0102e6c	obj/kern/kernel.asm	/^f0102e6c:	5d                   	pop    %ebp$/;"	l
f0102e6d	obj/kern/kernel.asm	/^f0102e6d:	c3                   	ret    $/;"	l
f0102e6e	obj/kern/kernel.asm	/^f0102e6e <env_init>:$/;"	l
f0102e6e	obj/kern/kernel.asm	/^f0102e6e:	55                   	push   %ebp$/;"	l
f0102e6f	obj/kern/kernel.asm	/^f0102e6f:	89 e5                	mov    %esp,%ebp$/;"	l
f0102e71	obj/kern/kernel.asm	/^f0102e71:	56                   	push   %esi$/;"	l
f0102e72	obj/kern/kernel.asm	/^f0102e72:	53                   	push   %ebx$/;"	l
f0102e73	obj/kern/kernel.asm	/^f0102e73:	8b 35 44 a2 22 f0    	mov    0xf022a244,%esi$/;"	l
f0102e79	obj/kern/kernel.asm	/^f0102e79:	8b 15 48 a2 22 f0    	mov    0xf022a248,%edx$/;"	l
f0102e7f	obj/kern/kernel.asm	/^f0102e7f:	8d 86 84 ef 01 00    	lea    0x1ef84(%esi),%eax$/;"	l
f0102e85	obj/kern/kernel.asm	/^f0102e85:	8d 5e 84             	lea    -0x7c(%esi),%ebx$/;"	l
f0102e88	obj/kern/kernel.asm	/^f0102e88:	89 c1                	mov    %eax,%ecx$/;"	l
f0102e8a	obj/kern/kernel.asm	/^f0102e8a:	89 50 44             	mov    %edx,0x44(%eax)$/;"	l
f0102e8d	obj/kern/kernel.asm	/^f0102e8d:	83 e8 7c             	sub    $0x7c,%eax$/;"	l
f0102e90	obj/kern/kernel.asm	/^f0102e90:	89 ca                	mov    %ecx,%edx$/;"	l
f0102e92	obj/kern/kernel.asm	/^f0102e92:	39 d8                	cmp    %ebx,%eax$/;"	l
f0102e94	obj/kern/kernel.asm	/^f0102e94:	75 f2                	jne    f0102e88 <env_init+0x1a>$/;"	l
f0102e96	obj/kern/kernel.asm	/^f0102e96:	89 35 48 a2 22 f0    	mov    %esi,0xf022a248$/;"	l
f0102e9c	obj/kern/kernel.asm	/^f0102e9c:	e8 9d ff ff ff       	call   f0102e3e <env_init_percpu>$/;"	l
f0102ea1	obj/kern/kernel.asm	/^f0102ea1:	5b                   	pop    %ebx$/;"	l
f0102ea2	obj/kern/kernel.asm	/^f0102ea2:	5e                   	pop    %esi$/;"	l
f0102ea3	obj/kern/kernel.asm	/^f0102ea3:	5d                   	pop    %ebp$/;"	l
f0102ea4	obj/kern/kernel.asm	/^f0102ea4:	c3                   	ret    $/;"	l
f0102ea5	obj/kern/kernel.asm	/^f0102ea5 <env_alloc>:$/;"	l
f0102ea5	obj/kern/kernel.asm	/^f0102ea5:	55                   	push   %ebp$/;"	l
f0102ea6	obj/kern/kernel.asm	/^f0102ea6:	89 e5                	mov    %esp,%ebp$/;"	l
f0102ea8	obj/kern/kernel.asm	/^f0102ea8:	53                   	push   %ebx$/;"	l
f0102ea9	obj/kern/kernel.asm	/^f0102ea9:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102eac	obj/kern/kernel.asm	/^f0102eac:	8b 1d 48 a2 22 f0    	mov    0xf022a248,%ebx$/;"	l
f0102eb2	obj/kern/kernel.asm	/^f0102eb2:	85 db                	test   %ebx,%ebx$/;"	l
f0102eb4	obj/kern/kernel.asm	/^f0102eb4:	0f 84 69 01 00 00    	je     f0103023 <env_alloc+0x17e>$/;"	l
f0102eba	obj/kern/kernel.asm	/^f0102eba:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102ebd	obj/kern/kernel.asm	/^f0102ebd:	6a 01                	push   $0x1$/;"	l
f0102ebf	obj/kern/kernel.asm	/^f0102ebf:	e8 53 e0 ff ff       	call   f0100f17 <page_alloc>$/;"	l
f0102ec4	obj/kern/kernel.asm	/^f0102ec4:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102ec7	obj/kern/kernel.asm	/^f0102ec7:	85 c0                	test   %eax,%eax$/;"	l
f0102ec9	obj/kern/kernel.asm	/^f0102ec9:	0f 84 5b 01 00 00    	je     f010302a <env_alloc+0x185>$/;"	l
f0102ecf	obj/kern/kernel.asm	/^f0102ecf:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f0102ed4	obj/kern/kernel.asm	/^f0102ed4:	2b 05 10 af 22 f0    	sub    0xf022af10,%eax$/;"	l
f0102eda	obj/kern/kernel.asm	/^f0102eda:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102edd	obj/kern/kernel.asm	/^f0102edd:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102ee0	obj/kern/kernel.asm	/^f0102ee0:	89 c2                	mov    %eax,%edx$/;"	l
f0102ee2	obj/kern/kernel.asm	/^f0102ee2:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102ee5	obj/kern/kernel.asm	/^f0102ee5:	3b 15 08 af 22 f0    	cmp    0xf022af08,%edx$/;"	l
f0102eeb	obj/kern/kernel.asm	/^f0102eeb:	72 12                	jb     f0102eff <env_alloc+0x5a>$/;"	l
f0102eed	obj/kern/kernel.asm	/^f0102eed:	50                   	push   %eax$/;"	l
f0102eee	obj/kern/kernel.asm	/^f0102eee:	68 a4 58 10 f0       	push   $0xf01058a4$/;"	l
f0102ef3	obj/kern/kernel.asm	/^f0102ef3:	6a 58                	push   $0x58$/;"	l
f0102ef5	obj/kern/kernel.asm	/^f0102ef5:	68 78 67 10 f0       	push   $0xf0106778$/;"	l
f0102efa	obj/kern/kernel.asm	/^f0102efa:	e8 41 d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102eff	obj/kern/kernel.asm	/^f0102eff:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102f04	obj/kern/kernel.asm	/^f0102f04:	89 43 60             	mov    %eax,0x60(%ebx)$/;"	l
f0102f07	obj/kern/kernel.asm	/^f0102f07:	b8 ec 0e 00 00       	mov    $0xeec,%eax$/;"	l
f0102f0c	obj/kern/kernel.asm	/^f0102f0c:	8b 15 0c af 22 f0    	mov    0xf022af0c,%edx$/;"	l
f0102f12	obj/kern/kernel.asm	/^f0102f12:	8b 0c 02             	mov    (%edx,%eax,1),%ecx$/;"	l
f0102f15	obj/kern/kernel.asm	/^f0102f15:	8b 53 60             	mov    0x60(%ebx),%edx$/;"	l
f0102f18	obj/kern/kernel.asm	/^f0102f18:	89 0c 02             	mov    %ecx,(%edx,%eax,1)$/;"	l
f0102f1b	obj/kern/kernel.asm	/^f0102f1b:	83 c0 04             	add    $0x4,%eax$/;"	l
f0102f1e	obj/kern/kernel.asm	/^f0102f1e:	3d 00 10 00 00       	cmp    $0x1000,%eax$/;"	l
f0102f23	obj/kern/kernel.asm	/^f0102f23:	75 e7                	jne    f0102f0c <env_alloc+0x67>$/;"	l
f0102f25	obj/kern/kernel.asm	/^f0102f25:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f0102f28	obj/kern/kernel.asm	/^f0102f28:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102f2d	obj/kern/kernel.asm	/^f0102f2d:	77 15                	ja     f0102f44 <env_alloc+0x9f>$/;"	l
f0102f2f	obj/kern/kernel.asm	/^f0102f2f:	50                   	push   %eax$/;"	l
f0102f30	obj/kern/kernel.asm	/^f0102f30:	68 c8 58 10 f0       	push   $0xf01058c8$/;"	l
f0102f35	obj/kern/kernel.asm	/^f0102f35:	68 de 00 00 00       	push   $0xde$/;"	l
f0102f3a	obj/kern/kernel.asm	/^f0102f3a:	68 ff 6a 10 f0       	push   $0xf0106aff$/;"	l
f0102f3f	obj/kern/kernel.asm	/^f0102f3f:	e8 fc d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102f44	obj/kern/kernel.asm	/^f0102f44:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f0102f4a	obj/kern/kernel.asm	/^f0102f4a:	83 ca 05             	or     $0x5,%edx$/;"	l
f0102f4d	obj/kern/kernel.asm	/^f0102f4d:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f0102f53	obj/kern/kernel.asm	/^f0102f53:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f0102f56	obj/kern/kernel.asm	/^f0102f56:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
f0102f5b	obj/kern/kernel.asm	/^f0102f5b:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f0102f60	obj/kern/kernel.asm	/^f0102f60:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102f65	obj/kern/kernel.asm	/^f0102f65:	0f 4e c2             	cmovle %edx,%eax$/;"	l
f0102f68	obj/kern/kernel.asm	/^f0102f68:	89 da                	mov    %ebx,%edx$/;"	l
f0102f6a	obj/kern/kernel.asm	/^f0102f6a:	2b 15 44 a2 22 f0    	sub    0xf022a244,%edx$/;"	l
f0102f70	obj/kern/kernel.asm	/^f0102f70:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f0102f73	obj/kern/kernel.asm	/^f0102f73:	69 d2 df 7b ef bd    	imul   $0xbdef7bdf,%edx,%edx$/;"	l
f0102f79	obj/kern/kernel.asm	/^f0102f79:	09 d0                	or     %edx,%eax$/;"	l
f0102f7b	obj/kern/kernel.asm	/^f0102f7b:	89 43 48             	mov    %eax,0x48(%ebx)$/;"	l
f0102f7e	obj/kern/kernel.asm	/^f0102f7e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0102f81	obj/kern/kernel.asm	/^f0102f81:	89 43 4c             	mov    %eax,0x4c(%ebx)$/;"	l
f0102f84	obj/kern/kernel.asm	/^f0102f84:	c7 43 50 00 00 00 00 	movl   $0x0,0x50(%ebx)$/;"	l
f0102f8b	obj/kern/kernel.asm	/^f0102f8b:	c7 43 54 02 00 00 00 	movl   $0x2,0x54(%ebx)$/;"	l
f0102f92	obj/kern/kernel.asm	/^f0102f92:	c7 43 58 00 00 00 00 	movl   $0x0,0x58(%ebx)$/;"	l
f0102f99	obj/kern/kernel.asm	/^f0102f99:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102f9c	obj/kern/kernel.asm	/^f0102f9c:	6a 44                	push   $0x44$/;"	l
f0102f9e	obj/kern/kernel.asm	/^f0102f9e:	6a 00                	push   $0x0$/;"	l
f0102fa0	obj/kern/kernel.asm	/^f0102fa0:	53                   	push   %ebx$/;"	l
f0102fa1	obj/kern/kernel.asm	/^f0102fa1:	e8 2a 1c 00 00       	call   f0104bd0 <memset>$/;"	l
f0102fa6	obj/kern/kernel.asm	/^f0102fa6:	66 c7 43 24 23 00    	movw   $0x23,0x24(%ebx)$/;"	l
f0102fac	obj/kern/kernel.asm	/^f0102fac:	66 c7 43 20 23 00    	movw   $0x23,0x20(%ebx)$/;"	l
f0102fb2	obj/kern/kernel.asm	/^f0102fb2:	66 c7 43 40 23 00    	movw   $0x23,0x40(%ebx)$/;"	l
f0102fb8	obj/kern/kernel.asm	/^f0102fb8:	c7 43 3c 00 e0 bf ee 	movl   $0xeebfe000,0x3c(%ebx)$/;"	l
f0102fbf	obj/kern/kernel.asm	/^f0102fbf:	66 c7 43 34 1b 00    	movw   $0x1b,0x34(%ebx)$/;"	l
f0102fc5	obj/kern/kernel.asm	/^f0102fc5:	c7 43 64 00 00 00 00 	movl   $0x0,0x64(%ebx)$/;"	l
f0102fcc	obj/kern/kernel.asm	/^f0102fcc:	c6 43 68 00          	movb   $0x0,0x68(%ebx)$/;"	l
f0102fd0	obj/kern/kernel.asm	/^f0102fd0:	8b 43 44             	mov    0x44(%ebx),%eax$/;"	l
f0102fd3	obj/kern/kernel.asm	/^f0102fd3:	a3 48 a2 22 f0       	mov    %eax,0xf022a248$/;"	l
f0102fd8	obj/kern/kernel.asm	/^f0102fd8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0102fdb	obj/kern/kernel.asm	/^f0102fdb:	89 18                	mov    %ebx,(%eax)$/;"	l
f0102fdd	obj/kern/kernel.asm	/^f0102fdd:	8b 5b 48             	mov    0x48(%ebx),%ebx$/;"	l
f0102fe0	obj/kern/kernel.asm	/^f0102fe0:	e8 0d 22 00 00       	call   f01051f2 <cpunum>$/;"	l
f0102fe5	obj/kern/kernel.asm	/^f0102fe5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0102fe8	obj/kern/kernel.asm	/^f0102fe8:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102feb	obj/kern/kernel.asm	/^f0102feb:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102ff0	obj/kern/kernel.asm	/^f0102ff0:	83 b8 28 b0 22 f0 00 	cmpl   $0x0,-0xfdd4fd8(%eax)$/;"	l
f0102ff7	obj/kern/kernel.asm	/^f0102ff7:	74 11                	je     f010300a <env_alloc+0x165>$/;"	l
f0102ff9	obj/kern/kernel.asm	/^f0102ff9:	e8 f4 21 00 00       	call   f01051f2 <cpunum>$/;"	l
f0102ffe	obj/kern/kernel.asm	/^f0102ffe:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103001	obj/kern/kernel.asm	/^f0103001:	8b 80 28 b0 22 f0    	mov    -0xfdd4fd8(%eax),%eax$/;"	l
f0103007	obj/kern/kernel.asm	/^f0103007:	8b 50 48             	mov    0x48(%eax),%edx$/;"	l
f010300a	obj/kern/kernel.asm	/^f010300a:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010300d	obj/kern/kernel.asm	/^f010300d:	53                   	push   %ebx$/;"	l
f010300e	obj/kern/kernel.asm	/^f010300e:	52                   	push   %edx$/;"	l
f010300f	obj/kern/kernel.asm	/^f010300f:	68 0a 6b 10 f0       	push   $0xf0106b0a$/;"	l
f0103014	obj/kern/kernel.asm	/^f0103014:	e8 cf 05 00 00       	call   f01035e8 <cprintf>$/;"	l
f0103019	obj/kern/kernel.asm	/^f0103019:	83 c4 10             	add    $0x10,%esp$/;"	l
f010301c	obj/kern/kernel.asm	/^f010301c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103021	obj/kern/kernel.asm	/^f0103021:	eb 0c                	jmp    f010302f <env_alloc+0x18a>$/;"	l
f0103023	obj/kern/kernel.asm	/^f0103023:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax$/;"	l
f0103028	obj/kern/kernel.asm	/^f0103028:	eb 05                	jmp    f010302f <env_alloc+0x18a>$/;"	l
f010302a	obj/kern/kernel.asm	/^f010302a:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f010302f	obj/kern/kernel.asm	/^f010302f:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0103032	obj/kern/kernel.asm	/^f0103032:	c9                   	leave  $/;"	l
f0103033	obj/kern/kernel.asm	/^f0103033:	c3                   	ret    $/;"	l
f0103034	obj/kern/kernel.asm	/^f0103034 <env_create>:$/;"	l
f0103034	obj/kern/kernel.asm	/^f0103034:	55                   	push   %ebp$/;"	l
f0103035	obj/kern/kernel.asm	/^f0103035:	89 e5                	mov    %esp,%ebp$/;"	l
f0103037	obj/kern/kernel.asm	/^f0103037:	57                   	push   %edi$/;"	l
f0103038	obj/kern/kernel.asm	/^f0103038:	56                   	push   %esi$/;"	l
f0103039	obj/kern/kernel.asm	/^f0103039:	53                   	push   %ebx$/;"	l
f010303a	obj/kern/kernel.asm	/^f010303a:	83 ec 34             	sub    $0x34,%esp$/;"	l
f010303d	obj/kern/kernel.asm	/^f010303d:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0103040	obj/kern/kernel.asm	/^f0103040:	6a 00                	push   $0x0$/;"	l
f0103042	obj/kern/kernel.asm	/^f0103042:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0103045	obj/kern/kernel.asm	/^f0103045:	50                   	push   %eax$/;"	l
f0103046	obj/kern/kernel.asm	/^f0103046:	e8 5a fe ff ff       	call   f0102ea5 <env_alloc>$/;"	l
f010304b	obj/kern/kernel.asm	/^f010304b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010304e	obj/kern/kernel.asm	/^f010304e:	85 c0                	test   %eax,%eax$/;"	l
f0103050	obj/kern/kernel.asm	/^f0103050:	74 15                	je     f0103067 <env_create+0x33>$/;"	l
f0103052	obj/kern/kernel.asm	/^f0103052:	50                   	push   %eax$/;"	l
f0103053	obj/kern/kernel.asm	/^f0103053:	68 1f 6b 10 f0       	push   $0xf0106b1f$/;"	l
f0103058	obj/kern/kernel.asm	/^f0103058:	68 d2 01 00 00       	push   $0x1d2$/;"	l
f010305d	obj/kern/kernel.asm	/^f010305d:	68 ff 6a 10 f0       	push   $0xf0106aff$/;"	l
f0103062	obj/kern/kernel.asm	/^f0103062:	e8 d9 cf ff ff       	call   f0100040 <_panic>$/;"	l
f0103067	obj/kern/kernel.asm	/^f0103067:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010306a	obj/kern/kernel.asm	/^f010306a:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010306d	obj/kern/kernel.asm	/^f010306d:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%edi)$/;"	l
f0103073	obj/kern/kernel.asm	/^f0103073:	74 17                	je     f010308c <env_create+0x58>$/;"	l
f0103075	obj/kern/kernel.asm	/^f0103075:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103078	obj/kern/kernel.asm	/^f0103078:	68 dc 6a 10 f0       	push   $0xf0106adc$/;"	l
f010307d	obj/kern/kernel.asm	/^f010307d:	68 8f 01 00 00       	push   $0x18f$/;"	l
f0103082	obj/kern/kernel.asm	/^f0103082:	68 ff 6a 10 f0       	push   $0xf0106aff$/;"	l
f0103087	obj/kern/kernel.asm	/^f0103087:	e8 b4 cf ff ff       	call   f0100040 <_panic>$/;"	l
f010308c	obj/kern/kernel.asm	/^f010308c:	89 fb                	mov    %edi,%ebx$/;"	l
f010308e	obj/kern/kernel.asm	/^f010308e:	03 5f 1c             	add    0x1c(%edi),%ebx$/;"	l
f0103091	obj/kern/kernel.asm	/^f0103091:	0f b7 77 2c          	movzwl 0x2c(%edi),%esi$/;"	l
f0103095	obj/kern/kernel.asm	/^f0103095:	c1 e6 05             	shl    $0x5,%esi$/;"	l
f0103098	obj/kern/kernel.asm	/^f0103098:	01 de                	add    %ebx,%esi$/;"	l
f010309a	obj/kern/kernel.asm	/^f010309a:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010309d	obj/kern/kernel.asm	/^f010309d:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f01030a0	obj/kern/kernel.asm	/^f01030a0:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01030a5	obj/kern/kernel.asm	/^f01030a5:	77 15                	ja     f01030bc <env_create+0x88>$/;"	l
f01030a7	obj/kern/kernel.asm	/^f01030a7:	50                   	push   %eax$/;"	l
f01030a8	obj/kern/kernel.asm	/^f01030a8:	68 c8 58 10 f0       	push   $0xf01058c8$/;"	l
f01030ad	obj/kern/kernel.asm	/^f01030ad:	68 9a 01 00 00       	push   $0x19a$/;"	l
f01030b2	obj/kern/kernel.asm	/^f01030b2:	68 ff 6a 10 f0       	push   $0xf0106aff$/;"	l
f01030b7	obj/kern/kernel.asm	/^f01030b7:	e8 84 cf ff ff       	call   f0100040 <_panic>$/;"	l
f01030bc	obj/kern/kernel.asm	/^f01030bc:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01030c1	obj/kern/kernel.asm	/^f01030c1:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01030c4	obj/kern/kernel.asm	/^f01030c4:	eb 44                	jmp    f010310a <env_create+0xd6>$/;"	l
f01030c6	obj/kern/kernel.asm	/^f01030c6:	83 3b 01             	cmpl   $0x1,(%ebx)$/;"	l
f01030c9	obj/kern/kernel.asm	/^f01030c9:	75 3c                	jne    f0103107 <env_create+0xd3>$/;"	l
f01030cb	obj/kern/kernel.asm	/^f01030cb:	8b 4b 14             	mov    0x14(%ebx),%ecx$/;"	l
f01030ce	obj/kern/kernel.asm	/^f01030ce:	8b 53 08             	mov    0x8(%ebx),%edx$/;"	l
f01030d1	obj/kern/kernel.asm	/^f01030d1:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01030d4	obj/kern/kernel.asm	/^f01030d4:	e8 5d fc ff ff       	call   f0102d36 <region_alloc>$/;"	l
f01030d9	obj/kern/kernel.asm	/^f01030d9:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01030dc	obj/kern/kernel.asm	/^f01030dc:	ff 73 10             	pushl  0x10(%ebx)$/;"	l
f01030df	obj/kern/kernel.asm	/^f01030df:	89 f8                	mov    %edi,%eax$/;"	l
f01030e1	obj/kern/kernel.asm	/^f01030e1:	03 43 04             	add    0x4(%ebx),%eax$/;"	l
f01030e4	obj/kern/kernel.asm	/^f01030e4:	50                   	push   %eax$/;"	l
f01030e5	obj/kern/kernel.asm	/^f01030e5:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f01030e8	obj/kern/kernel.asm	/^f01030e8:	e8 98 1b 00 00       	call   f0104c85 <memcpy>$/;"	l
f01030ed	obj/kern/kernel.asm	/^f01030ed:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f01030f0	obj/kern/kernel.asm	/^f01030f0:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01030f3	obj/kern/kernel.asm	/^f01030f3:	8b 53 14             	mov    0x14(%ebx),%edx$/;"	l
f01030f6	obj/kern/kernel.asm	/^f01030f6:	29 c2                	sub    %eax,%edx$/;"	l
f01030f8	obj/kern/kernel.asm	/^f01030f8:	52                   	push   %edx$/;"	l
f01030f9	obj/kern/kernel.asm	/^f01030f9:	6a 00                	push   $0x0$/;"	l
f01030fb	obj/kern/kernel.asm	/^f01030fb:	03 43 08             	add    0x8(%ebx),%eax$/;"	l
f01030fe	obj/kern/kernel.asm	/^f01030fe:	50                   	push   %eax$/;"	l
f01030ff	obj/kern/kernel.asm	/^f01030ff:	e8 cc 1a 00 00       	call   f0104bd0 <memset>$/;"	l
f0103104	obj/kern/kernel.asm	/^f0103104:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103107	obj/kern/kernel.asm	/^f0103107:	83 c3 20             	add    $0x20,%ebx$/;"	l
f010310a	obj/kern/kernel.asm	/^f010310a:	39 de                	cmp    %ebx,%esi$/;"	l
f010310c	obj/kern/kernel.asm	/^f010310c:	77 b8                	ja     f01030c6 <env_create+0x92>$/;"	l
f010310e	obj/kern/kernel.asm	/^f010310e:	8b 47 18             	mov    0x18(%edi),%eax$/;"	l
f0103111	obj/kern/kernel.asm	/^f0103111:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0103114	obj/kern/kernel.asm	/^f0103114:	89 47 30             	mov    %eax,0x30(%edi)$/;"	l
f0103117	obj/kern/kernel.asm	/^f0103117:	b9 00 10 00 00       	mov    $0x1000,%ecx$/;"	l
f010311c	obj/kern/kernel.asm	/^f010311c:	ba 00 d0 bf ee       	mov    $0xeebfd000,%edx$/;"	l
f0103121	obj/kern/kernel.asm	/^f0103121:	89 f8                	mov    %edi,%eax$/;"	l
f0103123	obj/kern/kernel.asm	/^f0103123:	e8 0e fc ff ff       	call   f0102d36 <region_alloc>$/;"	l
f0103128	obj/kern/kernel.asm	/^f0103128:	a1 0c af 22 f0       	mov    0xf022af0c,%eax$/;"	l
f010312d	obj/kern/kernel.asm	/^f010312d:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103132	obj/kern/kernel.asm	/^f0103132:	77 15                	ja     f0103149 <env_create+0x115>$/;"	l
f0103134	obj/kern/kernel.asm	/^f0103134:	50                   	push   %eax$/;"	l
f0103135	obj/kern/kernel.asm	/^f0103135:	68 c8 58 10 f0       	push   $0xf01058c8$/;"	l
f010313a	obj/kern/kernel.asm	/^f010313a:	68 b9 01 00 00       	push   $0x1b9$/;"	l
f010313f	obj/kern/kernel.asm	/^f010313f:	68 ff 6a 10 f0       	push   $0xf0106aff$/;"	l
f0103144	obj/kern/kernel.asm	/^f0103144:	e8 f7 ce ff ff       	call   f0100040 <_panic>$/;"	l
f0103149	obj/kern/kernel.asm	/^f0103149:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010314e	obj/kern/kernel.asm	/^f010314e:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103151	obj/kern/kernel.asm	/^f0103151:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0103154	obj/kern/kernel.asm	/^f0103154:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0103157	obj/kern/kernel.asm	/^f0103157:	89 50 50             	mov    %edx,0x50(%eax)$/;"	l
f010315a	obj/kern/kernel.asm	/^f010315a:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010315d	obj/kern/kernel.asm	/^f010315d:	5b                   	pop    %ebx$/;"	l
f010315e	obj/kern/kernel.asm	/^f010315e:	5e                   	pop    %esi$/;"	l
f010315f	obj/kern/kernel.asm	/^f010315f:	5f                   	pop    %edi$/;"	l
f0103160	obj/kern/kernel.asm	/^f0103160:	5d                   	pop    %ebp$/;"	l
f0103161	obj/kern/kernel.asm	/^f0103161:	c3                   	ret    $/;"	l
f0103162	obj/kern/kernel.asm	/^f0103162 <env_free>:$/;"	l
f0103162	obj/kern/kernel.asm	/^f0103162:	55                   	push   %ebp$/;"	l
f0103163	obj/kern/kernel.asm	/^f0103163:	89 e5                	mov    %esp,%ebp$/;"	l
f0103165	obj/kern/kernel.asm	/^f0103165:	57                   	push   %edi$/;"	l
f0103166	obj/kern/kernel.asm	/^f0103166:	56                   	push   %esi$/;"	l
f0103167	obj/kern/kernel.asm	/^f0103167:	53                   	push   %ebx$/;"	l
f0103168	obj/kern/kernel.asm	/^f0103168:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f010316b	obj/kern/kernel.asm	/^f010316b:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f010316e	obj/kern/kernel.asm	/^f010316e:	e8 7f 20 00 00       	call   f01051f2 <cpunum>$/;"	l
f0103173	obj/kern/kernel.asm	/^f0103173:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103176	obj/kern/kernel.asm	/^f0103176:	39 b8 28 b0 22 f0    	cmp    %edi,-0xfdd4fd8(%eax)$/;"	l
f010317c	obj/kern/kernel.asm	/^f010317c:	75 29                	jne    f01031a7 <env_free+0x45>$/;"	l
f010317e	obj/kern/kernel.asm	/^f010317e:	a1 0c af 22 f0       	mov    0xf022af0c,%eax$/;"	l
f0103183	obj/kern/kernel.asm	/^f0103183:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103188	obj/kern/kernel.asm	/^f0103188:	77 15                	ja     f010319f <env_free+0x3d>$/;"	l
f010318a	obj/kern/kernel.asm	/^f010318a:	50                   	push   %eax$/;"	l
f010318b	obj/kern/kernel.asm	/^f010318b:	68 c8 58 10 f0       	push   $0xf01058c8$/;"	l
f0103190	obj/kern/kernel.asm	/^f0103190:	68 e9 01 00 00       	push   $0x1e9$/;"	l
f0103195	obj/kern/kernel.asm	/^f0103195:	68 ff 6a 10 f0       	push   $0xf0106aff$/;"	l
f010319a	obj/kern/kernel.asm	/^f010319a:	e8 a1 ce ff ff       	call   f0100040 <_panic>$/;"	l
f010319f	obj/kern/kernel.asm	/^f010319f:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01031a4	obj/kern/kernel.asm	/^f01031a4:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01031a7	obj/kern/kernel.asm	/^f01031a7:	8b 5f 48             	mov    0x48(%edi),%ebx$/;"	l
f01031aa	obj/kern/kernel.asm	/^f01031aa:	e8 43 20 00 00       	call   f01051f2 <cpunum>$/;"	l
f01031af	obj/kern/kernel.asm	/^f01031af:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01031b2	obj/kern/kernel.asm	/^f01031b2:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01031b7	obj/kern/kernel.asm	/^f01031b7:	83 b8 28 b0 22 f0 00 	cmpl   $0x0,-0xfdd4fd8(%eax)$/;"	l
f01031be	obj/kern/kernel.asm	/^f01031be:	74 11                	je     f01031d1 <env_free+0x6f>$/;"	l
f01031c0	obj/kern/kernel.asm	/^f01031c0:	e8 2d 20 00 00       	call   f01051f2 <cpunum>$/;"	l
f01031c5	obj/kern/kernel.asm	/^f01031c5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01031c8	obj/kern/kernel.asm	/^f01031c8:	8b 80 28 b0 22 f0    	mov    -0xfdd4fd8(%eax),%eax$/;"	l
f01031ce	obj/kern/kernel.asm	/^f01031ce:	8b 50 48             	mov    0x48(%eax),%edx$/;"	l
f01031d1	obj/kern/kernel.asm	/^f01031d1:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01031d4	obj/kern/kernel.asm	/^f01031d4:	53                   	push   %ebx$/;"	l
f01031d5	obj/kern/kernel.asm	/^f01031d5:	52                   	push   %edx$/;"	l
f01031d6	obj/kern/kernel.asm	/^f01031d6:	68 2e 6b 10 f0       	push   $0xf0106b2e$/;"	l
f01031db	obj/kern/kernel.asm	/^f01031db:	e8 08 04 00 00       	call   f01035e8 <cprintf>$/;"	l
f01031e0	obj/kern/kernel.asm	/^f01031e0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01031e3	obj/kern/kernel.asm	/^f01031e3:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f01031ea	obj/kern/kernel.asm	/^f01031ea:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f01031ed	obj/kern/kernel.asm	/^f01031ed:	89 d0                	mov    %edx,%eax$/;"	l
f01031ef	obj/kern/kernel.asm	/^f01031ef:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f01031f2	obj/kern/kernel.asm	/^f01031f2:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f01031f5	obj/kern/kernel.asm	/^f01031f5:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f01031f8	obj/kern/kernel.asm	/^f01031f8:	8b 34 90             	mov    (%eax,%edx,4),%esi$/;"	l
f01031fb	obj/kern/kernel.asm	/^f01031fb:	f7 c6 01 00 00 00    	test   $0x1,%esi$/;"	l
f0103201	obj/kern/kernel.asm	/^f0103201:	0f 84 a8 00 00 00    	je     f01032af <env_free+0x14d>$/;"	l
f0103207	obj/kern/kernel.asm	/^f0103207:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f010320d	obj/kern/kernel.asm	/^f010320d:	89 f0                	mov    %esi,%eax$/;"	l
f010320f	obj/kern/kernel.asm	/^f010320f:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103212	obj/kern/kernel.asm	/^f0103212:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0103215	obj/kern/kernel.asm	/^f0103215:	39 05 08 af 22 f0    	cmp    %eax,0xf022af08$/;"	l
f010321b	obj/kern/kernel.asm	/^f010321b:	77 15                	ja     f0103232 <env_free+0xd0>$/;"	l
f010321d	obj/kern/kernel.asm	/^f010321d:	56                   	push   %esi$/;"	l
f010321e	obj/kern/kernel.asm	/^f010321e:	68 a4 58 10 f0       	push   $0xf01058a4$/;"	l
f0103223	obj/kern/kernel.asm	/^f0103223:	68 f8 01 00 00       	push   $0x1f8$/;"	l
f0103228	obj/kern/kernel.asm	/^f0103228:	68 ff 6a 10 f0       	push   $0xf0106aff$/;"	l
f010322d	obj/kern/kernel.asm	/^f010322d:	e8 0e ce ff ff       	call   f0100040 <_panic>$/;"	l
f0103232	obj/kern/kernel.asm	/^f0103232:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0103235	obj/kern/kernel.asm	/^f0103235:	c1 e0 16             	shl    $0x16,%eax$/;"	l
f0103238	obj/kern/kernel.asm	/^f0103238:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010323b	obj/kern/kernel.asm	/^f010323b:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103240	obj/kern/kernel.asm	/^f0103240:	f6 84 9e 00 00 00 f0 	testb  $0x1,-0x10000000(%esi,%ebx,4)$/;"	l
f0103247	obj/kern/kernel.asm	/^f0103247:	01 $/;"	l
f0103248	obj/kern/kernel.asm	/^f0103248:	74 17                	je     f0103261 <env_free+0xff>$/;"	l
f010324a	obj/kern/kernel.asm	/^f010324a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010324d	obj/kern/kernel.asm	/^f010324d:	89 d8                	mov    %ebx,%eax$/;"	l
f010324f	obj/kern/kernel.asm	/^f010324f:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0103252	obj/kern/kernel.asm	/^f0103252:	0b 45 e4             	or     -0x1c(%ebp),%eax$/;"	l
f0103255	obj/kern/kernel.asm	/^f0103255:	50                   	push   %eax$/;"	l
f0103256	obj/kern/kernel.asm	/^f0103256:	ff 77 60             	pushl  0x60(%edi)$/;"	l
f0103259	obj/kern/kernel.asm	/^f0103259:	e8 5e df ff ff       	call   f01011bc <page_remove>$/;"	l
f010325e	obj/kern/kernel.asm	/^f010325e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103261	obj/kern/kernel.asm	/^f0103261:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0103264	obj/kern/kernel.asm	/^f0103264:	81 fb 00 04 00 00    	cmp    $0x400,%ebx$/;"	l
f010326a	obj/kern/kernel.asm	/^f010326a:	75 d4                	jne    f0103240 <env_free+0xde>$/;"	l
f010326c	obj/kern/kernel.asm	/^f010326c:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f010326f	obj/kern/kernel.asm	/^f010326f:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0103272	obj/kern/kernel.asm	/^f0103272:	c7 04 10 00 00 00 00 	movl   $0x0,(%eax,%edx,1)$/;"	l
f0103279	obj/kern/kernel.asm	/^f0103279:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f010327c	obj/kern/kernel.asm	/^f010327c:	3b 05 08 af 22 f0    	cmp    0xf022af08,%eax$/;"	l
f0103282	obj/kern/kernel.asm	/^f0103282:	72 14                	jb     f0103298 <env_free+0x136>$/;"	l
f0103284	obj/kern/kernel.asm	/^f0103284:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103287	obj/kern/kernel.asm	/^f0103287:	68 18 5f 10 f0       	push   $0xf0105f18$/;"	l
f010328c	obj/kern/kernel.asm	/^f010328c:	6a 51                	push   $0x51$/;"	l
f010328e	obj/kern/kernel.asm	/^f010328e:	68 78 67 10 f0       	push   $0xf0106778$/;"	l
f0103293	obj/kern/kernel.asm	/^f0103293:	e8 a8 cd ff ff       	call   f0100040 <_panic>$/;"	l
f0103298	obj/kern/kernel.asm	/^f0103298:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010329b	obj/kern/kernel.asm	/^f010329b:	a1 10 af 22 f0       	mov    0xf022af10,%eax$/;"	l
f01032a0	obj/kern/kernel.asm	/^f01032a0:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f01032a3	obj/kern/kernel.asm	/^f01032a3:	8d 04 d0             	lea    (%eax,%edx,8),%eax$/;"	l
f01032a6	obj/kern/kernel.asm	/^f01032a6:	50                   	push   %eax$/;"	l
f01032a7	obj/kern/kernel.asm	/^f01032a7:	e8 16 dd ff ff       	call   f0100fc2 <page_decref>$/;"	l
f01032ac	obj/kern/kernel.asm	/^f01032ac:	83 c4 10             	add    $0x10,%esp$/;"	l
f01032af	obj/kern/kernel.asm	/^f01032af:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)$/;"	l
f01032b3	obj/kern/kernel.asm	/^f01032b3:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01032b6	obj/kern/kernel.asm	/^f01032b6:	3d bb 03 00 00       	cmp    $0x3bb,%eax$/;"	l
f01032bb	obj/kern/kernel.asm	/^f01032bb:	0f 85 29 ff ff ff    	jne    f01031ea <env_free+0x88>$/;"	l
f01032c1	obj/kern/kernel.asm	/^f01032c1:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f01032c4	obj/kern/kernel.asm	/^f01032c4:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01032c9	obj/kern/kernel.asm	/^f01032c9:	77 15                	ja     f01032e0 <env_free+0x17e>$/;"	l
f01032cb	obj/kern/kernel.asm	/^f01032cb:	50                   	push   %eax$/;"	l
f01032cc	obj/kern/kernel.asm	/^f01032cc:	68 c8 58 10 f0       	push   $0xf01058c8$/;"	l
f01032d1	obj/kern/kernel.asm	/^f01032d1:	68 06 02 00 00       	push   $0x206$/;"	l
f01032d6	obj/kern/kernel.asm	/^f01032d6:	68 ff 6a 10 f0       	push   $0xf0106aff$/;"	l
f01032db	obj/kern/kernel.asm	/^f01032db:	e8 60 cd ff ff       	call   f0100040 <_panic>$/;"	l
f01032e0	obj/kern/kernel.asm	/^f01032e0:	c7 47 60 00 00 00 00 	movl   $0x0,0x60(%edi)$/;"	l
f01032e7	obj/kern/kernel.asm	/^f01032e7:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01032ec	obj/kern/kernel.asm	/^f01032ec:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01032ef	obj/kern/kernel.asm	/^f01032ef:	3b 05 08 af 22 f0    	cmp    0xf022af08,%eax$/;"	l
f01032f5	obj/kern/kernel.asm	/^f01032f5:	72 14                	jb     f010330b <env_free+0x1a9>$/;"	l
f01032f7	obj/kern/kernel.asm	/^f01032f7:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01032fa	obj/kern/kernel.asm	/^f01032fa:	68 18 5f 10 f0       	push   $0xf0105f18$/;"	l
f01032ff	obj/kern/kernel.asm	/^f01032ff:	6a 51                	push   $0x51$/;"	l
f0103301	obj/kern/kernel.asm	/^f0103301:	68 78 67 10 f0       	push   $0xf0106778$/;"	l
f0103306	obj/kern/kernel.asm	/^f0103306:	e8 35 cd ff ff       	call   f0100040 <_panic>$/;"	l
f010330b	obj/kern/kernel.asm	/^f010330b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010330e	obj/kern/kernel.asm	/^f010330e:	8b 15 10 af 22 f0    	mov    0xf022af10,%edx$/;"	l
f0103314	obj/kern/kernel.asm	/^f0103314:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f0103317	obj/kern/kernel.asm	/^f0103317:	50                   	push   %eax$/;"	l
f0103318	obj/kern/kernel.asm	/^f0103318:	e8 a5 dc ff ff       	call   f0100fc2 <page_decref>$/;"	l
f010331d	obj/kern/kernel.asm	/^f010331d:	c7 47 54 00 00 00 00 	movl   $0x0,0x54(%edi)$/;"	l
f0103324	obj/kern/kernel.asm	/^f0103324:	a1 48 a2 22 f0       	mov    0xf022a248,%eax$/;"	l
f0103329	obj/kern/kernel.asm	/^f0103329:	89 47 44             	mov    %eax,0x44(%edi)$/;"	l
f010332c	obj/kern/kernel.asm	/^f010332c:	89 3d 48 a2 22 f0    	mov    %edi,0xf022a248$/;"	l
f0103332	obj/kern/kernel.asm	/^f0103332:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103335	obj/kern/kernel.asm	/^f0103335:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0103338	obj/kern/kernel.asm	/^f0103338:	5b                   	pop    %ebx$/;"	l
f0103339	obj/kern/kernel.asm	/^f0103339:	5e                   	pop    %esi$/;"	l
f010333a	obj/kern/kernel.asm	/^f010333a:	5f                   	pop    %edi$/;"	l
f010333b	obj/kern/kernel.asm	/^f010333b:	5d                   	pop    %ebp$/;"	l
f010333c	obj/kern/kernel.asm	/^f010333c:	c3                   	ret    $/;"	l
f010333d	obj/kern/kernel.asm	/^f010333d <env_destroy>:$/;"	l
f010333d	obj/kern/kernel.asm	/^f010333d:	55                   	push   %ebp$/;"	l
f010333e	obj/kern/kernel.asm	/^f010333e:	89 e5                	mov    %esp,%ebp$/;"	l
f0103340	obj/kern/kernel.asm	/^f0103340:	53                   	push   %ebx$/;"	l
f0103341	obj/kern/kernel.asm	/^f0103341:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103344	obj/kern/kernel.asm	/^f0103344:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103347	obj/kern/kernel.asm	/^f0103347:	83 7b 54 03          	cmpl   $0x3,0x54(%ebx)$/;"	l
f010334b	obj/kern/kernel.asm	/^f010334b:	75 19                	jne    f0103366 <env_destroy+0x29>$/;"	l
f010334d	obj/kern/kernel.asm	/^f010334d:	e8 a0 1e 00 00       	call   f01051f2 <cpunum>$/;"	l
f0103352	obj/kern/kernel.asm	/^f0103352:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103355	obj/kern/kernel.asm	/^f0103355:	3b 98 28 b0 22 f0    	cmp    -0xfdd4fd8(%eax),%ebx$/;"	l
f010335b	obj/kern/kernel.asm	/^f010335b:	74 09                	je     f0103366 <env_destroy+0x29>$/;"	l
f010335d	obj/kern/kernel.asm	/^f010335d:	c7 43 54 01 00 00 00 	movl   $0x1,0x54(%ebx)$/;"	l
f0103364	obj/kern/kernel.asm	/^f0103364:	eb 33                	jmp    f0103399 <env_destroy+0x5c>$/;"	l
f0103366	obj/kern/kernel.asm	/^f0103366:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103369	obj/kern/kernel.asm	/^f0103369:	53                   	push   %ebx$/;"	l
f010336a	obj/kern/kernel.asm	/^f010336a:	e8 f3 fd ff ff       	call   f0103162 <env_free>$/;"	l
f010336f	obj/kern/kernel.asm	/^f010336f:	e8 7e 1e 00 00       	call   f01051f2 <cpunum>$/;"	l
f0103374	obj/kern/kernel.asm	/^f0103374:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103377	obj/kern/kernel.asm	/^f0103377:	83 c4 10             	add    $0x10,%esp$/;"	l
f010337a	obj/kern/kernel.asm	/^f010337a:	3b 98 28 b0 22 f0    	cmp    -0xfdd4fd8(%eax),%ebx$/;"	l
f0103380	obj/kern/kernel.asm	/^f0103380:	75 17                	jne    f0103399 <env_destroy+0x5c>$/;"	l
f0103382	obj/kern/kernel.asm	/^f0103382:	e8 6b 1e 00 00       	call   f01051f2 <cpunum>$/;"	l
f0103387	obj/kern/kernel.asm	/^f0103387:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010338a	obj/kern/kernel.asm	/^f010338a:	c7 80 28 b0 22 f0 00 	movl   $0x0,-0xfdd4fd8(%eax)$/;"	l
f0103391	obj/kern/kernel.asm	/^f0103391:	00 00 00 $/;"	l
f0103394	obj/kern/kernel.asm	/^f0103394:	e8 b2 0b 00 00       	call   f0103f4b <sched_yield>$/;"	l
f0103399	obj/kern/kernel.asm	/^f0103399:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f010339c	obj/kern/kernel.asm	/^f010339c:	c9                   	leave  $/;"	l
f010339d	obj/kern/kernel.asm	/^f010339d:	c3                   	ret    $/;"	l
f010339e	obj/kern/kernel.asm	/^f010339e <env_pop_tf>:$/;"	l
f010339e	obj/kern/kernel.asm	/^f010339e:	55                   	push   %ebp$/;"	l
f010339f	obj/kern/kernel.asm	/^f010339f:	89 e5                	mov    %esp,%ebp$/;"	l
f01033a1	obj/kern/kernel.asm	/^f01033a1:	53                   	push   %ebx$/;"	l
f01033a2	obj/kern/kernel.asm	/^f01033a2:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01033a5	obj/kern/kernel.asm	/^f01033a5:	e8 48 1e 00 00       	call   f01051f2 <cpunum>$/;"	l
f01033aa	obj/kern/kernel.asm	/^f01033aa:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01033ad	obj/kern/kernel.asm	/^f01033ad:	8b 98 28 b0 22 f0    	mov    -0xfdd4fd8(%eax),%ebx$/;"	l
f01033b3	obj/kern/kernel.asm	/^f01033b3:	e8 3a 1e 00 00       	call   f01051f2 <cpunum>$/;"	l
f01033b8	obj/kern/kernel.asm	/^f01033b8:	89 43 5c             	mov    %eax,0x5c(%ebx)$/;"	l
f01033bb	obj/kern/kernel.asm	/^f01033bb:	8b 65 08             	mov    0x8(%ebp),%esp$/;"	l
f01033be	obj/kern/kernel.asm	/^f01033be:	61                   	popa   $/;"	l
f01033bf	obj/kern/kernel.asm	/^f01033bf:	07                   	pop    %es$/;"	l
f01033c0	obj/kern/kernel.asm	/^f01033c0:	1f                   	pop    %ds$/;"	l
f01033c1	obj/kern/kernel.asm	/^f01033c1:	83 c4 08             	add    $0x8,%esp$/;"	l
f01033c4	obj/kern/kernel.asm	/^f01033c4:	cf                   	iret   $/;"	l
f01033c5	obj/kern/kernel.asm	/^f01033c5:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01033c8	obj/kern/kernel.asm	/^f01033c8:	68 44 6b 10 f0       	push   $0xf0106b44$/;"	l
f01033cd	obj/kern/kernel.asm	/^f01033cd:	68 3d 02 00 00       	push   $0x23d$/;"	l
f01033d2	obj/kern/kernel.asm	/^f01033d2:	68 ff 6a 10 f0       	push   $0xf0106aff$/;"	l
f01033d7	obj/kern/kernel.asm	/^f01033d7:	e8 64 cc ff ff       	call   f0100040 <_panic>$/;"	l
f01033dc	obj/kern/kernel.asm	/^f01033dc <env_run>:$/;"	l
f01033dc	obj/kern/kernel.asm	/^f01033dc:	55                   	push   %ebp$/;"	l
f01033dd	obj/kern/kernel.asm	/^f01033dd:	89 e5                	mov    %esp,%ebp$/;"	l
f01033df	obj/kern/kernel.asm	/^f01033df:	53                   	push   %ebx$/;"	l
f01033e0	obj/kern/kernel.asm	/^f01033e0:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01033e3	obj/kern/kernel.asm	/^f01033e3:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01033e6	obj/kern/kernel.asm	/^f01033e6:	e8 07 1e 00 00       	call   f01051f2 <cpunum>$/;"	l
f01033eb	obj/kern/kernel.asm	/^f01033eb:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01033ee	obj/kern/kernel.asm	/^f01033ee:	83 b8 28 b0 22 f0 00 	cmpl   $0x0,-0xfdd4fd8(%eax)$/;"	l
f01033f5	obj/kern/kernel.asm	/^f01033f5:	74 29                	je     f0103420 <env_run+0x44>$/;"	l
f01033f7	obj/kern/kernel.asm	/^f01033f7:	e8 f6 1d 00 00       	call   f01051f2 <cpunum>$/;"	l
f01033fc	obj/kern/kernel.asm	/^f01033fc:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01033ff	obj/kern/kernel.asm	/^f01033ff:	8b 80 28 b0 22 f0    	mov    -0xfdd4fd8(%eax),%eax$/;"	l
f0103405	obj/kern/kernel.asm	/^f0103405:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0103409	obj/kern/kernel.asm	/^f0103409:	75 15                	jne    f0103420 <env_run+0x44>$/;"	l
f010340b	obj/kern/kernel.asm	/^f010340b:	e8 e2 1d 00 00       	call   f01051f2 <cpunum>$/;"	l
f0103410	obj/kern/kernel.asm	/^f0103410:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103413	obj/kern/kernel.asm	/^f0103413:	8b 80 28 b0 22 f0    	mov    -0xfdd4fd8(%eax),%eax$/;"	l
f0103419	obj/kern/kernel.asm	/^f0103419:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f0103420	obj/kern/kernel.asm	/^f0103420:	e8 cd 1d 00 00       	call   f01051f2 <cpunum>$/;"	l
f0103425	obj/kern/kernel.asm	/^f0103425:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103428	obj/kern/kernel.asm	/^f0103428:	89 98 28 b0 22 f0    	mov    %ebx,-0xfdd4fd8(%eax)$/;"	l
f010342e	obj/kern/kernel.asm	/^f010342e:	c7 43 54 03 00 00 00 	movl   $0x3,0x54(%ebx)$/;"	l
f0103435	obj/kern/kernel.asm	/^f0103435:	83 43 58 01          	addl   $0x1,0x58(%ebx)$/;"	l
f0103439	obj/kern/kernel.asm	/^f0103439:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f010343c	obj/kern/kernel.asm	/^f010343c:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103441	obj/kern/kernel.asm	/^f0103441:	77 15                	ja     f0103458 <env_run+0x7c>$/;"	l
f0103443	obj/kern/kernel.asm	/^f0103443:	50                   	push   %eax$/;"	l
f0103444	obj/kern/kernel.asm	/^f0103444:	68 c8 58 10 f0       	push   $0xf01058c8$/;"	l
f0103449	obj/kern/kernel.asm	/^f0103449:	68 74 02 00 00       	push   $0x274$/;"	l
f010344e	obj/kern/kernel.asm	/^f010344e:	68 ff 6a 10 f0       	push   $0xf0106aff$/;"	l
f0103453	obj/kern/kernel.asm	/^f0103453:	e8 e8 cb ff ff       	call   f0100040 <_panic>$/;"	l
f0103458	obj/kern/kernel.asm	/^f0103458:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010345d	obj/kern/kernel.asm	/^f010345d:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103460	obj/kern/kernel.asm	/^f0103460:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103463	obj/kern/kernel.asm	/^f0103463:	53                   	push   %ebx$/;"	l
f0103464	obj/kern/kernel.asm	/^f0103464:	e8 35 ff ff ff       	call   f010339e <env_pop_tf>$/;"	l
f0103469	obj/kern/kernel.asm	/^f0103469 <mc146818_read>:$/;"	l
f0103469	obj/kern/kernel.asm	/^f0103469:	55                   	push   %ebp$/;"	l
f010346a	obj/kern/kernel.asm	/^f010346a:	89 e5                	mov    %esp,%ebp$/;"	l
f010346c	obj/kern/kernel.asm	/^f010346c:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0103471	obj/kern/kernel.asm	/^f0103471:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103474	obj/kern/kernel.asm	/^f0103474:	ee                   	out    %al,(%dx)$/;"	l
f0103475	obj/kern/kernel.asm	/^f0103475:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f010347a	obj/kern/kernel.asm	/^f010347a:	ec                   	in     (%dx),%al$/;"	l
f010347b	obj/kern/kernel.asm	/^f010347b:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010347e	obj/kern/kernel.asm	/^f010347e:	5d                   	pop    %ebp$/;"	l
f010347f	obj/kern/kernel.asm	/^f010347f:	c3                   	ret    $/;"	l
f0103480	obj/kern/kernel.asm	/^f0103480 <mc146818_write>:$/;"	l
f0103480	obj/kern/kernel.asm	/^f0103480:	55                   	push   %ebp$/;"	l
f0103481	obj/kern/kernel.asm	/^f0103481:	89 e5                	mov    %esp,%ebp$/;"	l
f0103483	obj/kern/kernel.asm	/^f0103483:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0103488	obj/kern/kernel.asm	/^f0103488:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010348b	obj/kern/kernel.asm	/^f010348b:	ee                   	out    %al,(%dx)$/;"	l
f010348c	obj/kern/kernel.asm	/^f010348c:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f0103491	obj/kern/kernel.asm	/^f0103491:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103494	obj/kern/kernel.asm	/^f0103494:	ee                   	out    %al,(%dx)$/;"	l
f0103495	obj/kern/kernel.asm	/^f0103495:	5d                   	pop    %ebp$/;"	l
f0103496	obj/kern/kernel.asm	/^f0103496:	c3                   	ret    $/;"	l
f0103497	obj/kern/kernel.asm	/^f0103497 <irq_setmask_8259A>:$/;"	l
f0103497	obj/kern/kernel.asm	/^f0103497:	55                   	push   %ebp$/;"	l
f0103498	obj/kern/kernel.asm	/^f0103498:	89 e5                	mov    %esp,%ebp$/;"	l
f010349a	obj/kern/kernel.asm	/^f010349a:	56                   	push   %esi$/;"	l
f010349b	obj/kern/kernel.asm	/^f010349b:	53                   	push   %ebx$/;"	l
f010349c	obj/kern/kernel.asm	/^f010349c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010349f	obj/kern/kernel.asm	/^f010349f:	66 a3 a8 f3 11 f0    	mov    %ax,0xf011f3a8$/;"	l
f01034a5	obj/kern/kernel.asm	/^f01034a5:	80 3d 4c a2 22 f0 00 	cmpb   $0x0,0xf022a24c$/;"	l
f01034ac	obj/kern/kernel.asm	/^f01034ac:	74 5a                	je     f0103508 <irq_setmask_8259A+0x71>$/;"	l
f01034ae	obj/kern/kernel.asm	/^f01034ae:	89 c6                	mov    %eax,%esi$/;"	l
f01034b0	obj/kern/kernel.asm	/^f01034b0:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f01034b5	obj/kern/kernel.asm	/^f01034b5:	ee                   	out    %al,(%dx)$/;"	l
f01034b6	obj/kern/kernel.asm	/^f01034b6:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f01034ba	obj/kern/kernel.asm	/^f01034ba:	ba a1 00 00 00       	mov    $0xa1,%edx$/;"	l
f01034bf	obj/kern/kernel.asm	/^f01034bf:	ee                   	out    %al,(%dx)$/;"	l
f01034c0	obj/kern/kernel.asm	/^f01034c0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01034c3	obj/kern/kernel.asm	/^f01034c3:	68 50 6b 10 f0       	push   $0xf0106b50$/;"	l
f01034c8	obj/kern/kernel.asm	/^f01034c8:	e8 1b 01 00 00       	call   f01035e8 <cprintf>$/;"	l
f01034cd	obj/kern/kernel.asm	/^f01034cd:	83 c4 10             	add    $0x10,%esp$/;"	l
f01034d0	obj/kern/kernel.asm	/^f01034d0:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01034d5	obj/kern/kernel.asm	/^f01034d5:	0f b7 f6             	movzwl %si,%esi$/;"	l
f01034d8	obj/kern/kernel.asm	/^f01034d8:	f7 d6                	not    %esi$/;"	l
f01034da	obj/kern/kernel.asm	/^f01034da:	0f a3 de             	bt     %ebx,%esi$/;"	l
f01034dd	obj/kern/kernel.asm	/^f01034dd:	73 11                	jae    f01034f0 <irq_setmask_8259A+0x59>$/;"	l
f01034df	obj/kern/kernel.asm	/^f01034df:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01034e2	obj/kern/kernel.asm	/^f01034e2:	53                   	push   %ebx$/;"	l
f01034e3	obj/kern/kernel.asm	/^f01034e3:	68 c5 6f 10 f0       	push   $0xf0106fc5$/;"	l
f01034e8	obj/kern/kernel.asm	/^f01034e8:	e8 fb 00 00 00       	call   f01035e8 <cprintf>$/;"	l
f01034ed	obj/kern/kernel.asm	/^f01034ed:	83 c4 10             	add    $0x10,%esp$/;"	l
f01034f0	obj/kern/kernel.asm	/^f01034f0:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01034f3	obj/kern/kernel.asm	/^f01034f3:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
f01034f6	obj/kern/kernel.asm	/^f01034f6:	75 e2                	jne    f01034da <irq_setmask_8259A+0x43>$/;"	l
f01034f8	obj/kern/kernel.asm	/^f01034f8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01034fb	obj/kern/kernel.asm	/^f01034fb:	68 19 5c 10 f0       	push   $0xf0105c19$/;"	l
f0103500	obj/kern/kernel.asm	/^f0103500:	e8 e3 00 00 00       	call   f01035e8 <cprintf>$/;"	l
f0103505	obj/kern/kernel.asm	/^f0103505:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103508	obj/kern/kernel.asm	/^f0103508:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f010350b	obj/kern/kernel.asm	/^f010350b:	5b                   	pop    %ebx$/;"	l
f010350c	obj/kern/kernel.asm	/^f010350c:	5e                   	pop    %esi$/;"	l
f010350d	obj/kern/kernel.asm	/^f010350d:	5d                   	pop    %ebp$/;"	l
f010350e	obj/kern/kernel.asm	/^f010350e:	c3                   	ret    $/;"	l
f010350f	obj/kern/kernel.asm	/^f010350f <pic_init>:$/;"	l
f010350f	obj/kern/kernel.asm	/^f010350f:	c6 05 4c a2 22 f0 01 	movb   $0x1,0xf022a24c$/;"	l
f0103516	obj/kern/kernel.asm	/^f0103516:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f010351b	obj/kern/kernel.asm	/^f010351b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0103520	obj/kern/kernel.asm	/^f0103520:	ee                   	out    %al,(%dx)$/;"	l
f0103521	obj/kern/kernel.asm	/^f0103521:	ba a1 00 00 00       	mov    $0xa1,%edx$/;"	l
f0103526	obj/kern/kernel.asm	/^f0103526:	ee                   	out    %al,(%dx)$/;"	l
f0103527	obj/kern/kernel.asm	/^f0103527:	ba 20 00 00 00       	mov    $0x20,%edx$/;"	l
f010352c	obj/kern/kernel.asm	/^f010352c:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f0103531	obj/kern/kernel.asm	/^f0103531:	ee                   	out    %al,(%dx)$/;"	l
f0103532	obj/kern/kernel.asm	/^f0103532:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f0103537	obj/kern/kernel.asm	/^f0103537:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010353c	obj/kern/kernel.asm	/^f010353c:	ee                   	out    %al,(%dx)$/;"	l
f010353d	obj/kern/kernel.asm	/^f010353d:	b8 04 00 00 00       	mov    $0x4,%eax$/;"	l
f0103542	obj/kern/kernel.asm	/^f0103542:	ee                   	out    %al,(%dx)$/;"	l
f0103543	obj/kern/kernel.asm	/^f0103543:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0103548	obj/kern/kernel.asm	/^f0103548:	ee                   	out    %al,(%dx)$/;"	l
f0103549	obj/kern/kernel.asm	/^f0103549:	ba a0 00 00 00       	mov    $0xa0,%edx$/;"	l
f010354e	obj/kern/kernel.asm	/^f010354e:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f0103553	obj/kern/kernel.asm	/^f0103553:	ee                   	out    %al,(%dx)$/;"	l
f0103554	obj/kern/kernel.asm	/^f0103554:	ba a1 00 00 00       	mov    $0xa1,%edx$/;"	l
f0103559	obj/kern/kernel.asm	/^f0103559:	b8 28 00 00 00       	mov    $0x28,%eax$/;"	l
f010355e	obj/kern/kernel.asm	/^f010355e:	ee                   	out    %al,(%dx)$/;"	l
f010355f	obj/kern/kernel.asm	/^f010355f:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f0103564	obj/kern/kernel.asm	/^f0103564:	ee                   	out    %al,(%dx)$/;"	l
f0103565	obj/kern/kernel.asm	/^f0103565:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010356a	obj/kern/kernel.asm	/^f010356a:	ee                   	out    %al,(%dx)$/;"	l
f010356b	obj/kern/kernel.asm	/^f010356b:	ba 20 00 00 00       	mov    $0x20,%edx$/;"	l
f0103570	obj/kern/kernel.asm	/^f0103570:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f0103575	obj/kern/kernel.asm	/^f0103575:	ee                   	out    %al,(%dx)$/;"	l
f0103576	obj/kern/kernel.asm	/^f0103576:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f010357b	obj/kern/kernel.asm	/^f010357b:	ee                   	out    %al,(%dx)$/;"	l
f010357c	obj/kern/kernel.asm	/^f010357c:	ba a0 00 00 00       	mov    $0xa0,%edx$/;"	l
f0103581	obj/kern/kernel.asm	/^f0103581:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f0103586	obj/kern/kernel.asm	/^f0103586:	ee                   	out    %al,(%dx)$/;"	l
f0103587	obj/kern/kernel.asm	/^f0103587:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f010358c	obj/kern/kernel.asm	/^f010358c:	ee                   	out    %al,(%dx)$/;"	l
f010358d	obj/kern/kernel.asm	/^f010358d:	0f b7 05 a8 f3 11 f0 	movzwl 0xf011f3a8,%eax$/;"	l
f0103594	obj/kern/kernel.asm	/^f0103594:	66 83 f8 ff          	cmp    $0xffff,%ax$/;"	l
f0103598	obj/kern/kernel.asm	/^f0103598:	74 13                	je     f01035ad <pic_init+0x9e>$/;"	l
f010359a	obj/kern/kernel.asm	/^f010359a:	55                   	push   %ebp$/;"	l
f010359b	obj/kern/kernel.asm	/^f010359b:	89 e5                	mov    %esp,%ebp$/;"	l
f010359d	obj/kern/kernel.asm	/^f010359d:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01035a0	obj/kern/kernel.asm	/^f01035a0:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f01035a3	obj/kern/kernel.asm	/^f01035a3:	50                   	push   %eax$/;"	l
f01035a4	obj/kern/kernel.asm	/^f01035a4:	e8 ee fe ff ff       	call   f0103497 <irq_setmask_8259A>$/;"	l
f01035a9	obj/kern/kernel.asm	/^f01035a9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01035ac	obj/kern/kernel.asm	/^f01035ac:	c9                   	leave  $/;"	l
f01035ad	obj/kern/kernel.asm	/^f01035ad:	f3 c3                	repz ret $/;"	l
f01035af	obj/kern/kernel.asm	/^f01035af <putch>:$/;"	l
f01035af	obj/kern/kernel.asm	/^f01035af:	55                   	push   %ebp$/;"	l
f01035b0	obj/kern/kernel.asm	/^f01035b0:	89 e5                	mov    %esp,%ebp$/;"	l
f01035b2	obj/kern/kernel.asm	/^f01035b2:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01035b5	obj/kern/kernel.asm	/^f01035b5:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01035b8	obj/kern/kernel.asm	/^f01035b8:	e8 78 d1 ff ff       	call   f0100735 <cputchar>$/;"	l
f01035bd	obj/kern/kernel.asm	/^f01035bd:	83 c4 10             	add    $0x10,%esp$/;"	l
f01035c0	obj/kern/kernel.asm	/^f01035c0:	c9                   	leave  $/;"	l
f01035c1	obj/kern/kernel.asm	/^f01035c1:	c3                   	ret    $/;"	l
f01035c2	obj/kern/kernel.asm	/^f01035c2 <vcprintf>:$/;"	l
f01035c2	obj/kern/kernel.asm	/^f01035c2:	55                   	push   %ebp$/;"	l
f01035c3	obj/kern/kernel.asm	/^f01035c3:	89 e5                	mov    %esp,%ebp$/;"	l
f01035c5	obj/kern/kernel.asm	/^f01035c5:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01035c8	obj/kern/kernel.asm	/^f01035c8:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f01035cf	obj/kern/kernel.asm	/^f01035cf:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01035d2	obj/kern/kernel.asm	/^f01035d2:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01035d5	obj/kern/kernel.asm	/^f01035d5:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f01035d8	obj/kern/kernel.asm	/^f01035d8:	50                   	push   %eax$/;"	l
f01035d9	obj/kern/kernel.asm	/^f01035d9:	68 af 35 10 f0       	push   $0xf01035af$/;"	l
f01035de	obj/kern/kernel.asm	/^f01035de:	e8 81 0f 00 00       	call   f0104564 <vprintfmt>$/;"	l
f01035e3	obj/kern/kernel.asm	/^f01035e3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01035e6	obj/kern/kernel.asm	/^f01035e6:	c9                   	leave  $/;"	l
f01035e7	obj/kern/kernel.asm	/^f01035e7:	c3                   	ret    $/;"	l
f01035e8	obj/kern/kernel.asm	/^f01035e8 <cprintf>:$/;"	l
f01035e8	obj/kern/kernel.asm	/^f01035e8:	55                   	push   %ebp$/;"	l
f01035e9	obj/kern/kernel.asm	/^f01035e9:	89 e5                	mov    %esp,%ebp$/;"	l
f01035eb	obj/kern/kernel.asm	/^f01035eb:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01035ee	obj/kern/kernel.asm	/^f01035ee:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
f01035f1	obj/kern/kernel.asm	/^f01035f1:	50                   	push   %eax$/;"	l
f01035f2	obj/kern/kernel.asm	/^f01035f2:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01035f5	obj/kern/kernel.asm	/^f01035f5:	e8 c8 ff ff ff       	call   f01035c2 <vcprintf>$/;"	l
f01035fa	obj/kern/kernel.asm	/^f01035fa:	c9                   	leave  $/;"	l
f01035fb	obj/kern/kernel.asm	/^f01035fb:	c3                   	ret    $/;"	l
f01035fc	obj/kern/kernel.asm	/^f01035fc <trap_init_percpu>:$/;"	l
f01035fc	obj/kern/kernel.asm	/^f01035fc:	55                   	push   %ebp$/;"	l
f01035fd	obj/kern/kernel.asm	/^f01035fd:	89 e5                	mov    %esp,%ebp$/;"	l
f01035ff	obj/kern/kernel.asm	/^f01035ff:	b8 80 aa 22 f0       	mov    $0xf022aa80,%eax$/;"	l
f0103604	obj/kern/kernel.asm	/^f0103604:	c7 05 84 aa 22 f0 00 	movl   $0xf0000000,0xf022aa84$/;"	l
f010360b	obj/kern/kernel.asm	/^f010360b:	00 00 f0 $/;"	l
f010360e	obj/kern/kernel.asm	/^f010360e:	66 c7 05 88 aa 22 f0 	movw   $0x10,0xf022aa88$/;"	l
f0103615	obj/kern/kernel.asm	/^f0103615:	10 00 $/;"	l
f0103617	obj/kern/kernel.asm	/^f0103617:	66 c7 05 68 f3 11 f0 	movw   $0x67,0xf011f368$/;"	l
f010361e	obj/kern/kernel.asm	/^f010361e:	67 00 $/;"	l
f0103620	obj/kern/kernel.asm	/^f0103620:	66 a3 6a f3 11 f0    	mov    %ax,0xf011f36a$/;"	l
f0103626	obj/kern/kernel.asm	/^f0103626:	89 c2                	mov    %eax,%edx$/;"	l
f0103628	obj/kern/kernel.asm	/^f0103628:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f010362b	obj/kern/kernel.asm	/^f010362b:	88 15 6c f3 11 f0    	mov    %dl,0xf011f36c$/;"	l
f0103631	obj/kern/kernel.asm	/^f0103631:	c6 05 6e f3 11 f0 40 	movb   $0x40,0xf011f36e$/;"	l
f0103638	obj/kern/kernel.asm	/^f0103638:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f010363b	obj/kern/kernel.asm	/^f010363b:	a2 6f f3 11 f0       	mov    %al,0xf011f36f$/;"	l
f0103640	obj/kern/kernel.asm	/^f0103640:	c6 05 6d f3 11 f0 89 	movb   $0x89,0xf011f36d$/;"	l
f0103647	obj/kern/kernel.asm	/^f0103647:	b8 28 00 00 00       	mov    $0x28,%eax$/;"	l
f010364c	obj/kern/kernel.asm	/^f010364c:	0f 00 d8             	ltr    %ax$/;"	l
f010364f	obj/kern/kernel.asm	/^f010364f:	b8 ac f3 11 f0       	mov    $0xf011f3ac,%eax$/;"	l
f0103654	obj/kern/kernel.asm	/^f0103654:	0f 01 18             	lidtl  (%eax)$/;"	l
f0103657	obj/kern/kernel.asm	/^f0103657:	5d                   	pop    %ebp$/;"	l
f0103658	obj/kern/kernel.asm	/^f0103658:	c3                   	ret    $/;"	l
f0103659	obj/kern/kernel.asm	/^f0103659 <trap_init>:$/;"	l
f0103659	obj/kern/kernel.asm	/^f0103659:	55                   	push   %ebp$/;"	l
f010365a	obj/kern/kernel.asm	/^f010365a:	89 e5                	mov    %esp,%ebp$/;"	l
f010365c	obj/kern/kernel.asm	/^f010365c:	b8 02 3e 10 f0       	mov    $0xf0103e02,%eax$/;"	l
f0103661	obj/kern/kernel.asm	/^f0103661:	66 a3 60 a2 22 f0    	mov    %ax,0xf022a260$/;"	l
f0103667	obj/kern/kernel.asm	/^f0103667:	66 c7 05 62 a2 22 f0 	movw   $0x8,0xf022a262$/;"	l
f010366e	obj/kern/kernel.asm	/^f010366e:	08 00 $/;"	l
f0103670	obj/kern/kernel.asm	/^f0103670:	c6 05 64 a2 22 f0 00 	movb   $0x0,0xf022a264$/;"	l
f0103677	obj/kern/kernel.asm	/^f0103677:	c6 05 65 a2 22 f0 8e 	movb   $0x8e,0xf022a265$/;"	l
f010367e	obj/kern/kernel.asm	/^f010367e:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103681	obj/kern/kernel.asm	/^f0103681:	66 a3 66 a2 22 f0    	mov    %ax,0xf022a266$/;"	l
f0103687	obj/kern/kernel.asm	/^f0103687:	b8 08 3e 10 f0       	mov    $0xf0103e08,%eax$/;"	l
f010368c	obj/kern/kernel.asm	/^f010368c:	66 a3 68 a2 22 f0    	mov    %ax,0xf022a268$/;"	l
f0103692	obj/kern/kernel.asm	/^f0103692:	66 c7 05 6a a2 22 f0 	movw   $0x8,0xf022a26a$/;"	l
f0103699	obj/kern/kernel.asm	/^f0103699:	08 00 $/;"	l
f010369b	obj/kern/kernel.asm	/^f010369b:	c6 05 6c a2 22 f0 00 	movb   $0x0,0xf022a26c$/;"	l
f01036a2	obj/kern/kernel.asm	/^f01036a2:	c6 05 6d a2 22 f0 8e 	movb   $0x8e,0xf022a26d$/;"	l
f01036a9	obj/kern/kernel.asm	/^f01036a9:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01036ac	obj/kern/kernel.asm	/^f01036ac:	66 a3 6e a2 22 f0    	mov    %ax,0xf022a26e$/;"	l
f01036b2	obj/kern/kernel.asm	/^f01036b2:	b8 0e 3e 10 f0       	mov    $0xf0103e0e,%eax$/;"	l
f01036b7	obj/kern/kernel.asm	/^f01036b7:	66 a3 70 a2 22 f0    	mov    %ax,0xf022a270$/;"	l
f01036bd	obj/kern/kernel.asm	/^f01036bd:	66 c7 05 72 a2 22 f0 	movw   $0x8,0xf022a272$/;"	l
f01036c4	obj/kern/kernel.asm	/^f01036c4:	08 00 $/;"	l
f01036c6	obj/kern/kernel.asm	/^f01036c6:	c6 05 74 a2 22 f0 00 	movb   $0x0,0xf022a274$/;"	l
f01036cd	obj/kern/kernel.asm	/^f01036cd:	c6 05 75 a2 22 f0 8e 	movb   $0x8e,0xf022a275$/;"	l
f01036d4	obj/kern/kernel.asm	/^f01036d4:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01036d7	obj/kern/kernel.asm	/^f01036d7:	66 a3 76 a2 22 f0    	mov    %ax,0xf022a276$/;"	l
f01036dd	obj/kern/kernel.asm	/^f01036dd:	b8 14 3e 10 f0       	mov    $0xf0103e14,%eax$/;"	l
f01036e2	obj/kern/kernel.asm	/^f01036e2:	66 a3 78 a2 22 f0    	mov    %ax,0xf022a278$/;"	l
f01036e8	obj/kern/kernel.asm	/^f01036e8:	66 c7 05 7a a2 22 f0 	movw   $0x8,0xf022a27a$/;"	l
f01036ef	obj/kern/kernel.asm	/^f01036ef:	08 00 $/;"	l
f01036f1	obj/kern/kernel.asm	/^f01036f1:	c6 05 7c a2 22 f0 00 	movb   $0x0,0xf022a27c$/;"	l
f01036f8	obj/kern/kernel.asm	/^f01036f8:	c6 05 7d a2 22 f0 ee 	movb   $0xee,0xf022a27d$/;"	l
f01036ff	obj/kern/kernel.asm	/^f01036ff:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103702	obj/kern/kernel.asm	/^f0103702:	66 a3 7e a2 22 f0    	mov    %ax,0xf022a27e$/;"	l
f0103708	obj/kern/kernel.asm	/^f0103708:	b8 1a 3e 10 f0       	mov    $0xf0103e1a,%eax$/;"	l
f010370d	obj/kern/kernel.asm	/^f010370d:	66 a3 80 a2 22 f0    	mov    %ax,0xf022a280$/;"	l
f0103713	obj/kern/kernel.asm	/^f0103713:	66 c7 05 82 a2 22 f0 	movw   $0x8,0xf022a282$/;"	l
f010371a	obj/kern/kernel.asm	/^f010371a:	08 00 $/;"	l
f010371c	obj/kern/kernel.asm	/^f010371c:	c6 05 84 a2 22 f0 00 	movb   $0x0,0xf022a284$/;"	l
f0103723	obj/kern/kernel.asm	/^f0103723:	c6 05 85 a2 22 f0 8e 	movb   $0x8e,0xf022a285$/;"	l
f010372a	obj/kern/kernel.asm	/^f010372a:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010372d	obj/kern/kernel.asm	/^f010372d:	66 a3 86 a2 22 f0    	mov    %ax,0xf022a286$/;"	l
f0103733	obj/kern/kernel.asm	/^f0103733:	b8 20 3e 10 f0       	mov    $0xf0103e20,%eax$/;"	l
f0103738	obj/kern/kernel.asm	/^f0103738:	66 a3 88 a2 22 f0    	mov    %ax,0xf022a288$/;"	l
f010373e	obj/kern/kernel.asm	/^f010373e:	66 c7 05 8a a2 22 f0 	movw   $0x8,0xf022a28a$/;"	l
f0103745	obj/kern/kernel.asm	/^f0103745:	08 00 $/;"	l
f0103747	obj/kern/kernel.asm	/^f0103747:	c6 05 8c a2 22 f0 00 	movb   $0x0,0xf022a28c$/;"	l
f010374e	obj/kern/kernel.asm	/^f010374e:	c6 05 8d a2 22 f0 8e 	movb   $0x8e,0xf022a28d$/;"	l
f0103755	obj/kern/kernel.asm	/^f0103755:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103758	obj/kern/kernel.asm	/^f0103758:	66 a3 8e a2 22 f0    	mov    %ax,0xf022a28e$/;"	l
f010375e	obj/kern/kernel.asm	/^f010375e:	b8 26 3e 10 f0       	mov    $0xf0103e26,%eax$/;"	l
f0103763	obj/kern/kernel.asm	/^f0103763:	66 a3 90 a2 22 f0    	mov    %ax,0xf022a290$/;"	l
f0103769	obj/kern/kernel.asm	/^f0103769:	66 c7 05 92 a2 22 f0 	movw   $0x8,0xf022a292$/;"	l
f0103770	obj/kern/kernel.asm	/^f0103770:	08 00 $/;"	l
f0103772	obj/kern/kernel.asm	/^f0103772:	c6 05 94 a2 22 f0 00 	movb   $0x0,0xf022a294$/;"	l
f0103779	obj/kern/kernel.asm	/^f0103779:	c6 05 95 a2 22 f0 8e 	movb   $0x8e,0xf022a295$/;"	l
f0103780	obj/kern/kernel.asm	/^f0103780:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103783	obj/kern/kernel.asm	/^f0103783:	66 a3 96 a2 22 f0    	mov    %ax,0xf022a296$/;"	l
f0103789	obj/kern/kernel.asm	/^f0103789:	b8 2c 3e 10 f0       	mov    $0xf0103e2c,%eax$/;"	l
f010378e	obj/kern/kernel.asm	/^f010378e:	66 a3 98 a2 22 f0    	mov    %ax,0xf022a298$/;"	l
f0103794	obj/kern/kernel.asm	/^f0103794:	66 c7 05 9a a2 22 f0 	movw   $0x8,0xf022a29a$/;"	l
f010379b	obj/kern/kernel.asm	/^f010379b:	08 00 $/;"	l
f010379d	obj/kern/kernel.asm	/^f010379d:	c6 05 9c a2 22 f0 00 	movb   $0x0,0xf022a29c$/;"	l
f01037a4	obj/kern/kernel.asm	/^f01037a4:	c6 05 9d a2 22 f0 8e 	movb   $0x8e,0xf022a29d$/;"	l
f01037ab	obj/kern/kernel.asm	/^f01037ab:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01037ae	obj/kern/kernel.asm	/^f01037ae:	66 a3 9e a2 22 f0    	mov    %ax,0xf022a29e$/;"	l
f01037b4	obj/kern/kernel.asm	/^f01037b4:	b8 32 3e 10 f0       	mov    $0xf0103e32,%eax$/;"	l
f01037b9	obj/kern/kernel.asm	/^f01037b9:	66 a3 a0 a2 22 f0    	mov    %ax,0xf022a2a0$/;"	l
f01037bf	obj/kern/kernel.asm	/^f01037bf:	66 c7 05 a2 a2 22 f0 	movw   $0x8,0xf022a2a2$/;"	l
f01037c6	obj/kern/kernel.asm	/^f01037c6:	08 00 $/;"	l
f01037c8	obj/kern/kernel.asm	/^f01037c8:	c6 05 a4 a2 22 f0 00 	movb   $0x0,0xf022a2a4$/;"	l
f01037cf	obj/kern/kernel.asm	/^f01037cf:	c6 05 a5 a2 22 f0 8e 	movb   $0x8e,0xf022a2a5$/;"	l
f01037d6	obj/kern/kernel.asm	/^f01037d6:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01037d9	obj/kern/kernel.asm	/^f01037d9:	66 a3 a6 a2 22 f0    	mov    %ax,0xf022a2a6$/;"	l
f01037df	obj/kern/kernel.asm	/^f01037df:	b8 36 3e 10 f0       	mov    $0xf0103e36,%eax$/;"	l
f01037e4	obj/kern/kernel.asm	/^f01037e4:	66 a3 b0 a2 22 f0    	mov    %ax,0xf022a2b0$/;"	l
f01037ea	obj/kern/kernel.asm	/^f01037ea:	66 c7 05 b2 a2 22 f0 	movw   $0x8,0xf022a2b2$/;"	l
f01037f1	obj/kern/kernel.asm	/^f01037f1:	08 00 $/;"	l
f01037f3	obj/kern/kernel.asm	/^f01037f3:	c6 05 b4 a2 22 f0 00 	movb   $0x0,0xf022a2b4$/;"	l
f01037fa	obj/kern/kernel.asm	/^f01037fa:	c6 05 b5 a2 22 f0 8e 	movb   $0x8e,0xf022a2b5$/;"	l
f0103801	obj/kern/kernel.asm	/^f0103801:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103804	obj/kern/kernel.asm	/^f0103804:	66 a3 b6 a2 22 f0    	mov    %ax,0xf022a2b6$/;"	l
f010380a	obj/kern/kernel.asm	/^f010380a:	b8 3a 3e 10 f0       	mov    $0xf0103e3a,%eax$/;"	l
f010380f	obj/kern/kernel.asm	/^f010380f:	66 a3 b8 a2 22 f0    	mov    %ax,0xf022a2b8$/;"	l
f0103815	obj/kern/kernel.asm	/^f0103815:	66 c7 05 ba a2 22 f0 	movw   $0x8,0xf022a2ba$/;"	l
f010381c	obj/kern/kernel.asm	/^f010381c:	08 00 $/;"	l
f010381e	obj/kern/kernel.asm	/^f010381e:	c6 05 bc a2 22 f0 00 	movb   $0x0,0xf022a2bc$/;"	l
f0103825	obj/kern/kernel.asm	/^f0103825:	c6 05 bd a2 22 f0 8e 	movb   $0x8e,0xf022a2bd$/;"	l
f010382c	obj/kern/kernel.asm	/^f010382c:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010382f	obj/kern/kernel.asm	/^f010382f:	66 a3 be a2 22 f0    	mov    %ax,0xf022a2be$/;"	l
f0103835	obj/kern/kernel.asm	/^f0103835:	b8 3e 3e 10 f0       	mov    $0xf0103e3e,%eax$/;"	l
f010383a	obj/kern/kernel.asm	/^f010383a:	66 a3 c0 a2 22 f0    	mov    %ax,0xf022a2c0$/;"	l
f0103840	obj/kern/kernel.asm	/^f0103840:	66 c7 05 c2 a2 22 f0 	movw   $0x8,0xf022a2c2$/;"	l
f0103847	obj/kern/kernel.asm	/^f0103847:	08 00 $/;"	l
f0103849	obj/kern/kernel.asm	/^f0103849:	c6 05 c4 a2 22 f0 00 	movb   $0x0,0xf022a2c4$/;"	l
f0103850	obj/kern/kernel.asm	/^f0103850:	c6 05 c5 a2 22 f0 8e 	movb   $0x8e,0xf022a2c5$/;"	l
f0103857	obj/kern/kernel.asm	/^f0103857:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010385a	obj/kern/kernel.asm	/^f010385a:	66 a3 c6 a2 22 f0    	mov    %ax,0xf022a2c6$/;"	l
f0103860	obj/kern/kernel.asm	/^f0103860:	b8 42 3e 10 f0       	mov    $0xf0103e42,%eax$/;"	l
f0103865	obj/kern/kernel.asm	/^f0103865:	66 a3 c8 a2 22 f0    	mov    %ax,0xf022a2c8$/;"	l
f010386b	obj/kern/kernel.asm	/^f010386b:	66 c7 05 ca a2 22 f0 	movw   $0x8,0xf022a2ca$/;"	l
f0103872	obj/kern/kernel.asm	/^f0103872:	08 00 $/;"	l
f0103874	obj/kern/kernel.asm	/^f0103874:	c6 05 cc a2 22 f0 00 	movb   $0x0,0xf022a2cc$/;"	l
f010387b	obj/kern/kernel.asm	/^f010387b:	c6 05 cd a2 22 f0 8e 	movb   $0x8e,0xf022a2cd$/;"	l
f0103882	obj/kern/kernel.asm	/^f0103882:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103885	obj/kern/kernel.asm	/^f0103885:	66 a3 ce a2 22 f0    	mov    %ax,0xf022a2ce$/;"	l
f010388b	obj/kern/kernel.asm	/^f010388b:	b8 46 3e 10 f0       	mov    $0xf0103e46,%eax$/;"	l
f0103890	obj/kern/kernel.asm	/^f0103890:	66 a3 d0 a2 22 f0    	mov    %ax,0xf022a2d0$/;"	l
f0103896	obj/kern/kernel.asm	/^f0103896:	66 c7 05 d2 a2 22 f0 	movw   $0x8,0xf022a2d2$/;"	l
f010389d	obj/kern/kernel.asm	/^f010389d:	08 00 $/;"	l
f010389f	obj/kern/kernel.asm	/^f010389f:	c6 05 d4 a2 22 f0 00 	movb   $0x0,0xf022a2d4$/;"	l
f01038a6	obj/kern/kernel.asm	/^f01038a6:	c6 05 d5 a2 22 f0 8e 	movb   $0x8e,0xf022a2d5$/;"	l
f01038ad	obj/kern/kernel.asm	/^f01038ad:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01038b0	obj/kern/kernel.asm	/^f01038b0:	66 a3 d6 a2 22 f0    	mov    %ax,0xf022a2d6$/;"	l
f01038b6	obj/kern/kernel.asm	/^f01038b6:	b8 4a 3e 10 f0       	mov    $0xf0103e4a,%eax$/;"	l
f01038bb	obj/kern/kernel.asm	/^f01038bb:	66 a3 e0 a2 22 f0    	mov    %ax,0xf022a2e0$/;"	l
f01038c1	obj/kern/kernel.asm	/^f01038c1:	66 c7 05 e2 a2 22 f0 	movw   $0x8,0xf022a2e2$/;"	l
f01038c8	obj/kern/kernel.asm	/^f01038c8:	08 00 $/;"	l
f01038ca	obj/kern/kernel.asm	/^f01038ca:	c6 05 e4 a2 22 f0 00 	movb   $0x0,0xf022a2e4$/;"	l
f01038d1	obj/kern/kernel.asm	/^f01038d1:	c6 05 e5 a2 22 f0 8e 	movb   $0x8e,0xf022a2e5$/;"	l
f01038d8	obj/kern/kernel.asm	/^f01038d8:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01038db	obj/kern/kernel.asm	/^f01038db:	66 a3 e6 a2 22 f0    	mov    %ax,0xf022a2e6$/;"	l
f01038e1	obj/kern/kernel.asm	/^f01038e1:	b8 50 3e 10 f0       	mov    $0xf0103e50,%eax$/;"	l
f01038e6	obj/kern/kernel.asm	/^f01038e6:	66 a3 e8 a2 22 f0    	mov    %ax,0xf022a2e8$/;"	l
f01038ec	obj/kern/kernel.asm	/^f01038ec:	66 c7 05 ea a2 22 f0 	movw   $0x8,0xf022a2ea$/;"	l
f01038f3	obj/kern/kernel.asm	/^f01038f3:	08 00 $/;"	l
f01038f5	obj/kern/kernel.asm	/^f01038f5:	c6 05 ec a2 22 f0 00 	movb   $0x0,0xf022a2ec$/;"	l
f01038fc	obj/kern/kernel.asm	/^f01038fc:	c6 05 ed a2 22 f0 8e 	movb   $0x8e,0xf022a2ed$/;"	l
f0103903	obj/kern/kernel.asm	/^f0103903:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103906	obj/kern/kernel.asm	/^f0103906:	66 a3 ee a2 22 f0    	mov    %ax,0xf022a2ee$/;"	l
f010390c	obj/kern/kernel.asm	/^f010390c:	b8 54 3e 10 f0       	mov    $0xf0103e54,%eax$/;"	l
f0103911	obj/kern/kernel.asm	/^f0103911:	66 a3 f0 a2 22 f0    	mov    %ax,0xf022a2f0$/;"	l
f0103917	obj/kern/kernel.asm	/^f0103917:	66 c7 05 f2 a2 22 f0 	movw   $0x8,0xf022a2f2$/;"	l
f010391e	obj/kern/kernel.asm	/^f010391e:	08 00 $/;"	l
f0103920	obj/kern/kernel.asm	/^f0103920:	c6 05 f4 a2 22 f0 00 	movb   $0x0,0xf022a2f4$/;"	l
f0103927	obj/kern/kernel.asm	/^f0103927:	c6 05 f5 a2 22 f0 8e 	movb   $0x8e,0xf022a2f5$/;"	l
f010392e	obj/kern/kernel.asm	/^f010392e:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103931	obj/kern/kernel.asm	/^f0103931:	66 a3 f6 a2 22 f0    	mov    %ax,0xf022a2f6$/;"	l
f0103937	obj/kern/kernel.asm	/^f0103937:	b8 5a 3e 10 f0       	mov    $0xf0103e5a,%eax$/;"	l
f010393c	obj/kern/kernel.asm	/^f010393c:	66 a3 f8 a2 22 f0    	mov    %ax,0xf022a2f8$/;"	l
f0103942	obj/kern/kernel.asm	/^f0103942:	66 c7 05 fa a2 22 f0 	movw   $0x8,0xf022a2fa$/;"	l
f0103949	obj/kern/kernel.asm	/^f0103949:	08 00 $/;"	l
f010394b	obj/kern/kernel.asm	/^f010394b:	c6 05 fc a2 22 f0 00 	movb   $0x0,0xf022a2fc$/;"	l
f0103952	obj/kern/kernel.asm	/^f0103952:	c6 05 fd a2 22 f0 8e 	movb   $0x8e,0xf022a2fd$/;"	l
f0103959	obj/kern/kernel.asm	/^f0103959:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010395c	obj/kern/kernel.asm	/^f010395c:	66 a3 fe a2 22 f0    	mov    %ax,0xf022a2fe$/;"	l
f0103962	obj/kern/kernel.asm	/^f0103962:	b8 60 3e 10 f0       	mov    $0xf0103e60,%eax$/;"	l
f0103967	obj/kern/kernel.asm	/^f0103967:	66 a3 e0 a3 22 f0    	mov    %ax,0xf022a3e0$/;"	l
f010396d	obj/kern/kernel.asm	/^f010396d:	66 c7 05 e2 a3 22 f0 	movw   $0x8,0xf022a3e2$/;"	l
f0103974	obj/kern/kernel.asm	/^f0103974:	08 00 $/;"	l
f0103976	obj/kern/kernel.asm	/^f0103976:	c6 05 e4 a3 22 f0 00 	movb   $0x0,0xf022a3e4$/;"	l
f010397d	obj/kern/kernel.asm	/^f010397d:	c6 05 e5 a3 22 f0 ef 	movb   $0xef,0xf022a3e5$/;"	l
f0103984	obj/kern/kernel.asm	/^f0103984:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103987	obj/kern/kernel.asm	/^f0103987:	66 a3 e6 a3 22 f0    	mov    %ax,0xf022a3e6$/;"	l
f010398d	obj/kern/kernel.asm	/^f010398d:	e8 6a fc ff ff       	call   f01035fc <trap_init_percpu>$/;"	l
f0103992	obj/kern/kernel.asm	/^f0103992:	5d                   	pop    %ebp$/;"	l
f0103993	obj/kern/kernel.asm	/^f0103993:	c3                   	ret    $/;"	l
f0103994	obj/kern/kernel.asm	/^f0103994 <print_regs>:$/;"	l
f0103994	obj/kern/kernel.asm	/^f0103994:	55                   	push   %ebp$/;"	l
f0103995	obj/kern/kernel.asm	/^f0103995:	89 e5                	mov    %esp,%ebp$/;"	l
f0103997	obj/kern/kernel.asm	/^f0103997:	53                   	push   %ebx$/;"	l
f0103998	obj/kern/kernel.asm	/^f0103998:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010399b	obj/kern/kernel.asm	/^f010399b:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010399e	obj/kern/kernel.asm	/^f010399e:	ff 33                	pushl  (%ebx)$/;"	l
f01039a0	obj/kern/kernel.asm	/^f01039a0:	68 64 6b 10 f0       	push   $0xf0106b64$/;"	l
f01039a5	obj/kern/kernel.asm	/^f01039a5:	e8 3e fc ff ff       	call   f01035e8 <cprintf>$/;"	l
f01039aa	obj/kern/kernel.asm	/^f01039aa:	83 c4 08             	add    $0x8,%esp$/;"	l
f01039ad	obj/kern/kernel.asm	/^f01039ad:	ff 73 04             	pushl  0x4(%ebx)$/;"	l
f01039b0	obj/kern/kernel.asm	/^f01039b0:	68 73 6b 10 f0       	push   $0xf0106b73$/;"	l
f01039b5	obj/kern/kernel.asm	/^f01039b5:	e8 2e fc ff ff       	call   f01035e8 <cprintf>$/;"	l
f01039ba	obj/kern/kernel.asm	/^f01039ba:	83 c4 08             	add    $0x8,%esp$/;"	l
f01039bd	obj/kern/kernel.asm	/^f01039bd:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f01039c0	obj/kern/kernel.asm	/^f01039c0:	68 82 6b 10 f0       	push   $0xf0106b82$/;"	l
f01039c5	obj/kern/kernel.asm	/^f01039c5:	e8 1e fc ff ff       	call   f01035e8 <cprintf>$/;"	l
f01039ca	obj/kern/kernel.asm	/^f01039ca:	83 c4 08             	add    $0x8,%esp$/;"	l
f01039cd	obj/kern/kernel.asm	/^f01039cd:	ff 73 0c             	pushl  0xc(%ebx)$/;"	l
f01039d0	obj/kern/kernel.asm	/^f01039d0:	68 91 6b 10 f0       	push   $0xf0106b91$/;"	l
f01039d5	obj/kern/kernel.asm	/^f01039d5:	e8 0e fc ff ff       	call   f01035e8 <cprintf>$/;"	l
f01039da	obj/kern/kernel.asm	/^f01039da:	83 c4 08             	add    $0x8,%esp$/;"	l
f01039dd	obj/kern/kernel.asm	/^f01039dd:	ff 73 10             	pushl  0x10(%ebx)$/;"	l
f01039e0	obj/kern/kernel.asm	/^f01039e0:	68 a0 6b 10 f0       	push   $0xf0106ba0$/;"	l
f01039e5	obj/kern/kernel.asm	/^f01039e5:	e8 fe fb ff ff       	call   f01035e8 <cprintf>$/;"	l
f01039ea	obj/kern/kernel.asm	/^f01039ea:	83 c4 08             	add    $0x8,%esp$/;"	l
f01039ed	obj/kern/kernel.asm	/^f01039ed:	ff 73 14             	pushl  0x14(%ebx)$/;"	l
f01039f0	obj/kern/kernel.asm	/^f01039f0:	68 af 6b 10 f0       	push   $0xf0106baf$/;"	l
f01039f5	obj/kern/kernel.asm	/^f01039f5:	e8 ee fb ff ff       	call   f01035e8 <cprintf>$/;"	l
f01039fa	obj/kern/kernel.asm	/^f01039fa:	83 c4 08             	add    $0x8,%esp$/;"	l
f01039fd	obj/kern/kernel.asm	/^f01039fd:	ff 73 18             	pushl  0x18(%ebx)$/;"	l
f0103a00	obj/kern/kernel.asm	/^f0103a00:	68 be 6b 10 f0       	push   $0xf0106bbe$/;"	l
f0103a05	obj/kern/kernel.asm	/^f0103a05:	e8 de fb ff ff       	call   f01035e8 <cprintf>$/;"	l
f0103a0a	obj/kern/kernel.asm	/^f0103a0a:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103a0d	obj/kern/kernel.asm	/^f0103a0d:	ff 73 1c             	pushl  0x1c(%ebx)$/;"	l
f0103a10	obj/kern/kernel.asm	/^f0103a10:	68 cd 6b 10 f0       	push   $0xf0106bcd$/;"	l
f0103a15	obj/kern/kernel.asm	/^f0103a15:	e8 ce fb ff ff       	call   f01035e8 <cprintf>$/;"	l
f0103a1a	obj/kern/kernel.asm	/^f0103a1a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103a1d	obj/kern/kernel.asm	/^f0103a1d:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0103a20	obj/kern/kernel.asm	/^f0103a20:	c9                   	leave  $/;"	l
f0103a21	obj/kern/kernel.asm	/^f0103a21:	c3                   	ret    $/;"	l
f0103a22	obj/kern/kernel.asm	/^f0103a22 <print_trapframe>:$/;"	l
f0103a22	obj/kern/kernel.asm	/^f0103a22:	55                   	push   %ebp$/;"	l
f0103a23	obj/kern/kernel.asm	/^f0103a23:	89 e5                	mov    %esp,%ebp$/;"	l
f0103a25	obj/kern/kernel.asm	/^f0103a25:	56                   	push   %esi$/;"	l
f0103a26	obj/kern/kernel.asm	/^f0103a26:	53                   	push   %ebx$/;"	l
f0103a27	obj/kern/kernel.asm	/^f0103a27:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103a2a	obj/kern/kernel.asm	/^f0103a2a:	e8 c3 17 00 00       	call   f01051f2 <cpunum>$/;"	l
f0103a2f	obj/kern/kernel.asm	/^f0103a2f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103a32	obj/kern/kernel.asm	/^f0103a32:	50                   	push   %eax$/;"	l
f0103a33	obj/kern/kernel.asm	/^f0103a33:	53                   	push   %ebx$/;"	l
f0103a34	obj/kern/kernel.asm	/^f0103a34:	68 31 6c 10 f0       	push   $0xf0106c31$/;"	l
f0103a39	obj/kern/kernel.asm	/^f0103a39:	e8 aa fb ff ff       	call   f01035e8 <cprintf>$/;"	l
f0103a3e	obj/kern/kernel.asm	/^f0103a3e:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103a41	obj/kern/kernel.asm	/^f0103a41:	e8 4e ff ff ff       	call   f0103994 <print_regs>$/;"	l
f0103a46	obj/kern/kernel.asm	/^f0103a46:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103a49	obj/kern/kernel.asm	/^f0103a49:	0f b7 43 20          	movzwl 0x20(%ebx),%eax$/;"	l
f0103a4d	obj/kern/kernel.asm	/^f0103a4d:	50                   	push   %eax$/;"	l
f0103a4e	obj/kern/kernel.asm	/^f0103a4e:	68 4f 6c 10 f0       	push   $0xf0106c4f$/;"	l
f0103a53	obj/kern/kernel.asm	/^f0103a53:	e8 90 fb ff ff       	call   f01035e8 <cprintf>$/;"	l
f0103a58	obj/kern/kernel.asm	/^f0103a58:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103a5b	obj/kern/kernel.asm	/^f0103a5b:	0f b7 43 24          	movzwl 0x24(%ebx),%eax$/;"	l
f0103a5f	obj/kern/kernel.asm	/^f0103a5f:	50                   	push   %eax$/;"	l
f0103a60	obj/kern/kernel.asm	/^f0103a60:	68 62 6c 10 f0       	push   $0xf0106c62$/;"	l
f0103a65	obj/kern/kernel.asm	/^f0103a65:	e8 7e fb ff ff       	call   f01035e8 <cprintf>$/;"	l
f0103a6a	obj/kern/kernel.asm	/^f0103a6a:	8b 43 28             	mov    0x28(%ebx),%eax$/;"	l
f0103a6d	obj/kern/kernel.asm	/^f0103a6d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103a70	obj/kern/kernel.asm	/^f0103a70:	83 f8 13             	cmp    $0x13,%eax$/;"	l
f0103a73	obj/kern/kernel.asm	/^f0103a73:	77 09                	ja     f0103a7e <print_trapframe+0x5c>$/;"	l
f0103a75	obj/kern/kernel.asm	/^f0103a75:	8b 14 85 e0 6e 10 f0 	mov    -0xfef9120(,%eax,4),%edx$/;"	l
f0103a7c	obj/kern/kernel.asm	/^f0103a7c:	eb 1f                	jmp    f0103a9d <print_trapframe+0x7b>$/;"	l
f0103a7e	obj/kern/kernel.asm	/^f0103a7e:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f0103a81	obj/kern/kernel.asm	/^f0103a81:	74 15                	je     f0103a98 <print_trapframe+0x76>$/;"	l
f0103a83	obj/kern/kernel.asm	/^f0103a83:	8d 50 e0             	lea    -0x20(%eax),%edx$/;"	l
f0103a86	obj/kern/kernel.asm	/^f0103a86:	83 fa 10             	cmp    $0x10,%edx$/;"	l
f0103a89	obj/kern/kernel.asm	/^f0103a89:	b9 fb 6b 10 f0       	mov    $0xf0106bfb,%ecx$/;"	l
f0103a8e	obj/kern/kernel.asm	/^f0103a8e:	ba e8 6b 10 f0       	mov    $0xf0106be8,%edx$/;"	l
f0103a93	obj/kern/kernel.asm	/^f0103a93:	0f 43 d1             	cmovae %ecx,%edx$/;"	l
f0103a96	obj/kern/kernel.asm	/^f0103a96:	eb 05                	jmp    f0103a9d <print_trapframe+0x7b>$/;"	l
f0103a98	obj/kern/kernel.asm	/^f0103a98:	ba dc 6b 10 f0       	mov    $0xf0106bdc,%edx$/;"	l
f0103a9d	obj/kern/kernel.asm	/^f0103a9d:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103aa0	obj/kern/kernel.asm	/^f0103aa0:	52                   	push   %edx$/;"	l
f0103aa1	obj/kern/kernel.asm	/^f0103aa1:	50                   	push   %eax$/;"	l
f0103aa2	obj/kern/kernel.asm	/^f0103aa2:	68 75 6c 10 f0       	push   $0xf0106c75$/;"	l
f0103aa7	obj/kern/kernel.asm	/^f0103aa7:	e8 3c fb ff ff       	call   f01035e8 <cprintf>$/;"	l
f0103aac	obj/kern/kernel.asm	/^f0103aac:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103aaf	obj/kern/kernel.asm	/^f0103aaf:	3b 1d 60 aa 22 f0    	cmp    0xf022aa60,%ebx$/;"	l
f0103ab5	obj/kern/kernel.asm	/^f0103ab5:	75 1a                	jne    f0103ad1 <print_trapframe+0xaf>$/;"	l
f0103ab7	obj/kern/kernel.asm	/^f0103ab7:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f0103abb	obj/kern/kernel.asm	/^f0103abb:	75 14                	jne    f0103ad1 <print_trapframe+0xaf>$/;"	l
f0103abd	obj/kern/kernel.asm	/^f0103abd:	0f 20 d0             	mov    %cr2,%eax$/;"	l
f0103ac0	obj/kern/kernel.asm	/^f0103ac0:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103ac3	obj/kern/kernel.asm	/^f0103ac3:	50                   	push   %eax$/;"	l
f0103ac4	obj/kern/kernel.asm	/^f0103ac4:	68 87 6c 10 f0       	push   $0xf0106c87$/;"	l
f0103ac9	obj/kern/kernel.asm	/^f0103ac9:	e8 1a fb ff ff       	call   f01035e8 <cprintf>$/;"	l
f0103ace	obj/kern/kernel.asm	/^f0103ace:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103ad1	obj/kern/kernel.asm	/^f0103ad1:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103ad4	obj/kern/kernel.asm	/^f0103ad4:	ff 73 2c             	pushl  0x2c(%ebx)$/;"	l
f0103ad7	obj/kern/kernel.asm	/^f0103ad7:	68 96 6c 10 f0       	push   $0xf0106c96$/;"	l
f0103adc	obj/kern/kernel.asm	/^f0103adc:	e8 07 fb ff ff       	call   f01035e8 <cprintf>$/;"	l
f0103ae1	obj/kern/kernel.asm	/^f0103ae1:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103ae4	obj/kern/kernel.asm	/^f0103ae4:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f0103ae8	obj/kern/kernel.asm	/^f0103ae8:	75 49                	jne    f0103b33 <print_trapframe+0x111>$/;"	l
f0103aea	obj/kern/kernel.asm	/^f0103aea:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f0103aed	obj/kern/kernel.asm	/^f0103aed:	89 c2                	mov    %eax,%edx$/;"	l
f0103aef	obj/kern/kernel.asm	/^f0103aef:	83 e2 01             	and    $0x1,%edx$/;"	l
f0103af2	obj/kern/kernel.asm	/^f0103af2:	ba 15 6c 10 f0       	mov    $0xf0106c15,%edx$/;"	l
f0103af7	obj/kern/kernel.asm	/^f0103af7:	b9 0a 6c 10 f0       	mov    $0xf0106c0a,%ecx$/;"	l
f0103afc	obj/kern/kernel.asm	/^f0103afc:	0f 44 ca             	cmove  %edx,%ecx$/;"	l
f0103aff	obj/kern/kernel.asm	/^f0103aff:	89 c2                	mov    %eax,%edx$/;"	l
f0103b01	obj/kern/kernel.asm	/^f0103b01:	83 e2 02             	and    $0x2,%edx$/;"	l
f0103b04	obj/kern/kernel.asm	/^f0103b04:	ba 27 6c 10 f0       	mov    $0xf0106c27,%edx$/;"	l
f0103b09	obj/kern/kernel.asm	/^f0103b09:	be 21 6c 10 f0       	mov    $0xf0106c21,%esi$/;"	l
f0103b0e	obj/kern/kernel.asm	/^f0103b0e:	0f 45 d6             	cmovne %esi,%edx$/;"	l
f0103b11	obj/kern/kernel.asm	/^f0103b11:	83 e0 04             	and    $0x4,%eax$/;"	l
f0103b14	obj/kern/kernel.asm	/^f0103b14:	be 61 6d 10 f0       	mov    $0xf0106d61,%esi$/;"	l
f0103b19	obj/kern/kernel.asm	/^f0103b19:	b8 2c 6c 10 f0       	mov    $0xf0106c2c,%eax$/;"	l
f0103b1e	obj/kern/kernel.asm	/^f0103b1e:	0f 44 c6             	cmove  %esi,%eax$/;"	l
f0103b21	obj/kern/kernel.asm	/^f0103b21:	51                   	push   %ecx$/;"	l
f0103b22	obj/kern/kernel.asm	/^f0103b22:	52                   	push   %edx$/;"	l
f0103b23	obj/kern/kernel.asm	/^f0103b23:	50                   	push   %eax$/;"	l
f0103b24	obj/kern/kernel.asm	/^f0103b24:	68 a4 6c 10 f0       	push   $0xf0106ca4$/;"	l
f0103b29	obj/kern/kernel.asm	/^f0103b29:	e8 ba fa ff ff       	call   f01035e8 <cprintf>$/;"	l
f0103b2e	obj/kern/kernel.asm	/^f0103b2e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103b31	obj/kern/kernel.asm	/^f0103b31:	eb 10                	jmp    f0103b43 <print_trapframe+0x121>$/;"	l
f0103b33	obj/kern/kernel.asm	/^f0103b33:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103b36	obj/kern/kernel.asm	/^f0103b36:	68 19 5c 10 f0       	push   $0xf0105c19$/;"	l
f0103b3b	obj/kern/kernel.asm	/^f0103b3b:	e8 a8 fa ff ff       	call   f01035e8 <cprintf>$/;"	l
f0103b40	obj/kern/kernel.asm	/^f0103b40:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103b43	obj/kern/kernel.asm	/^f0103b43:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103b46	obj/kern/kernel.asm	/^f0103b46:	ff 73 30             	pushl  0x30(%ebx)$/;"	l
f0103b49	obj/kern/kernel.asm	/^f0103b49:	68 b3 6c 10 f0       	push   $0xf0106cb3$/;"	l
f0103b4e	obj/kern/kernel.asm	/^f0103b4e:	e8 95 fa ff ff       	call   f01035e8 <cprintf>$/;"	l
f0103b53	obj/kern/kernel.asm	/^f0103b53:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103b56	obj/kern/kernel.asm	/^f0103b56:	0f b7 43 34          	movzwl 0x34(%ebx),%eax$/;"	l
f0103b5a	obj/kern/kernel.asm	/^f0103b5a:	50                   	push   %eax$/;"	l
f0103b5b	obj/kern/kernel.asm	/^f0103b5b:	68 c2 6c 10 f0       	push   $0xf0106cc2$/;"	l
f0103b60	obj/kern/kernel.asm	/^f0103b60:	e8 83 fa ff ff       	call   f01035e8 <cprintf>$/;"	l
f0103b65	obj/kern/kernel.asm	/^f0103b65:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103b68	obj/kern/kernel.asm	/^f0103b68:	ff 73 38             	pushl  0x38(%ebx)$/;"	l
f0103b6b	obj/kern/kernel.asm	/^f0103b6b:	68 d5 6c 10 f0       	push   $0xf0106cd5$/;"	l
f0103b70	obj/kern/kernel.asm	/^f0103b70:	e8 73 fa ff ff       	call   f01035e8 <cprintf>$/;"	l
f0103b75	obj/kern/kernel.asm	/^f0103b75:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103b78	obj/kern/kernel.asm	/^f0103b78:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f0103b7c	obj/kern/kernel.asm	/^f0103b7c:	74 25                	je     f0103ba3 <print_trapframe+0x181>$/;"	l
f0103b7e	obj/kern/kernel.asm	/^f0103b7e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103b81	obj/kern/kernel.asm	/^f0103b81:	ff 73 3c             	pushl  0x3c(%ebx)$/;"	l
f0103b84	obj/kern/kernel.asm	/^f0103b84:	68 e4 6c 10 f0       	push   $0xf0106ce4$/;"	l
f0103b89	obj/kern/kernel.asm	/^f0103b89:	e8 5a fa ff ff       	call   f01035e8 <cprintf>$/;"	l
f0103b8e	obj/kern/kernel.asm	/^f0103b8e:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103b91	obj/kern/kernel.asm	/^f0103b91:	0f b7 43 40          	movzwl 0x40(%ebx),%eax$/;"	l
f0103b95	obj/kern/kernel.asm	/^f0103b95:	50                   	push   %eax$/;"	l
f0103b96	obj/kern/kernel.asm	/^f0103b96:	68 f3 6c 10 f0       	push   $0xf0106cf3$/;"	l
f0103b9b	obj/kern/kernel.asm	/^f0103b9b:	e8 48 fa ff ff       	call   f01035e8 <cprintf>$/;"	l
f0103ba0	obj/kern/kernel.asm	/^f0103ba0:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103ba3	obj/kern/kernel.asm	/^f0103ba3:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0103ba6	obj/kern/kernel.asm	/^f0103ba6:	5b                   	pop    %ebx$/;"	l
f0103ba7	obj/kern/kernel.asm	/^f0103ba7:	5e                   	pop    %esi$/;"	l
f0103ba8	obj/kern/kernel.asm	/^f0103ba8:	5d                   	pop    %ebp$/;"	l
f0103ba9	obj/kern/kernel.asm	/^f0103ba9:	c3                   	ret    $/;"	l
f0103baa	obj/kern/kernel.asm	/^f0103baa <page_fault_handler>:$/;"	l
f0103baa	obj/kern/kernel.asm	/^f0103baa:	55                   	push   %ebp$/;"	l
f0103bab	obj/kern/kernel.asm	/^f0103bab:	89 e5                	mov    %esp,%ebp$/;"	l
f0103bad	obj/kern/kernel.asm	/^f0103bad:	57                   	push   %edi$/;"	l
f0103bae	obj/kern/kernel.asm	/^f0103bae:	56                   	push   %esi$/;"	l
f0103baf	obj/kern/kernel.asm	/^f0103baf:	53                   	push   %ebx$/;"	l
f0103bb0	obj/kern/kernel.asm	/^f0103bb0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103bb3	obj/kern/kernel.asm	/^f0103bb3:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103bb6	obj/kern/kernel.asm	/^f0103bb6:	0f 20 d6             	mov    %cr2,%esi$/;"	l
f0103bb9	obj/kern/kernel.asm	/^f0103bb9:	8b 7b 30             	mov    0x30(%ebx),%edi$/;"	l
f0103bbc	obj/kern/kernel.asm	/^f0103bbc:	e8 31 16 00 00       	call   f01051f2 <cpunum>$/;"	l
f0103bc1	obj/kern/kernel.asm	/^f0103bc1:	57                   	push   %edi$/;"	l
f0103bc2	obj/kern/kernel.asm	/^f0103bc2:	56                   	push   %esi$/;"	l
f0103bc3	obj/kern/kernel.asm	/^f0103bc3:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103bc6	obj/kern/kernel.asm	/^f0103bc6:	8b 80 28 b0 22 f0    	mov    -0xfdd4fd8(%eax),%eax$/;"	l
f0103bcc	obj/kern/kernel.asm	/^f0103bcc:	ff 70 48             	pushl  0x48(%eax)$/;"	l
f0103bcf	obj/kern/kernel.asm	/^f0103bcf:	68 ac 6e 10 f0       	push   $0xf0106eac$/;"	l
f0103bd4	obj/kern/kernel.asm	/^f0103bd4:	e8 0f fa ff ff       	call   f01035e8 <cprintf>$/;"	l
f0103bd9	obj/kern/kernel.asm	/^f0103bd9:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103bdc	obj/kern/kernel.asm	/^f0103bdc:	e8 41 fe ff ff       	call   f0103a22 <print_trapframe>$/;"	l
f0103be1	obj/kern/kernel.asm	/^f0103be1:	e8 0c 16 00 00       	call   f01051f2 <cpunum>$/;"	l
f0103be6	obj/kern/kernel.asm	/^f0103be6:	83 c4 04             	add    $0x4,%esp$/;"	l
f0103be9	obj/kern/kernel.asm	/^f0103be9:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103bec	obj/kern/kernel.asm	/^f0103bec:	ff b0 28 b0 22 f0    	pushl  -0xfdd4fd8(%eax)$/;"	l
f0103bf2	obj/kern/kernel.asm	/^f0103bf2:	e8 46 f7 ff ff       	call   f010333d <env_destroy>$/;"	l
f0103bf7	obj/kern/kernel.asm	/^f0103bf7:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103bfa	obj/kern/kernel.asm	/^f0103bfa:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0103bfd	obj/kern/kernel.asm	/^f0103bfd:	5b                   	pop    %ebx$/;"	l
f0103bfe	obj/kern/kernel.asm	/^f0103bfe:	5e                   	pop    %esi$/;"	l
f0103bff	obj/kern/kernel.asm	/^f0103bff:	5f                   	pop    %edi$/;"	l
f0103c00	obj/kern/kernel.asm	/^f0103c00:	5d                   	pop    %ebp$/;"	l
f0103c01	obj/kern/kernel.asm	/^f0103c01:	c3                   	ret    $/;"	l
f0103c02	obj/kern/kernel.asm	/^f0103c02 <trap>:$/;"	l
f0103c02	obj/kern/kernel.asm	/^f0103c02:	55                   	push   %ebp$/;"	l
f0103c03	obj/kern/kernel.asm	/^f0103c03:	89 e5                	mov    %esp,%ebp$/;"	l
f0103c05	obj/kern/kernel.asm	/^f0103c05:	57                   	push   %edi$/;"	l
f0103c06	obj/kern/kernel.asm	/^f0103c06:	56                   	push   %esi$/;"	l
f0103c07	obj/kern/kernel.asm	/^f0103c07:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0103c0a	obj/kern/kernel.asm	/^f0103c0a:	fc                   	cld    $/;"	l
f0103c0b	obj/kern/kernel.asm	/^f0103c0b:	83 3d 00 af 22 f0 00 	cmpl   $0x0,0xf022af00$/;"	l
f0103c12	obj/kern/kernel.asm	/^f0103c12:	74 01                	je     f0103c15 <trap+0x13>$/;"	l
f0103c14	obj/kern/kernel.asm	/^f0103c14:	f4                   	hlt    $/;"	l
f0103c15	obj/kern/kernel.asm	/^f0103c15:	e8 d8 15 00 00       	call   f01051f2 <cpunum>$/;"	l
f0103c1a	obj/kern/kernel.asm	/^f0103c1a:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0103c1d	obj/kern/kernel.asm	/^f0103c1d:	81 c2 20 b0 22 f0    	add    $0xf022b020,%edx$/;"	l
f0103c23	obj/kern/kernel.asm	/^f0103c23:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0103c28	obj/kern/kernel.asm	/^f0103c28:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f0103c2c	obj/kern/kernel.asm	/^f0103c2c:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f0103c2f	obj/kern/kernel.asm	/^f0103c2f:	75 10                	jne    f0103c41 <trap+0x3f>$/;"	l
f0103c31	obj/kern/kernel.asm	/^f0103c31:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103c34	obj/kern/kernel.asm	/^f0103c34:	68 c0 f3 11 f0       	push   $0xf011f3c0$/;"	l
f0103c39	obj/kern/kernel.asm	/^f0103c39:	e8 22 18 00 00       	call   f0105460 <spin_lock>$/;"	l
f0103c3e	obj/kern/kernel.asm	/^f0103c3e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103c41	obj/kern/kernel.asm	/^f0103c41:	9c                   	pushf  $/;"	l
f0103c42	obj/kern/kernel.asm	/^f0103c42:	58                   	pop    %eax$/;"	l
f0103c43	obj/kern/kernel.asm	/^f0103c43:	f6 c4 02             	test   $0x2,%ah$/;"	l
f0103c46	obj/kern/kernel.asm	/^f0103c46:	74 19                	je     f0103c61 <trap+0x5f>$/;"	l
f0103c48	obj/kern/kernel.asm	/^f0103c48:	68 06 6d 10 f0       	push   $0xf0106d06$/;"	l
f0103c4d	obj/kern/kernel.asm	/^f0103c4d:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0103c52	obj/kern/kernel.asm	/^f0103c52:	68 13 01 00 00       	push   $0x113$/;"	l
f0103c57	obj/kern/kernel.asm	/^f0103c57:	68 1f 6d 10 f0       	push   $0xf0106d1f$/;"	l
f0103c5c	obj/kern/kernel.asm	/^f0103c5c:	e8 df c3 ff ff       	call   f0100040 <_panic>$/;"	l
f0103c61	obj/kern/kernel.asm	/^f0103c61:	0f b7 46 34          	movzwl 0x34(%esi),%eax$/;"	l
f0103c65	obj/kern/kernel.asm	/^f0103c65:	83 e0 03             	and    $0x3,%eax$/;"	l
f0103c68	obj/kern/kernel.asm	/^f0103c68:	66 83 f8 03          	cmp    $0x3,%ax$/;"	l
f0103c6c	obj/kern/kernel.asm	/^f0103c6c:	0f 85 90 00 00 00    	jne    f0103d02 <trap+0x100>$/;"	l
f0103c72	obj/kern/kernel.asm	/^f0103c72:	e8 7b 15 00 00       	call   f01051f2 <cpunum>$/;"	l
f0103c77	obj/kern/kernel.asm	/^f0103c77:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103c7a	obj/kern/kernel.asm	/^f0103c7a:	83 b8 28 b0 22 f0 00 	cmpl   $0x0,-0xfdd4fd8(%eax)$/;"	l
f0103c81	obj/kern/kernel.asm	/^f0103c81:	75 19                	jne    f0103c9c <trap+0x9a>$/;"	l
f0103c83	obj/kern/kernel.asm	/^f0103c83:	68 2b 6d 10 f0       	push   $0xf0106d2b$/;"	l
f0103c88	obj/kern/kernel.asm	/^f0103c88:	68 92 67 10 f0       	push   $0xf0106792$/;"	l
f0103c8d	obj/kern/kernel.asm	/^f0103c8d:	68 1a 01 00 00       	push   $0x11a$/;"	l
f0103c92	obj/kern/kernel.asm	/^f0103c92:	68 1f 6d 10 f0       	push   $0xf0106d1f$/;"	l
f0103c97	obj/kern/kernel.asm	/^f0103c97:	e8 a4 c3 ff ff       	call   f0100040 <_panic>$/;"	l
f0103c9c	obj/kern/kernel.asm	/^f0103c9c:	e8 51 15 00 00       	call   f01051f2 <cpunum>$/;"	l
f0103ca1	obj/kern/kernel.asm	/^f0103ca1:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103ca4	obj/kern/kernel.asm	/^f0103ca4:	8b 80 28 b0 22 f0    	mov    -0xfdd4fd8(%eax),%eax$/;"	l
f0103caa	obj/kern/kernel.asm	/^f0103caa:	83 78 54 01          	cmpl   $0x1,0x54(%eax)$/;"	l
f0103cae	obj/kern/kernel.asm	/^f0103cae:	75 2d                	jne    f0103cdd <trap+0xdb>$/;"	l
f0103cb0	obj/kern/kernel.asm	/^f0103cb0:	e8 3d 15 00 00       	call   f01051f2 <cpunum>$/;"	l
f0103cb5	obj/kern/kernel.asm	/^f0103cb5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103cb8	obj/kern/kernel.asm	/^f0103cb8:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103cbb	obj/kern/kernel.asm	/^f0103cbb:	ff b0 28 b0 22 f0    	pushl  -0xfdd4fd8(%eax)$/;"	l
f0103cc1	obj/kern/kernel.asm	/^f0103cc1:	e8 9c f4 ff ff       	call   f0103162 <env_free>$/;"	l
f0103cc6	obj/kern/kernel.asm	/^f0103cc6:	e8 27 15 00 00       	call   f01051f2 <cpunum>$/;"	l
f0103ccb	obj/kern/kernel.asm	/^f0103ccb:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103cce	obj/kern/kernel.asm	/^f0103cce:	c7 80 28 b0 22 f0 00 	movl   $0x0,-0xfdd4fd8(%eax)$/;"	l
f0103cd5	obj/kern/kernel.asm	/^f0103cd5:	00 00 00 $/;"	l
f0103cd8	obj/kern/kernel.asm	/^f0103cd8:	e8 6e 02 00 00       	call   f0103f4b <sched_yield>$/;"	l
f0103cdd	obj/kern/kernel.asm	/^f0103cdd:	e8 10 15 00 00       	call   f01051f2 <cpunum>$/;"	l
f0103ce2	obj/kern/kernel.asm	/^f0103ce2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103ce5	obj/kern/kernel.asm	/^f0103ce5:	8b 80 28 b0 22 f0    	mov    -0xfdd4fd8(%eax),%eax$/;"	l
f0103ceb	obj/kern/kernel.asm	/^f0103ceb:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f0103cf0	obj/kern/kernel.asm	/^f0103cf0:	89 c7                	mov    %eax,%edi$/;"	l
f0103cf2	obj/kern/kernel.asm	/^f0103cf2:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0103cf4	obj/kern/kernel.asm	/^f0103cf4:	e8 f9 14 00 00       	call   f01051f2 <cpunum>$/;"	l
f0103cf9	obj/kern/kernel.asm	/^f0103cf9:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103cfc	obj/kern/kernel.asm	/^f0103cfc:	8b b0 28 b0 22 f0    	mov    -0xfdd4fd8(%eax),%esi$/;"	l
f0103d02	obj/kern/kernel.asm	/^f0103d02:	89 35 60 aa 22 f0    	mov    %esi,0xf022aa60$/;"	l
f0103d08	obj/kern/kernel.asm	/^f0103d08:	8b 46 28             	mov    0x28(%esi),%eax$/;"	l
f0103d0b	obj/kern/kernel.asm	/^f0103d0b:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
f0103d0e	obj/kern/kernel.asm	/^f0103d0e:	74 0c                	je     f0103d1c <trap+0x11a>$/;"	l
f0103d10	obj/kern/kernel.asm	/^f0103d10:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f0103d13	obj/kern/kernel.asm	/^f0103d13:	74 29                	je     f0103d3e <trap+0x13c>$/;"	l
f0103d15	obj/kern/kernel.asm	/^f0103d15:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0103d18	obj/kern/kernel.asm	/^f0103d18:	75 45                	jne    f0103d5f <trap+0x15d>$/;"	l
f0103d1a	obj/kern/kernel.asm	/^f0103d1a:	eb 11                	jmp    f0103d2d <trap+0x12b>$/;"	l
f0103d1c	obj/kern/kernel.asm	/^f0103d1c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103d1f	obj/kern/kernel.asm	/^f0103d1f:	56                   	push   %esi$/;"	l
f0103d20	obj/kern/kernel.asm	/^f0103d20:	e8 85 fe ff ff       	call   f0103baa <page_fault_handler>$/;"	l
f0103d25	obj/kern/kernel.asm	/^f0103d25:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103d28	obj/kern/kernel.asm	/^f0103d28:	e9 94 00 00 00       	jmp    f0103dc1 <trap+0x1bf>$/;"	l
f0103d2d	obj/kern/kernel.asm	/^f0103d2d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103d30	obj/kern/kernel.asm	/^f0103d30:	56                   	push   %esi$/;"	l
f0103d31	obj/kern/kernel.asm	/^f0103d31:	e8 b7 cb ff ff       	call   f01008ed <monitor>$/;"	l
f0103d36	obj/kern/kernel.asm	/^f0103d36:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103d39	obj/kern/kernel.asm	/^f0103d39:	e9 83 00 00 00       	jmp    f0103dc1 <trap+0x1bf>$/;"	l
f0103d3e	obj/kern/kernel.asm	/^f0103d3e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103d41	obj/kern/kernel.asm	/^f0103d41:	ff 76 04             	pushl  0x4(%esi)$/;"	l
f0103d44	obj/kern/kernel.asm	/^f0103d44:	ff 36                	pushl  (%esi)$/;"	l
f0103d46	obj/kern/kernel.asm	/^f0103d46:	ff 76 10             	pushl  0x10(%esi)$/;"	l
f0103d49	obj/kern/kernel.asm	/^f0103d49:	ff 76 18             	pushl  0x18(%esi)$/;"	l
f0103d4c	obj/kern/kernel.asm	/^f0103d4c:	ff 76 14             	pushl  0x14(%esi)$/;"	l
f0103d4f	obj/kern/kernel.asm	/^f0103d4f:	ff 76 1c             	pushl  0x1c(%esi)$/;"	l
f0103d52	obj/kern/kernel.asm	/^f0103d52:	e8 01 02 00 00       	call   f0103f58 <syscall>$/;"	l
f0103d57	obj/kern/kernel.asm	/^f0103d57:	89 46 1c             	mov    %eax,0x1c(%esi)$/;"	l
f0103d5a	obj/kern/kernel.asm	/^f0103d5a:	83 c4 20             	add    $0x20,%esp$/;"	l
f0103d5d	obj/kern/kernel.asm	/^f0103d5d:	eb 62                	jmp    f0103dc1 <trap+0x1bf>$/;"	l
f0103d5f	obj/kern/kernel.asm	/^f0103d5f:	83 f8 27             	cmp    $0x27,%eax$/;"	l
f0103d62	obj/kern/kernel.asm	/^f0103d62:	75 1a                	jne    f0103d7e <trap+0x17c>$/;"	l
f0103d64	obj/kern/kernel.asm	/^f0103d64:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103d67	obj/kern/kernel.asm	/^f0103d67:	68 32 6d 10 f0       	push   $0xf0106d32$/;"	l
f0103d6c	obj/kern/kernel.asm	/^f0103d6c:	e8 77 f8 ff ff       	call   f01035e8 <cprintf>$/;"	l
f0103d71	obj/kern/kernel.asm	/^f0103d71:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0103d74	obj/kern/kernel.asm	/^f0103d74:	e8 a9 fc ff ff       	call   f0103a22 <print_trapframe>$/;"	l
f0103d79	obj/kern/kernel.asm	/^f0103d79:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103d7c	obj/kern/kernel.asm	/^f0103d7c:	eb 43                	jmp    f0103dc1 <trap+0x1bf>$/;"	l
f0103d7e	obj/kern/kernel.asm	/^f0103d7e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103d81	obj/kern/kernel.asm	/^f0103d81:	56                   	push   %esi$/;"	l
f0103d82	obj/kern/kernel.asm	/^f0103d82:	e8 9b fc ff ff       	call   f0103a22 <print_trapframe>$/;"	l
f0103d87	obj/kern/kernel.asm	/^f0103d87:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103d8a	obj/kern/kernel.asm	/^f0103d8a:	66 83 7e 34 08       	cmpw   $0x8,0x34(%esi)$/;"	l
f0103d8f	obj/kern/kernel.asm	/^f0103d8f:	75 17                	jne    f0103da8 <trap+0x1a6>$/;"	l
f0103d91	obj/kern/kernel.asm	/^f0103d91:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103d94	obj/kern/kernel.asm	/^f0103d94:	68 4f 6d 10 f0       	push   $0xf0106d4f$/;"	l
f0103d99	obj/kern/kernel.asm	/^f0103d99:	68 f9 00 00 00       	push   $0xf9$/;"	l
f0103d9e	obj/kern/kernel.asm	/^f0103d9e:	68 1f 6d 10 f0       	push   $0xf0106d1f$/;"	l
f0103da3	obj/kern/kernel.asm	/^f0103da3:	e8 98 c2 ff ff       	call   f0100040 <_panic>$/;"	l
f0103da8	obj/kern/kernel.asm	/^f0103da8:	e8 45 14 00 00       	call   f01051f2 <cpunum>$/;"	l
f0103dad	obj/kern/kernel.asm	/^f0103dad:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103db0	obj/kern/kernel.asm	/^f0103db0:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103db3	obj/kern/kernel.asm	/^f0103db3:	ff b0 28 b0 22 f0    	pushl  -0xfdd4fd8(%eax)$/;"	l
f0103db9	obj/kern/kernel.asm	/^f0103db9:	e8 7f f5 ff ff       	call   f010333d <env_destroy>$/;"	l
f0103dbe	obj/kern/kernel.asm	/^f0103dbe:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103dc1	obj/kern/kernel.asm	/^f0103dc1:	e8 2c 14 00 00       	call   f01051f2 <cpunum>$/;"	l
f0103dc6	obj/kern/kernel.asm	/^f0103dc6:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103dc9	obj/kern/kernel.asm	/^f0103dc9:	83 b8 28 b0 22 f0 00 	cmpl   $0x0,-0xfdd4fd8(%eax)$/;"	l
f0103dd0	obj/kern/kernel.asm	/^f0103dd0:	74 2a                	je     f0103dfc <trap+0x1fa>$/;"	l
f0103dd2	obj/kern/kernel.asm	/^f0103dd2:	e8 1b 14 00 00       	call   f01051f2 <cpunum>$/;"	l
f0103dd7	obj/kern/kernel.asm	/^f0103dd7:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103dda	obj/kern/kernel.asm	/^f0103dda:	8b 80 28 b0 22 f0    	mov    -0xfdd4fd8(%eax),%eax$/;"	l
f0103de0	obj/kern/kernel.asm	/^f0103de0:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0103de4	obj/kern/kernel.asm	/^f0103de4:	75 16                	jne    f0103dfc <trap+0x1fa>$/;"	l
f0103de6	obj/kern/kernel.asm	/^f0103de6:	e8 07 14 00 00       	call   f01051f2 <cpunum>$/;"	l
f0103deb	obj/kern/kernel.asm	/^f0103deb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103dee	obj/kern/kernel.asm	/^f0103dee:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103df1	obj/kern/kernel.asm	/^f0103df1:	ff b0 28 b0 22 f0    	pushl  -0xfdd4fd8(%eax)$/;"	l
f0103df7	obj/kern/kernel.asm	/^f0103df7:	e8 e0 f5 ff ff       	call   f01033dc <env_run>$/;"	l
f0103dfc	obj/kern/kernel.asm	/^f0103dfc:	e8 4a 01 00 00       	call   f0103f4b <sched_yield>$/;"	l
f0103e01	obj/kern/kernel.asm	/^f0103e01:	90                   	nop$/;"	l
f0103e02	obj/kern/kernel.asm	/^f0103e02 <TH_DIVIDE>:$/;"	l
f0103e02	obj/kern/kernel.asm	/^f0103e02:	6a 00                	push   $0x0$/;"	l
f0103e04	obj/kern/kernel.asm	/^f0103e04:	6a 00                	push   $0x0$/;"	l
f0103e06	obj/kern/kernel.asm	/^f0103e06:	eb 5e                	jmp    f0103e66 <_alltraps>$/;"	l
f0103e08	obj/kern/kernel.asm	/^f0103e08 <TH_DEBUG>:$/;"	l
f0103e08	obj/kern/kernel.asm	/^f0103e08:	6a 00                	push   $0x0$/;"	l
f0103e0a	obj/kern/kernel.asm	/^f0103e0a:	6a 01                	push   $0x1$/;"	l
f0103e0c	obj/kern/kernel.asm	/^f0103e0c:	eb 58                	jmp    f0103e66 <_alltraps>$/;"	l
f0103e0e	obj/kern/kernel.asm	/^f0103e0e <TH_NMI>:$/;"	l
f0103e0e	obj/kern/kernel.asm	/^f0103e0e:	6a 00                	push   $0x0$/;"	l
f0103e10	obj/kern/kernel.asm	/^f0103e10:	6a 02                	push   $0x2$/;"	l
f0103e12	obj/kern/kernel.asm	/^f0103e12:	eb 52                	jmp    f0103e66 <_alltraps>$/;"	l
f0103e14	obj/kern/kernel.asm	/^f0103e14 <TH_BRKPT>:$/;"	l
f0103e14	obj/kern/kernel.asm	/^f0103e14:	6a 00                	push   $0x0$/;"	l
f0103e16	obj/kern/kernel.asm	/^f0103e16:	6a 03                	push   $0x3$/;"	l
f0103e18	obj/kern/kernel.asm	/^f0103e18:	eb 4c                	jmp    f0103e66 <_alltraps>$/;"	l
f0103e1a	obj/kern/kernel.asm	/^f0103e1a <TH_OFLOW>:$/;"	l
f0103e1a	obj/kern/kernel.asm	/^f0103e1a:	6a 00                	push   $0x0$/;"	l
f0103e1c	obj/kern/kernel.asm	/^f0103e1c:	6a 04                	push   $0x4$/;"	l
f0103e1e	obj/kern/kernel.asm	/^f0103e1e:	eb 46                	jmp    f0103e66 <_alltraps>$/;"	l
f0103e20	obj/kern/kernel.asm	/^f0103e20 <TH_BOUND>:$/;"	l
f0103e20	obj/kern/kernel.asm	/^f0103e20:	6a 00                	push   $0x0$/;"	l
f0103e22	obj/kern/kernel.asm	/^f0103e22:	6a 05                	push   $0x5$/;"	l
f0103e24	obj/kern/kernel.asm	/^f0103e24:	eb 40                	jmp    f0103e66 <_alltraps>$/;"	l
f0103e26	obj/kern/kernel.asm	/^f0103e26 <TH_ILLOP>:$/;"	l
f0103e26	obj/kern/kernel.asm	/^f0103e26:	6a 00                	push   $0x0$/;"	l
f0103e28	obj/kern/kernel.asm	/^f0103e28:	6a 06                	push   $0x6$/;"	l
f0103e2a	obj/kern/kernel.asm	/^f0103e2a:	eb 3a                	jmp    f0103e66 <_alltraps>$/;"	l
f0103e2c	obj/kern/kernel.asm	/^f0103e2c <TH_DEVICE>:$/;"	l
f0103e2c	obj/kern/kernel.asm	/^f0103e2c:	6a 00                	push   $0x0$/;"	l
f0103e2e	obj/kern/kernel.asm	/^f0103e2e:	6a 07                	push   $0x7$/;"	l
f0103e30	obj/kern/kernel.asm	/^f0103e30:	eb 34                	jmp    f0103e66 <_alltraps>$/;"	l
f0103e32	obj/kern/kernel.asm	/^f0103e32 <TH_DBLFLT>:$/;"	l
f0103e32	obj/kern/kernel.asm	/^f0103e32:	6a 08                	push   $0x8$/;"	l
f0103e34	obj/kern/kernel.asm	/^f0103e34:	eb 30                	jmp    f0103e66 <_alltraps>$/;"	l
f0103e36	obj/kern/kernel.asm	/^f0103e36 <TH_TSS>:$/;"	l
f0103e36	obj/kern/kernel.asm	/^f0103e36:	6a 0a                	push   $0xa$/;"	l
f0103e38	obj/kern/kernel.asm	/^f0103e38:	eb 2c                	jmp    f0103e66 <_alltraps>$/;"	l
f0103e3a	obj/kern/kernel.asm	/^f0103e3a <TH_SEGNP>:$/;"	l
f0103e3a	obj/kern/kernel.asm	/^f0103e3a:	6a 0b                	push   $0xb$/;"	l
f0103e3c	obj/kern/kernel.asm	/^f0103e3c:	eb 28                	jmp    f0103e66 <_alltraps>$/;"	l
f0103e3e	obj/kern/kernel.asm	/^f0103e3e <TH_STACK>:$/;"	l
f0103e3e	obj/kern/kernel.asm	/^f0103e3e:	6a 0c                	push   $0xc$/;"	l
f0103e40	obj/kern/kernel.asm	/^f0103e40:	eb 24                	jmp    f0103e66 <_alltraps>$/;"	l
f0103e42	obj/kern/kernel.asm	/^f0103e42 <TH_GPFLT>:$/;"	l
f0103e42	obj/kern/kernel.asm	/^f0103e42:	6a 0d                	push   $0xd$/;"	l
f0103e44	obj/kern/kernel.asm	/^f0103e44:	eb 20                	jmp    f0103e66 <_alltraps>$/;"	l
f0103e46	obj/kern/kernel.asm	/^f0103e46 <TH_PGFLT>:$/;"	l
f0103e46	obj/kern/kernel.asm	/^f0103e46:	6a 0e                	push   $0xe$/;"	l
f0103e48	obj/kern/kernel.asm	/^f0103e48:	eb 1c                	jmp    f0103e66 <_alltraps>$/;"	l
f0103e4a	obj/kern/kernel.asm	/^f0103e4a <TH_FPERR>:$/;"	l
f0103e4a	obj/kern/kernel.asm	/^f0103e4a:	6a 00                	push   $0x0$/;"	l
f0103e4c	obj/kern/kernel.asm	/^f0103e4c:	6a 10                	push   $0x10$/;"	l
f0103e4e	obj/kern/kernel.asm	/^f0103e4e:	eb 16                	jmp    f0103e66 <_alltraps>$/;"	l
f0103e50	obj/kern/kernel.asm	/^f0103e50 <TH_ALIGN>:$/;"	l
f0103e50	obj/kern/kernel.asm	/^f0103e50:	6a 11                	push   $0x11$/;"	l
f0103e52	obj/kern/kernel.asm	/^f0103e52:	eb 12                	jmp    f0103e66 <_alltraps>$/;"	l
f0103e54	obj/kern/kernel.asm	/^f0103e54 <TH_MCHK>:$/;"	l
f0103e54	obj/kern/kernel.asm	/^f0103e54:	6a 00                	push   $0x0$/;"	l
f0103e56	obj/kern/kernel.asm	/^f0103e56:	6a 12                	push   $0x12$/;"	l
f0103e58	obj/kern/kernel.asm	/^f0103e58:	eb 0c                	jmp    f0103e66 <_alltraps>$/;"	l
f0103e5a	obj/kern/kernel.asm	/^f0103e5a <TH_SIMDERR>:$/;"	l
f0103e5a	obj/kern/kernel.asm	/^f0103e5a:	6a 00                	push   $0x0$/;"	l
f0103e5c	obj/kern/kernel.asm	/^f0103e5c:	6a 13                	push   $0x13$/;"	l
f0103e5e	obj/kern/kernel.asm	/^f0103e5e:	eb 06                	jmp    f0103e66 <_alltraps>$/;"	l
f0103e60	obj/kern/kernel.asm	/^f0103e60 <TH_SYSCALL>:$/;"	l
f0103e60	obj/kern/kernel.asm	/^f0103e60:	6a 00                	push   $0x0$/;"	l
f0103e62	obj/kern/kernel.asm	/^f0103e62:	6a 30                	push   $0x30$/;"	l
f0103e64	obj/kern/kernel.asm	/^f0103e64:	eb 00                	jmp    f0103e66 <_alltraps>$/;"	l
f0103e66	obj/kern/kernel.asm	/^f0103e66 <_alltraps>:$/;"	l
f0103e66	obj/kern/kernel.asm	/^f0103e66:	1e                   	push   %ds$/;"	l
f0103e67	obj/kern/kernel.asm	/^f0103e67:	06                   	push   %es$/;"	l
f0103e68	obj/kern/kernel.asm	/^f0103e68:	60                   	pusha  $/;"	l
f0103e69	obj/kern/kernel.asm	/^f0103e69:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0103e6e	obj/kern/kernel.asm	/^f0103e6e:	8e c0                	mov    %eax,%es$/;"	l
f0103e70	obj/kern/kernel.asm	/^f0103e70:	8e d8                	mov    %eax,%ds$/;"	l
f0103e72	obj/kern/kernel.asm	/^f0103e72:	54                   	push   %esp$/;"	l
f0103e73	obj/kern/kernel.asm	/^f0103e73:	e8 8a fd ff ff       	call   f0103c02 <trap>$/;"	l
f0103e78	obj/kern/kernel.asm	/^f0103e78 <sched_halt>:$/;"	l
f0103e78	obj/kern/kernel.asm	/^f0103e78:	55                   	push   %ebp$/;"	l
f0103e79	obj/kern/kernel.asm	/^f0103e79:	89 e5                	mov    %esp,%ebp$/;"	l
f0103e7b	obj/kern/kernel.asm	/^f0103e7b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103e7e	obj/kern/kernel.asm	/^f0103e7e:	a1 44 a2 22 f0       	mov    0xf022a244,%eax$/;"	l
f0103e83	obj/kern/kernel.asm	/^f0103e83:	8d 50 54             	lea    0x54(%eax),%edx$/;"	l
f0103e86	obj/kern/kernel.asm	/^f0103e86:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0103e8b	obj/kern/kernel.asm	/^f0103e8b:	8b 02                	mov    (%edx),%eax$/;"	l
f0103e8d	obj/kern/kernel.asm	/^f0103e8d:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0103e90	obj/kern/kernel.asm	/^f0103e90:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f0103e93	obj/kern/kernel.asm	/^f0103e93:	76 10                	jbe    f0103ea5 <sched_halt+0x2d>$/;"	l
f0103e95	obj/kern/kernel.asm	/^f0103e95:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0103e98	obj/kern/kernel.asm	/^f0103e98:	83 c2 7c             	add    $0x7c,%edx$/;"	l
f0103e9b	obj/kern/kernel.asm	/^f0103e9b:	81 f9 00 04 00 00    	cmp    $0x400,%ecx$/;"	l
f0103ea1	obj/kern/kernel.asm	/^f0103ea1:	75 e8                	jne    f0103e8b <sched_halt+0x13>$/;"	l
f0103ea3	obj/kern/kernel.asm	/^f0103ea3:	eb 08                	jmp    f0103ead <sched_halt+0x35>$/;"	l
f0103ea5	obj/kern/kernel.asm	/^f0103ea5:	81 f9 00 04 00 00    	cmp    $0x400,%ecx$/;"	l
f0103eab	obj/kern/kernel.asm	/^f0103eab:	75 1f                	jne    f0103ecc <sched_halt+0x54>$/;"	l
f0103ead	obj/kern/kernel.asm	/^f0103ead:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103eb0	obj/kern/kernel.asm	/^f0103eb0:	68 30 6f 10 f0       	push   $0xf0106f30$/;"	l
f0103eb5	obj/kern/kernel.asm	/^f0103eb5:	e8 2e f7 ff ff       	call   f01035e8 <cprintf>$/;"	l
f0103eba	obj/kern/kernel.asm	/^f0103eba:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103ebd	obj/kern/kernel.asm	/^f0103ebd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103ec0	obj/kern/kernel.asm	/^f0103ec0:	6a 00                	push   $0x0$/;"	l
f0103ec2	obj/kern/kernel.asm	/^f0103ec2:	e8 26 ca ff ff       	call   f01008ed <monitor>$/;"	l
f0103ec7	obj/kern/kernel.asm	/^f0103ec7:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103eca	obj/kern/kernel.asm	/^f0103eca:	eb f1                	jmp    f0103ebd <sched_halt+0x45>$/;"	l
f0103ecc	obj/kern/kernel.asm	/^f0103ecc:	e8 21 13 00 00       	call   f01051f2 <cpunum>$/;"	l
f0103ed1	obj/kern/kernel.asm	/^f0103ed1:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103ed4	obj/kern/kernel.asm	/^f0103ed4:	c7 80 28 b0 22 f0 00 	movl   $0x0,-0xfdd4fd8(%eax)$/;"	l
f0103edb	obj/kern/kernel.asm	/^f0103edb:	00 00 00 $/;"	l
f0103ede	obj/kern/kernel.asm	/^f0103ede:	a1 0c af 22 f0       	mov    0xf022af0c,%eax$/;"	l
f0103ee3	obj/kern/kernel.asm	/^f0103ee3:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103ee8	obj/kern/kernel.asm	/^f0103ee8:	77 12                	ja     f0103efc <sched_halt+0x84>$/;"	l
f0103eea	obj/kern/kernel.asm	/^f0103eea:	50                   	push   %eax$/;"	l
f0103eeb	obj/kern/kernel.asm	/^f0103eeb:	68 c8 58 10 f0       	push   $0xf01058c8$/;"	l
f0103ef0	obj/kern/kernel.asm	/^f0103ef0:	6a 3d                	push   $0x3d$/;"	l
f0103ef2	obj/kern/kernel.asm	/^f0103ef2:	68 59 6f 10 f0       	push   $0xf0106f59$/;"	l
f0103ef7	obj/kern/kernel.asm	/^f0103ef7:	e8 44 c1 ff ff       	call   f0100040 <_panic>$/;"	l
f0103efc	obj/kern/kernel.asm	/^f0103efc:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103f01	obj/kern/kernel.asm	/^f0103f01:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103f04	obj/kern/kernel.asm	/^f0103f04:	e8 e9 12 00 00       	call   f01051f2 <cpunum>$/;"	l
f0103f09	obj/kern/kernel.asm	/^f0103f09:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0103f0c	obj/kern/kernel.asm	/^f0103f0c:	81 c2 20 b0 22 f0    	add    $0xf022b020,%edx$/;"	l
f0103f12	obj/kern/kernel.asm	/^f0103f12:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f0103f17	obj/kern/kernel.asm	/^f0103f17:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f0103f1b	obj/kern/kernel.asm	/^f0103f1b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103f1e	obj/kern/kernel.asm	/^f0103f1e:	68 c0 f3 11 f0       	push   $0xf011f3c0$/;"	l
f0103f23	obj/kern/kernel.asm	/^f0103f23:	e8 d5 15 00 00       	call   f01054fd <spin_unlock>$/;"	l
f0103f28	obj/kern/kernel.asm	/^f0103f28:	f3 90                	pause  $/;"	l
f0103f2a	obj/kern/kernel.asm	/^f0103f2a:	e8 c3 12 00 00       	call   f01051f2 <cpunum>$/;"	l
f0103f2f	obj/kern/kernel.asm	/^f0103f2f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103f32	obj/kern/kernel.asm	/^f0103f32:	8b 80 30 b0 22 f0    	mov    -0xfdd4fd0(%eax),%eax$/;"	l
f0103f38	obj/kern/kernel.asm	/^f0103f38:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0103f3d	obj/kern/kernel.asm	/^f0103f3d:	89 c4                	mov    %eax,%esp$/;"	l
f0103f3f	obj/kern/kernel.asm	/^f0103f3f:	6a 00                	push   $0x0$/;"	l
f0103f41	obj/kern/kernel.asm	/^f0103f41:	6a 00                	push   $0x0$/;"	l
f0103f43	obj/kern/kernel.asm	/^f0103f43:	f4                   	hlt    $/;"	l
f0103f44	obj/kern/kernel.asm	/^f0103f44:	eb fd                	jmp    f0103f43 <sched_halt+0xcb>$/;"	l
f0103f46	obj/kern/kernel.asm	/^f0103f46:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103f49	obj/kern/kernel.asm	/^f0103f49:	c9                   	leave  $/;"	l
f0103f4a	obj/kern/kernel.asm	/^f0103f4a:	c3                   	ret    $/;"	l
f0103f4b	obj/kern/kernel.asm	/^f0103f4b <sched_yield>:$/;"	l
f0103f4b	obj/kern/kernel.asm	/^f0103f4b:	55                   	push   %ebp$/;"	l
f0103f4c	obj/kern/kernel.asm	/^f0103f4c:	89 e5                	mov    %esp,%ebp$/;"	l
f0103f4e	obj/kern/kernel.asm	/^f0103f4e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103f51	obj/kern/kernel.asm	/^f0103f51:	e8 22 ff ff ff       	call   f0103e78 <sched_halt>$/;"	l
f0103f56	obj/kern/kernel.asm	/^f0103f56:	c9                   	leave  $/;"	l
f0103f57	obj/kern/kernel.asm	/^f0103f57:	c3                   	ret    $/;"	l
f0103f58	obj/kern/kernel.asm	/^f0103f58 <syscall>:$/;"	l
f0103f58	obj/kern/kernel.asm	/^f0103f58:	55                   	push   %ebp$/;"	l
f0103f59	obj/kern/kernel.asm	/^f0103f59:	89 e5                	mov    %esp,%ebp$/;"	l
f0103f5b	obj/kern/kernel.asm	/^f0103f5b:	53                   	push   %ebx$/;"	l
f0103f5c	obj/kern/kernel.asm	/^f0103f5c:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103f5f	obj/kern/kernel.asm	/^f0103f5f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103f62	obj/kern/kernel.asm	/^f0103f62:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0103f65	obj/kern/kernel.asm	/^f0103f65:	74 4f                	je     f0103fb6 <syscall+0x5e>$/;"	l
f0103f67	obj/kern/kernel.asm	/^f0103f67:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0103f6a	obj/kern/kernel.asm	/^f0103f6a:	72 0f                	jb     f0103f7b <syscall+0x23>$/;"	l
f0103f6c	obj/kern/kernel.asm	/^f0103f6c:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f0103f6f	obj/kern/kernel.asm	/^f0103f6f:	74 4f                	je     f0103fc0 <syscall+0x68>$/;"	l
f0103f71	obj/kern/kernel.asm	/^f0103f71:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0103f74	obj/kern/kernel.asm	/^f0103f74:	74 60                	je     f0103fd6 <syscall+0x7e>$/;"	l
f0103f76	obj/kern/kernel.asm	/^f0103f76:	e9 e3 00 00 00       	jmp    f010405e <syscall+0x106>$/;"	l
f0103f7b	obj/kern/kernel.asm	/^f0103f7b:	e8 72 12 00 00       	call   f01051f2 <cpunum>$/;"	l
f0103f80	obj/kern/kernel.asm	/^f0103f80:	6a 04                	push   $0x4$/;"	l
f0103f82	obj/kern/kernel.asm	/^f0103f82:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0103f85	obj/kern/kernel.asm	/^f0103f85:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0103f88	obj/kern/kernel.asm	/^f0103f88:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103f8b	obj/kern/kernel.asm	/^f0103f8b:	ff b0 28 b0 22 f0    	pushl  -0xfdd4fd8(%eax)$/;"	l
f0103f91	obj/kern/kernel.asm	/^f0103f91:	e8 56 ed ff ff       	call   f0102cec <user_mem_assert>$/;"	l
f0103f96	obj/kern/kernel.asm	/^f0103f96:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0103f99	obj/kern/kernel.asm	/^f0103f99:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0103f9c	obj/kern/kernel.asm	/^f0103f9c:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0103f9f	obj/kern/kernel.asm	/^f0103f9f:	68 66 6f 10 f0       	push   $0xf0106f66$/;"	l
f0103fa4	obj/kern/kernel.asm	/^f0103fa4:	e8 3f f6 ff ff       	call   f01035e8 <cprintf>$/;"	l
f0103fa9	obj/kern/kernel.asm	/^f0103fa9:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103fac	obj/kern/kernel.asm	/^f0103fac:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103fb1	obj/kern/kernel.asm	/^f0103fb1:	e9 ad 00 00 00       	jmp    f0104063 <syscall+0x10b>$/;"	l
f0103fb6	obj/kern/kernel.asm	/^f0103fb6:	e8 0b c6 ff ff       	call   f01005c6 <cons_getc>$/;"	l
f0103fbb	obj/kern/kernel.asm	/^f0103fbb:	e9 a3 00 00 00       	jmp    f0104063 <syscall+0x10b>$/;"	l
f0103fc0	obj/kern/kernel.asm	/^f0103fc0:	e8 2d 12 00 00       	call   f01051f2 <cpunum>$/;"	l
f0103fc5	obj/kern/kernel.asm	/^f0103fc5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103fc8	obj/kern/kernel.asm	/^f0103fc8:	8b 80 28 b0 22 f0    	mov    -0xfdd4fd8(%eax),%eax$/;"	l
f0103fce	obj/kern/kernel.asm	/^f0103fce:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0103fd1	obj/kern/kernel.asm	/^f0103fd1:	e9 8d 00 00 00       	jmp    f0104063 <syscall+0x10b>$/;"	l
f0103fd6	obj/kern/kernel.asm	/^f0103fd6:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103fd9	obj/kern/kernel.asm	/^f0103fd9:	6a 01                	push   $0x1$/;"	l
f0103fdb	obj/kern/kernel.asm	/^f0103fdb:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0103fde	obj/kern/kernel.asm	/^f0103fde:	50                   	push   %eax$/;"	l
f0103fdf	obj/kern/kernel.asm	/^f0103fdf:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0103fe2	obj/kern/kernel.asm	/^f0103fe2:	e8 ba ed ff ff       	call   f0102da1 <envid2env>$/;"	l
f0103fe7	obj/kern/kernel.asm	/^f0103fe7:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103fea	obj/kern/kernel.asm	/^f0103fea:	85 c0                	test   %eax,%eax$/;"	l
f0103fec	obj/kern/kernel.asm	/^f0103fec:	78 69                	js     f0104057 <syscall+0xff>$/;"	l
f0103fee	obj/kern/kernel.asm	/^f0103fee:	e8 ff 11 00 00       	call   f01051f2 <cpunum>$/;"	l
f0103ff3	obj/kern/kernel.asm	/^f0103ff3:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0103ff6	obj/kern/kernel.asm	/^f0103ff6:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103ff9	obj/kern/kernel.asm	/^f0103ff9:	39 90 28 b0 22 f0    	cmp    %edx,-0xfdd4fd8(%eax)$/;"	l
f0103fff	obj/kern/kernel.asm	/^f0103fff:	75 23                	jne    f0104024 <syscall+0xcc>$/;"	l
f0104001	obj/kern/kernel.asm	/^f0104001:	e8 ec 11 00 00       	call   f01051f2 <cpunum>$/;"	l
f0104006	obj/kern/kernel.asm	/^f0104006:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104009	obj/kern/kernel.asm	/^f0104009:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010400c	obj/kern/kernel.asm	/^f010400c:	8b 80 28 b0 22 f0    	mov    -0xfdd4fd8(%eax),%eax$/;"	l
f0104012	obj/kern/kernel.asm	/^f0104012:	ff 70 48             	pushl  0x48(%eax)$/;"	l
f0104015	obj/kern/kernel.asm	/^f0104015:	68 6b 6f 10 f0       	push   $0xf0106f6b$/;"	l
f010401a	obj/kern/kernel.asm	/^f010401a:	e8 c9 f5 ff ff       	call   f01035e8 <cprintf>$/;"	l
f010401f	obj/kern/kernel.asm	/^f010401f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104022	obj/kern/kernel.asm	/^f0104022:	eb 25                	jmp    f0104049 <syscall+0xf1>$/;"	l
f0104024	obj/kern/kernel.asm	/^f0104024:	8b 5a 48             	mov    0x48(%edx),%ebx$/;"	l
f0104027	obj/kern/kernel.asm	/^f0104027:	e8 c6 11 00 00       	call   f01051f2 <cpunum>$/;"	l
f010402c	obj/kern/kernel.asm	/^f010402c:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010402f	obj/kern/kernel.asm	/^f010402f:	53                   	push   %ebx$/;"	l
f0104030	obj/kern/kernel.asm	/^f0104030:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104033	obj/kern/kernel.asm	/^f0104033:	8b 80 28 b0 22 f0    	mov    -0xfdd4fd8(%eax),%eax$/;"	l
f0104039	obj/kern/kernel.asm	/^f0104039:	ff 70 48             	pushl  0x48(%eax)$/;"	l
f010403c	obj/kern/kernel.asm	/^f010403c:	68 86 6f 10 f0       	push   $0xf0106f86$/;"	l
f0104041	obj/kern/kernel.asm	/^f0104041:	e8 a2 f5 ff ff       	call   f01035e8 <cprintf>$/;"	l
f0104046	obj/kern/kernel.asm	/^f0104046:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104049	obj/kern/kernel.asm	/^f0104049:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010404c	obj/kern/kernel.asm	/^f010404c:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
f010404f	obj/kern/kernel.asm	/^f010404f:	e8 e9 f2 ff ff       	call   f010333d <env_destroy>$/;"	l
f0104054	obj/kern/kernel.asm	/^f0104054:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104057	obj/kern/kernel.asm	/^f0104057:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010405c	obj/kern/kernel.asm	/^f010405c:	eb 05                	jmp    f0104063 <syscall+0x10b>$/;"	l
f010405e	obj/kern/kernel.asm	/^f010405e:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104063	obj/kern/kernel.asm	/^f0104063:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0104066	obj/kern/kernel.asm	/^f0104066:	c9                   	leave  $/;"	l
f0104067	obj/kern/kernel.asm	/^f0104067:	c3                   	ret    $/;"	l
f0104068	obj/kern/kernel.asm	/^f0104068 <stab_binsearch>:$/;"	l
f0104068	obj/kern/kernel.asm	/^f0104068:	55                   	push   %ebp$/;"	l
f0104069	obj/kern/kernel.asm	/^f0104069:	89 e5                	mov    %esp,%ebp$/;"	l
f010406b	obj/kern/kernel.asm	/^f010406b:	57                   	push   %edi$/;"	l
f010406c	obj/kern/kernel.asm	/^f010406c:	56                   	push   %esi$/;"	l
f010406d	obj/kern/kernel.asm	/^f010406d:	53                   	push   %ebx$/;"	l
f010406e	obj/kern/kernel.asm	/^f010406e:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0104071	obj/kern/kernel.asm	/^f0104071:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0104074	obj/kern/kernel.asm	/^f0104074:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0104077	obj/kern/kernel.asm	/^f0104077:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f010407a	obj/kern/kernel.asm	/^f010407a:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f010407d	obj/kern/kernel.asm	/^f010407d:	8b 1a                	mov    (%edx),%ebx$/;"	l
f010407f	obj/kern/kernel.asm	/^f010407f:	8b 01                	mov    (%ecx),%eax$/;"	l
f0104081	obj/kern/kernel.asm	/^f0104081:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0104084	obj/kern/kernel.asm	/^f0104084:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
f010408b	obj/kern/kernel.asm	/^f010408b:	eb 7f                	jmp    f010410c <stab_binsearch+0xa4>$/;"	l
f010408d	obj/kern/kernel.asm	/^f010408d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0104090	obj/kern/kernel.asm	/^f0104090:	01 d8                	add    %ebx,%eax$/;"	l
f0104092	obj/kern/kernel.asm	/^f0104092:	89 c6                	mov    %eax,%esi$/;"	l
f0104094	obj/kern/kernel.asm	/^f0104094:	c1 ee 1f             	shr    $0x1f,%esi$/;"	l
f0104097	obj/kern/kernel.asm	/^f0104097:	01 c6                	add    %eax,%esi$/;"	l
f0104099	obj/kern/kernel.asm	/^f0104099:	d1 fe                	sar    %esi$/;"	d
f010409b	obj/kern/kernel.asm	/^f010409b:	8d 04 76             	lea    (%esi,%esi,2),%eax$/;"	l
f010409e	obj/kern/kernel.asm	/^f010409e:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f01040a1	obj/kern/kernel.asm	/^f01040a1:	8d 14 81             	lea    (%ecx,%eax,4),%edx$/;"	l
f01040a4	obj/kern/kernel.asm	/^f01040a4:	89 f0                	mov    %esi,%eax$/;"	l
f01040a6	obj/kern/kernel.asm	/^f01040a6:	eb 03                	jmp    f01040ab <stab_binsearch+0x43>$/;"	l
f01040a8	obj/kern/kernel.asm	/^f01040a8:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01040ab	obj/kern/kernel.asm	/^f01040ab:	39 c3                	cmp    %eax,%ebx$/;"	l
f01040ad	obj/kern/kernel.asm	/^f01040ad:	7f 0d                	jg     f01040bc <stab_binsearch+0x54>$/;"	l
f01040af	obj/kern/kernel.asm	/^f01040af:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f01040b3	obj/kern/kernel.asm	/^f01040b3:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f01040b6	obj/kern/kernel.asm	/^f01040b6:	39 f9                	cmp    %edi,%ecx$/;"	l
f01040b8	obj/kern/kernel.asm	/^f01040b8:	75 ee                	jne    f01040a8 <stab_binsearch+0x40>$/;"	l
f01040ba	obj/kern/kernel.asm	/^f01040ba:	eb 05                	jmp    f01040c1 <stab_binsearch+0x59>$/;"	l
f01040bc	obj/kern/kernel.asm	/^f01040bc:	8d 5e 01             	lea    0x1(%esi),%ebx$/;"	l
f01040bf	obj/kern/kernel.asm	/^f01040bf:	eb 4b                	jmp    f010410c <stab_binsearch+0xa4>$/;"	l
f01040c1	obj/kern/kernel.asm	/^f01040c1:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f01040c4	obj/kern/kernel.asm	/^f01040c4:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f01040c7	obj/kern/kernel.asm	/^f01040c7:	8b 54 91 08          	mov    0x8(%ecx,%edx,4),%edx$/;"	l
f01040cb	obj/kern/kernel.asm	/^f01040cb:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
f01040ce	obj/kern/kernel.asm	/^f01040ce:	76 11                	jbe    f01040e1 <stab_binsearch+0x79>$/;"	l
f01040d0	obj/kern/kernel.asm	/^f01040d0:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f01040d3	obj/kern/kernel.asm	/^f01040d3:	89 03                	mov    %eax,(%ebx)$/;"	l
f01040d5	obj/kern/kernel.asm	/^f01040d5:	8d 5e 01             	lea    0x1(%esi),%ebx$/;"	l
f01040d8	obj/kern/kernel.asm	/^f01040d8:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f01040df	obj/kern/kernel.asm	/^f01040df:	eb 2b                	jmp    f010410c <stab_binsearch+0xa4>$/;"	l
f01040e1	obj/kern/kernel.asm	/^f01040e1:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
f01040e4	obj/kern/kernel.asm	/^f01040e4:	73 14                	jae    f01040fa <stab_binsearch+0x92>$/;"	l
f01040e6	obj/kern/kernel.asm	/^f01040e6:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01040e9	obj/kern/kernel.asm	/^f01040e9:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f01040ec	obj/kern/kernel.asm	/^f01040ec:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f01040ef	obj/kern/kernel.asm	/^f01040ef:	89 06                	mov    %eax,(%esi)$/;"	l
f01040f1	obj/kern/kernel.asm	/^f01040f1:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f01040f8	obj/kern/kernel.asm	/^f01040f8:	eb 12                	jmp    f010410c <stab_binsearch+0xa4>$/;"	l
f01040fa	obj/kern/kernel.asm	/^f01040fa:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f01040fd	obj/kern/kernel.asm	/^f01040fd:	89 06                	mov    %eax,(%esi)$/;"	l
f01040ff	obj/kern/kernel.asm	/^f01040ff:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
f0104103	obj/kern/kernel.asm	/^f0104103:	89 c3                	mov    %eax,%ebx$/;"	l
f0104105	obj/kern/kernel.asm	/^f0104105:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f010410c	obj/kern/kernel.asm	/^f010410c:	3b 5d f0             	cmp    -0x10(%ebp),%ebx$/;"	l
f010410f	obj/kern/kernel.asm	/^f010410f:	0f 8e 78 ff ff ff    	jle    f010408d <stab_binsearch+0x25>$/;"	l
f0104115	obj/kern/kernel.asm	/^f0104115:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
f0104119	obj/kern/kernel.asm	/^f0104119:	75 0f                	jne    f010412a <stab_binsearch+0xc2>$/;"	l
f010411b	obj/kern/kernel.asm	/^f010411b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010411e	obj/kern/kernel.asm	/^f010411e:	8b 00                	mov    (%eax),%eax$/;"	l
f0104120	obj/kern/kernel.asm	/^f0104120:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104123	obj/kern/kernel.asm	/^f0104123:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0104126	obj/kern/kernel.asm	/^f0104126:	89 06                	mov    %eax,(%esi)$/;"	l
f0104128	obj/kern/kernel.asm	/^f0104128:	eb 2c                	jmp    f0104156 <stab_binsearch+0xee>$/;"	l
f010412a	obj/kern/kernel.asm	/^f010412a:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010412d	obj/kern/kernel.asm	/^f010412d:	8b 00                	mov    (%eax),%eax$/;"	l
f010412f	obj/kern/kernel.asm	/^f010412f:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0104132	obj/kern/kernel.asm	/^f0104132:	8b 0e                	mov    (%esi),%ecx$/;"	l
f0104134	obj/kern/kernel.asm	/^f0104134:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0104137	obj/kern/kernel.asm	/^f0104137:	8b 75 ec             	mov    -0x14(%ebp),%esi$/;"	l
f010413a	obj/kern/kernel.asm	/^f010413a:	8d 14 96             	lea    (%esi,%edx,4),%edx$/;"	l
f010413d	obj/kern/kernel.asm	/^f010413d:	eb 03                	jmp    f0104142 <stab_binsearch+0xda>$/;"	l
f010413f	obj/kern/kernel.asm	/^f010413f:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104142	obj/kern/kernel.asm	/^f0104142:	39 c8                	cmp    %ecx,%eax$/;"	l
f0104144	obj/kern/kernel.asm	/^f0104144:	7e 0b                	jle    f0104151 <stab_binsearch+0xe9>$/;"	l
f0104146	obj/kern/kernel.asm	/^f0104146:	0f b6 5a 04          	movzbl 0x4(%edx),%ebx$/;"	l
f010414a	obj/kern/kernel.asm	/^f010414a:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f010414d	obj/kern/kernel.asm	/^f010414d:	39 df                	cmp    %ebx,%edi$/;"	l
f010414f	obj/kern/kernel.asm	/^f010414f:	75 ee                	jne    f010413f <stab_binsearch+0xd7>$/;"	l
f0104151	obj/kern/kernel.asm	/^f0104151:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0104154	obj/kern/kernel.asm	/^f0104154:	89 06                	mov    %eax,(%esi)$/;"	l
f0104156	obj/kern/kernel.asm	/^f0104156:	83 c4 14             	add    $0x14,%esp$/;"	l
f0104159	obj/kern/kernel.asm	/^f0104159:	5b                   	pop    %ebx$/;"	l
f010415a	obj/kern/kernel.asm	/^f010415a:	5e                   	pop    %esi$/;"	l
f010415b	obj/kern/kernel.asm	/^f010415b:	5f                   	pop    %edi$/;"	l
f010415c	obj/kern/kernel.asm	/^f010415c:	5d                   	pop    %ebp$/;"	l
f010415d	obj/kern/kernel.asm	/^f010415d:	c3                   	ret    $/;"	l
f010415e	obj/kern/kernel.asm	/^f010415e <debuginfo_eip>:$/;"	l
f010415e	obj/kern/kernel.asm	/^f010415e:	55                   	push   %ebp$/;"	l
f010415f	obj/kern/kernel.asm	/^f010415f:	89 e5                	mov    %esp,%ebp$/;"	l
f0104161	obj/kern/kernel.asm	/^f0104161:	57                   	push   %edi$/;"	l
f0104162	obj/kern/kernel.asm	/^f0104162:	56                   	push   %esi$/;"	l
f0104163	obj/kern/kernel.asm	/^f0104163:	53                   	push   %ebx$/;"	l
f0104164	obj/kern/kernel.asm	/^f0104164:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0104167	obj/kern/kernel.asm	/^f0104167:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f010416a	obj/kern/kernel.asm	/^f010416a:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f010416d	obj/kern/kernel.asm	/^f010416d:	c7 03 9e 6f 10 f0    	movl   $0xf0106f9e,(%ebx)$/;"	l
f0104173	obj/kern/kernel.asm	/^f0104173:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)$/;"	l
f010417a	obj/kern/kernel.asm	/^f010417a:	c7 43 08 9e 6f 10 f0 	movl   $0xf0106f9e,0x8(%ebx)$/;"	l
f0104181	obj/kern/kernel.asm	/^f0104181:	c7 43 0c 09 00 00 00 	movl   $0x9,0xc(%ebx)$/;"	l
f0104188	obj/kern/kernel.asm	/^f0104188:	89 7b 10             	mov    %edi,0x10(%ebx)$/;"	l
f010418b	obj/kern/kernel.asm	/^f010418b:	c7 43 14 00 00 00 00 	movl   $0x0,0x14(%ebx)$/;"	l
f0104192	obj/kern/kernel.asm	/^f0104192:	81 ff ff ff 7f ef    	cmp    $0xef7fffff,%edi$/;"	l
f0104198	obj/kern/kernel.asm	/^f0104198:	0f 87 a3 00 00 00    	ja     f0104241 <debuginfo_eip+0xe3>$/;"	l
f010419e	obj/kern/kernel.asm	/^f010419e:	e8 4f 10 00 00       	call   f01051f2 <cpunum>$/;"	l
f01041a3	obj/kern/kernel.asm	/^f01041a3:	6a 04                	push   $0x4$/;"	l
f01041a5	obj/kern/kernel.asm	/^f01041a5:	6a 10                	push   $0x10$/;"	l
f01041a7	obj/kern/kernel.asm	/^f01041a7:	68 00 00 20 00       	push   $0x200000$/;"	l
f01041ac	obj/kern/kernel.asm	/^f01041ac:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01041af	obj/kern/kernel.asm	/^f01041af:	ff b0 28 b0 22 f0    	pushl  -0xfdd4fd8(%eax)$/;"	l
f01041b5	obj/kern/kernel.asm	/^f01041b5:	e8 bc ea ff ff       	call   f0102c76 <user_mem_check>$/;"	l
f01041ba	obj/kern/kernel.asm	/^f01041ba:	83 c4 10             	add    $0x10,%esp$/;"	l
f01041bd	obj/kern/kernel.asm	/^f01041bd:	85 c0                	test   %eax,%eax$/;"	l
f01041bf	obj/kern/kernel.asm	/^f01041bf:	0f 84 3e 02 00 00    	je     f0104403 <debuginfo_eip+0x2a5>$/;"	l
f01041c5	obj/kern/kernel.asm	/^f01041c5:	a1 00 00 20 00       	mov    0x200000,%eax$/;"	l
f01041ca	obj/kern/kernel.asm	/^f01041ca:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
f01041cd	obj/kern/kernel.asm	/^f01041cd:	8b 35 04 00 20 00    	mov    0x200004,%esi$/;"	l
f01041d3	obj/kern/kernel.asm	/^f01041d3:	8b 15 08 00 20 00    	mov    0x200008,%edx$/;"	l
f01041d9	obj/kern/kernel.asm	/^f01041d9:	89 55 b8             	mov    %edx,-0x48(%ebp)$/;"	l
f01041dc	obj/kern/kernel.asm	/^f01041dc:	a1 0c 00 20 00       	mov    0x20000c,%eax$/;"	l
f01041e1	obj/kern/kernel.asm	/^f01041e1:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
f01041e4	obj/kern/kernel.asm	/^f01041e4:	e8 09 10 00 00       	call   f01051f2 <cpunum>$/;"	l
f01041e9	obj/kern/kernel.asm	/^f01041e9:	6a 04                	push   $0x4$/;"	l
f01041eb	obj/kern/kernel.asm	/^f01041eb:	89 f2                	mov    %esi,%edx$/;"	l
f01041ed	obj/kern/kernel.asm	/^f01041ed:	8b 4d c0             	mov    -0x40(%ebp),%ecx$/;"	l
f01041f0	obj/kern/kernel.asm	/^f01041f0:	29 ca                	sub    %ecx,%edx$/;"	l
f01041f2	obj/kern/kernel.asm	/^f01041f2:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f01041f5	obj/kern/kernel.asm	/^f01041f5:	69 d2 ab aa aa aa    	imul   $0xaaaaaaab,%edx,%edx$/;"	l
f01041fb	obj/kern/kernel.asm	/^f01041fb:	52                   	push   %edx$/;"	l
f01041fc	obj/kern/kernel.asm	/^f01041fc:	51                   	push   %ecx$/;"	l
f01041fd	obj/kern/kernel.asm	/^f01041fd:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104200	obj/kern/kernel.asm	/^f0104200:	ff b0 28 b0 22 f0    	pushl  -0xfdd4fd8(%eax)$/;"	l
f0104206	obj/kern/kernel.asm	/^f0104206:	e8 6b ea ff ff       	call   f0102c76 <user_mem_check>$/;"	l
f010420b	obj/kern/kernel.asm	/^f010420b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010420e	obj/kern/kernel.asm	/^f010420e:	85 c0                	test   %eax,%eax$/;"	l
f0104210	obj/kern/kernel.asm	/^f0104210:	0f 84 f4 01 00 00    	je     f010440a <debuginfo_eip+0x2ac>$/;"	l
f0104216	obj/kern/kernel.asm	/^f0104216:	e8 d7 0f 00 00       	call   f01051f2 <cpunum>$/;"	l
f010421b	obj/kern/kernel.asm	/^f010421b:	6a 04                	push   $0x4$/;"	l
f010421d	obj/kern/kernel.asm	/^f010421d:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
f0104220	obj/kern/kernel.asm	/^f0104220:	8b 4d b8             	mov    -0x48(%ebp),%ecx$/;"	l
f0104223	obj/kern/kernel.asm	/^f0104223:	29 ca                	sub    %ecx,%edx$/;"	l
f0104225	obj/kern/kernel.asm	/^f0104225:	52                   	push   %edx$/;"	l
f0104226	obj/kern/kernel.asm	/^f0104226:	51                   	push   %ecx$/;"	l
f0104227	obj/kern/kernel.asm	/^f0104227:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010422a	obj/kern/kernel.asm	/^f010422a:	ff b0 28 b0 22 f0    	pushl  -0xfdd4fd8(%eax)$/;"	l
f0104230	obj/kern/kernel.asm	/^f0104230:	e8 41 ea ff ff       	call   f0102c76 <user_mem_check>$/;"	l
f0104235	obj/kern/kernel.asm	/^f0104235:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104238	obj/kern/kernel.asm	/^f0104238:	85 c0                	test   %eax,%eax$/;"	l
f010423a	obj/kern/kernel.asm	/^f010423a:	75 1f                	jne    f010425b <debuginfo_eip+0xfd>$/;"	l
f010423c	obj/kern/kernel.asm	/^f010423c:	e9 d0 01 00 00       	jmp    f0104411 <debuginfo_eip+0x2b3>$/;"	l
f0104241	obj/kern/kernel.asm	/^f0104241:	c7 45 bc 6d 42 11 f0 	movl   $0xf011426d,-0x44(%ebp)$/;"	l
f0104248	obj/kern/kernel.asm	/^f0104248:	c7 45 b8 3d 0c 11 f0 	movl   $0xf0110c3d,-0x48(%ebp)$/;"	l
f010424f	obj/kern/kernel.asm	/^f010424f:	be 3c 0c 11 f0       	mov    $0xf0110c3c,%esi$/;"	l
f0104254	obj/kern/kernel.asm	/^f0104254:	c7 45 c0 74 74 10 f0 	movl   $0xf0107474,-0x40(%ebp)$/;"	l
f010425b	obj/kern/kernel.asm	/^f010425b:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
f010425e	obj/kern/kernel.asm	/^f010425e:	39 45 b8             	cmp    %eax,-0x48(%ebp)$/;"	l
f0104261	obj/kern/kernel.asm	/^f0104261:	0f 83 b1 01 00 00    	jae    f0104418 <debuginfo_eip+0x2ba>$/;"	l
f0104267	obj/kern/kernel.asm	/^f0104267:	80 78 ff 00          	cmpb   $0x0,-0x1(%eax)$/;"	l
f010426b	obj/kern/kernel.asm	/^f010426b:	0f 85 ae 01 00 00    	jne    f010441f <debuginfo_eip+0x2c1>$/;"	l
f0104271	obj/kern/kernel.asm	/^f0104271:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0104278	obj/kern/kernel.asm	/^f0104278:	2b 75 c0             	sub    -0x40(%ebp),%esi$/;"	l
f010427b	obj/kern/kernel.asm	/^f010427b:	c1 fe 02             	sar    $0x2,%esi$/;"	l
f010427e	obj/kern/kernel.asm	/^f010427e:	69 c6 ab aa aa aa    	imul   $0xaaaaaaab,%esi,%eax$/;"	l
f0104284	obj/kern/kernel.asm	/^f0104284:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104287	obj/kern/kernel.asm	/^f0104287:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f010428a	obj/kern/kernel.asm	/^f010428a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010428d	obj/kern/kernel.asm	/^f010428d:	57                   	push   %edi$/;"	l
f010428e	obj/kern/kernel.asm	/^f010428e:	6a 64                	push   $0x64$/;"	l
f0104290	obj/kern/kernel.asm	/^f0104290:	8d 55 e0             	lea    -0x20(%ebp),%edx$/;"	l
f0104293	obj/kern/kernel.asm	/^f0104293:	89 d1                	mov    %edx,%ecx$/;"	l
f0104295	obj/kern/kernel.asm	/^f0104295:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0104298	obj/kern/kernel.asm	/^f0104298:	8b 75 c0             	mov    -0x40(%ebp),%esi$/;"	l
f010429b	obj/kern/kernel.asm	/^f010429b:	89 f0                	mov    %esi,%eax$/;"	l
f010429d	obj/kern/kernel.asm	/^f010429d:	e8 c6 fd ff ff       	call   f0104068 <stab_binsearch>$/;"	l
f01042a2	obj/kern/kernel.asm	/^f01042a2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01042a5	obj/kern/kernel.asm	/^f01042a5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01042a8	obj/kern/kernel.asm	/^f01042a8:	85 c0                	test   %eax,%eax$/;"	l
f01042aa	obj/kern/kernel.asm	/^f01042aa:	0f 84 76 01 00 00    	je     f0104426 <debuginfo_eip+0x2c8>$/;"	l
f01042b0	obj/kern/kernel.asm	/^f01042b0:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f01042b3	obj/kern/kernel.asm	/^f01042b3:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01042b6	obj/kern/kernel.asm	/^f01042b6:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f01042b9	obj/kern/kernel.asm	/^f01042b9:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01042bc	obj/kern/kernel.asm	/^f01042bc:	57                   	push   %edi$/;"	l
f01042bd	obj/kern/kernel.asm	/^f01042bd:	6a 24                	push   $0x24$/;"	l
f01042bf	obj/kern/kernel.asm	/^f01042bf:	8d 55 d8             	lea    -0x28(%ebp),%edx$/;"	l
f01042c2	obj/kern/kernel.asm	/^f01042c2:	89 d1                	mov    %edx,%ecx$/;"	l
f01042c4	obj/kern/kernel.asm	/^f01042c4:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f01042c7	obj/kern/kernel.asm	/^f01042c7:	89 f0                	mov    %esi,%eax$/;"	l
f01042c9	obj/kern/kernel.asm	/^f01042c9:	e8 9a fd ff ff       	call   f0104068 <stab_binsearch>$/;"	l
f01042ce	obj/kern/kernel.asm	/^f01042ce:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01042d1	obj/kern/kernel.asm	/^f01042d1:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f01042d4	obj/kern/kernel.asm	/^f01042d4:	83 c4 10             	add    $0x10,%esp$/;"	l
f01042d7	obj/kern/kernel.asm	/^f01042d7:	39 d0                	cmp    %edx,%eax$/;"	l
f01042d9	obj/kern/kernel.asm	/^f01042d9:	7f 2e                	jg     f0104309 <debuginfo_eip+0x1ab>$/;"	l
f01042db	obj/kern/kernel.asm	/^f01042db:	8d 0c 40             	lea    (%eax,%eax,2),%ecx$/;"	l
f01042de	obj/kern/kernel.asm	/^f01042de:	8d 34 8e             	lea    (%esi,%ecx,4),%esi$/;"	l
f01042e1	obj/kern/kernel.asm	/^f01042e1:	89 75 c4             	mov    %esi,-0x3c(%ebp)$/;"	l
f01042e4	obj/kern/kernel.asm	/^f01042e4:	8b 36                	mov    (%esi),%esi$/;"	l
f01042e6	obj/kern/kernel.asm	/^f01042e6:	8b 4d bc             	mov    -0x44(%ebp),%ecx$/;"	l
f01042e9	obj/kern/kernel.asm	/^f01042e9:	2b 4d b8             	sub    -0x48(%ebp),%ecx$/;"	l
f01042ec	obj/kern/kernel.asm	/^f01042ec:	39 ce                	cmp    %ecx,%esi$/;"	l
f01042ee	obj/kern/kernel.asm	/^f01042ee:	73 06                	jae    f01042f6 <debuginfo_eip+0x198>$/;"	l
f01042f0	obj/kern/kernel.asm	/^f01042f0:	03 75 b8             	add    -0x48(%ebp),%esi$/;"	l
f01042f3	obj/kern/kernel.asm	/^f01042f3:	89 73 08             	mov    %esi,0x8(%ebx)$/;"	l
f01042f6	obj/kern/kernel.asm	/^f01042f6:	8b 75 c4             	mov    -0x3c(%ebp),%esi$/;"	l
f01042f9	obj/kern/kernel.asm	/^f01042f9:	8b 4e 08             	mov    0x8(%esi),%ecx$/;"	l
f01042fc	obj/kern/kernel.asm	/^f01042fc:	89 4b 10             	mov    %ecx,0x10(%ebx)$/;"	l
f01042ff	obj/kern/kernel.asm	/^f01042ff:	29 cf                	sub    %ecx,%edi$/;"	l
f0104301	obj/kern/kernel.asm	/^f0104301:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0104304	obj/kern/kernel.asm	/^f0104304:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
f0104307	obj/kern/kernel.asm	/^f0104307:	eb 0f                	jmp    f0104318 <debuginfo_eip+0x1ba>$/;"	l
f0104309	obj/kern/kernel.asm	/^f0104309:	89 7b 10             	mov    %edi,0x10(%ebx)$/;"	l
f010430c	obj/kern/kernel.asm	/^f010430c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010430f	obj/kern/kernel.asm	/^f010430f:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0104312	obj/kern/kernel.asm	/^f0104312:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104315	obj/kern/kernel.asm	/^f0104315:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0104318	obj/kern/kernel.asm	/^f0104318:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010431b	obj/kern/kernel.asm	/^f010431b:	6a 3a                	push   $0x3a$/;"	l
f010431d	obj/kern/kernel.asm	/^f010431d:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f0104320	obj/kern/kernel.asm	/^f0104320:	e8 8f 08 00 00       	call   f0104bb4 <strfind>$/;"	l
f0104325	obj/kern/kernel.asm	/^f0104325:	2b 43 08             	sub    0x8(%ebx),%eax$/;"	l
f0104328	obj/kern/kernel.asm	/^f0104328:	89 43 0c             	mov    %eax,0xc(%ebx)$/;"	l
f010432b	obj/kern/kernel.asm	/^f010432b:	83 c4 08             	add    $0x8,%esp$/;"	l
f010432e	obj/kern/kernel.asm	/^f010432e:	57                   	push   %edi$/;"	l
f010432f	obj/kern/kernel.asm	/^f010432f:	6a 44                	push   $0x44$/;"	l
f0104331	obj/kern/kernel.asm	/^f0104331:	8d 4d d0             	lea    -0x30(%ebp),%ecx$/;"	l
f0104334	obj/kern/kernel.asm	/^f0104334:	8d 55 d4             	lea    -0x2c(%ebp),%edx$/;"	l
f0104337	obj/kern/kernel.asm	/^f0104337:	8b 7d c0             	mov    -0x40(%ebp),%edi$/;"	l
f010433a	obj/kern/kernel.asm	/^f010433a:	89 f8                	mov    %edi,%eax$/;"	l
f010433c	obj/kern/kernel.asm	/^f010433c:	e8 27 fd ff ff       	call   f0104068 <stab_binsearch>$/;"	l
f0104341	obj/kern/kernel.asm	/^f0104341:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0104344	obj/kern/kernel.asm	/^f0104344:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104347	obj/kern/kernel.asm	/^f0104347:	3b 45 d0             	cmp    -0x30(%ebp),%eax$/;"	l
f010434a	obj/kern/kernel.asm	/^f010434a:	0f 8f dd 00 00 00    	jg     f010442d <debuginfo_eip+0x2cf>$/;"	l
f0104350	obj/kern/kernel.asm	/^f0104350:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0104353	obj/kern/kernel.asm	/^f0104353:	8d 14 97             	lea    (%edi,%edx,4),%edx$/;"	l
f0104356	obj/kern/kernel.asm	/^f0104356:	0f b7 4a 06          	movzwl 0x6(%edx),%ecx$/;"	l
f010435a	obj/kern/kernel.asm	/^f010435a:	89 4b 04             	mov    %ecx,0x4(%ebx)$/;"	l
f010435d	obj/kern/kernel.asm	/^f010435d:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0104360	obj/kern/kernel.asm	/^f0104360:	c6 45 c4 00          	movb   $0x0,-0x3c(%ebp)$/;"	l
f0104364	obj/kern/kernel.asm	/^f0104364:	89 5d 0c             	mov    %ebx,0xc(%ebp)$/;"	l
f0104367	obj/kern/kernel.asm	/^f0104367:	eb 0a                	jmp    f0104373 <debuginfo_eip+0x215>$/;"	l
f0104369	obj/kern/kernel.asm	/^f0104369:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010436c	obj/kern/kernel.asm	/^f010436c:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f010436f	obj/kern/kernel.asm	/^f010436f:	c6 45 c4 01          	movb   $0x1,-0x3c(%ebp)$/;"	l
f0104373	obj/kern/kernel.asm	/^f0104373:	39 c7                	cmp    %eax,%edi$/;"	l
f0104375	obj/kern/kernel.asm	/^f0104375:	7e 05                	jle    f010437c <debuginfo_eip+0x21e>$/;"	l
f0104377	obj/kern/kernel.asm	/^f0104377:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f010437a	obj/kern/kernel.asm	/^f010437a:	eb 47                	jmp    f01043c3 <debuginfo_eip+0x265>$/;"	l
f010437c	obj/kern/kernel.asm	/^f010437c:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f0104380	obj/kern/kernel.asm	/^f0104380:	80 f9 84             	cmp    $0x84,%cl$/;"	l
f0104383	obj/kern/kernel.asm	/^f0104383:	75 0e                	jne    f0104393 <debuginfo_eip+0x235>$/;"	l
f0104385	obj/kern/kernel.asm	/^f0104385:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0104388	obj/kern/kernel.asm	/^f0104388:	80 7d c4 00          	cmpb   $0x0,-0x3c(%ebp)$/;"	l
f010438c	obj/kern/kernel.asm	/^f010438c:	74 1c                	je     f01043aa <debuginfo_eip+0x24c>$/;"	l
f010438e	obj/kern/kernel.asm	/^f010438e:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0104391	obj/kern/kernel.asm	/^f0104391:	eb 17                	jmp    f01043aa <debuginfo_eip+0x24c>$/;"	l
f0104393	obj/kern/kernel.asm	/^f0104393:	80 f9 64             	cmp    $0x64,%cl$/;"	l
f0104396	obj/kern/kernel.asm	/^f0104396:	75 d1                	jne    f0104369 <debuginfo_eip+0x20b>$/;"	l
f0104398	obj/kern/kernel.asm	/^f0104398:	83 7a 08 00          	cmpl   $0x0,0x8(%edx)$/;"	l
f010439c	obj/kern/kernel.asm	/^f010439c:	74 cb                	je     f0104369 <debuginfo_eip+0x20b>$/;"	l
f010439e	obj/kern/kernel.asm	/^f010439e:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01043a1	obj/kern/kernel.asm	/^f01043a1:	80 7d c4 00          	cmpb   $0x0,-0x3c(%ebp)$/;"	l
f01043a5	obj/kern/kernel.asm	/^f01043a5:	74 03                	je     f01043aa <debuginfo_eip+0x24c>$/;"	l
f01043a7	obj/kern/kernel.asm	/^f01043a7:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01043aa	obj/kern/kernel.asm	/^f01043aa:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f01043ad	obj/kern/kernel.asm	/^f01043ad:	8b 7d c0             	mov    -0x40(%ebp),%edi$/;"	l
f01043b0	obj/kern/kernel.asm	/^f01043b0:	8b 14 87             	mov    (%edi,%eax,4),%edx$/;"	l
f01043b3	obj/kern/kernel.asm	/^f01043b3:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
f01043b6	obj/kern/kernel.asm	/^f01043b6:	8b 7d b8             	mov    -0x48(%ebp),%edi$/;"	l
f01043b9	obj/kern/kernel.asm	/^f01043b9:	29 f8                	sub    %edi,%eax$/;"	l
f01043bb	obj/kern/kernel.asm	/^f01043bb:	39 c2                	cmp    %eax,%edx$/;"	l
f01043bd	obj/kern/kernel.asm	/^f01043bd:	73 04                	jae    f01043c3 <debuginfo_eip+0x265>$/;"	l
f01043bf	obj/kern/kernel.asm	/^f01043bf:	01 fa                	add    %edi,%edx$/;"	l
f01043c1	obj/kern/kernel.asm	/^f01043c1:	89 13                	mov    %edx,(%ebx)$/;"	l
f01043c3	obj/kern/kernel.asm	/^f01043c3:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f01043c6	obj/kern/kernel.asm	/^f01043c6:	8b 75 d8             	mov    -0x28(%ebp),%esi$/;"	l
f01043c9	obj/kern/kernel.asm	/^f01043c9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01043ce	obj/kern/kernel.asm	/^f01043ce:	39 f2                	cmp    %esi,%edx$/;"	l
f01043d0	obj/kern/kernel.asm	/^f01043d0:	7d 67                	jge    f0104439 <debuginfo_eip+0x2db>$/;"	l
f01043d2	obj/kern/kernel.asm	/^f01043d2:	83 c2 01             	add    $0x1,%edx$/;"	l
f01043d5	obj/kern/kernel.asm	/^f01043d5:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f01043d8	obj/kern/kernel.asm	/^f01043d8:	89 d0                	mov    %edx,%eax$/;"	l
f01043da	obj/kern/kernel.asm	/^f01043da:	8d 14 52             	lea    (%edx,%edx,2),%edx$/;"	l
f01043dd	obj/kern/kernel.asm	/^f01043dd:	8b 7d c0             	mov    -0x40(%ebp),%edi$/;"	l
f01043e0	obj/kern/kernel.asm	/^f01043e0:	8d 14 97             	lea    (%edi,%edx,4),%edx$/;"	l
f01043e3	obj/kern/kernel.asm	/^f01043e3:	eb 04                	jmp    f01043e9 <debuginfo_eip+0x28b>$/;"	l
f01043e5	obj/kern/kernel.asm	/^f01043e5:	83 43 14 01          	addl   $0x1,0x14(%ebx)$/;"	l
f01043e9	obj/kern/kernel.asm	/^f01043e9:	39 c6                	cmp    %eax,%esi$/;"	l
f01043eb	obj/kern/kernel.asm	/^f01043eb:	7e 47                	jle    f0104434 <debuginfo_eip+0x2d6>$/;"	l
f01043ed	obj/kern/kernel.asm	/^f01043ed:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f01043f1	obj/kern/kernel.asm	/^f01043f1:	83 c0 01             	add    $0x1,%eax$/;"	l
f01043f4	obj/kern/kernel.asm	/^f01043f4:	83 c2 0c             	add    $0xc,%edx$/;"	l
f01043f7	obj/kern/kernel.asm	/^f01043f7:	80 f9 a0             	cmp    $0xa0,%cl$/;"	l
f01043fa	obj/kern/kernel.asm	/^f01043fa:	74 e9                	je     f01043e5 <debuginfo_eip+0x287>$/;"	l
f01043fc	obj/kern/kernel.asm	/^f01043fc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104401	obj/kern/kernel.asm	/^f0104401:	eb 36                	jmp    f0104439 <debuginfo_eip+0x2db>$/;"	l
f0104403	obj/kern/kernel.asm	/^f0104403:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104408	obj/kern/kernel.asm	/^f0104408:	eb 2f                	jmp    f0104439 <debuginfo_eip+0x2db>$/;"	l
f010440a	obj/kern/kernel.asm	/^f010440a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010440f	obj/kern/kernel.asm	/^f010440f:	eb 28                	jmp    f0104439 <debuginfo_eip+0x2db>$/;"	l
f0104411	obj/kern/kernel.asm	/^f0104411:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104416	obj/kern/kernel.asm	/^f0104416:	eb 21                	jmp    f0104439 <debuginfo_eip+0x2db>$/;"	l
f0104418	obj/kern/kernel.asm	/^f0104418:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010441d	obj/kern/kernel.asm	/^f010441d:	eb 1a                	jmp    f0104439 <debuginfo_eip+0x2db>$/;"	l
f010441f	obj/kern/kernel.asm	/^f010441f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104424	obj/kern/kernel.asm	/^f0104424:	eb 13                	jmp    f0104439 <debuginfo_eip+0x2db>$/;"	l
f0104426	obj/kern/kernel.asm	/^f0104426:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010442b	obj/kern/kernel.asm	/^f010442b:	eb 0c                	jmp    f0104439 <debuginfo_eip+0x2db>$/;"	l
f010442d	obj/kern/kernel.asm	/^f010442d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104432	obj/kern/kernel.asm	/^f0104432:	eb 05                	jmp    f0104439 <debuginfo_eip+0x2db>$/;"	l
f0104434	obj/kern/kernel.asm	/^f0104434:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104439	obj/kern/kernel.asm	/^f0104439:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010443c	obj/kern/kernel.asm	/^f010443c:	5b                   	pop    %ebx$/;"	l
f010443d	obj/kern/kernel.asm	/^f010443d:	5e                   	pop    %esi$/;"	l
f010443e	obj/kern/kernel.asm	/^f010443e:	5f                   	pop    %edi$/;"	l
f010443f	obj/kern/kernel.asm	/^f010443f:	5d                   	pop    %ebp$/;"	l
f0104440	obj/kern/kernel.asm	/^f0104440:	c3                   	ret    $/;"	l
f0104441	obj/kern/kernel.asm	/^f0104441 <printnum>:$/;"	l
f0104441	obj/kern/kernel.asm	/^f0104441:	55                   	push   %ebp$/;"	l
f0104442	obj/kern/kernel.asm	/^f0104442:	89 e5                	mov    %esp,%ebp$/;"	l
f0104444	obj/kern/kernel.asm	/^f0104444:	57                   	push   %edi$/;"	l
f0104445	obj/kern/kernel.asm	/^f0104445:	56                   	push   %esi$/;"	l
f0104446	obj/kern/kernel.asm	/^f0104446:	53                   	push   %ebx$/;"	l
f0104447	obj/kern/kernel.asm	/^f0104447:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f010444a	obj/kern/kernel.asm	/^f010444a:	89 c7                	mov    %eax,%edi$/;"	l
f010444c	obj/kern/kernel.asm	/^f010444c:	89 d6                	mov    %edx,%esi$/;"	l
f010444e	obj/kern/kernel.asm	/^f010444e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104451	obj/kern/kernel.asm	/^f0104451:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0104454	obj/kern/kernel.asm	/^f0104454:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0104457	obj/kern/kernel.asm	/^f0104457:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f010445a	obj/kern/kernel.asm	/^f010445a:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f010445d	obj/kern/kernel.asm	/^f010445d:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0104462	obj/kern/kernel.asm	/^f0104462:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0104465	obj/kern/kernel.asm	/^f0104465:	89 5d e4             	mov    %ebx,-0x1c(%ebp)$/;"	l
f0104468	obj/kern/kernel.asm	/^f0104468:	39 d3                	cmp    %edx,%ebx$/;"	l
f010446a	obj/kern/kernel.asm	/^f010446a:	72 05                	jb     f0104471 <printnum+0x30>$/;"	l
f010446c	obj/kern/kernel.asm	/^f010446c:	39 45 10             	cmp    %eax,0x10(%ebp)$/;"	l
f010446f	obj/kern/kernel.asm	/^f010446f:	77 45                	ja     f01044b6 <printnum+0x75>$/;"	l
f0104471	obj/kern/kernel.asm	/^f0104471:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104474	obj/kern/kernel.asm	/^f0104474:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f0104477	obj/kern/kernel.asm	/^f0104477:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010447a	obj/kern/kernel.asm	/^f010447a:	8d 58 ff             	lea    -0x1(%eax),%ebx$/;"	l
f010447d	obj/kern/kernel.asm	/^f010447d:	53                   	push   %ebx$/;"	l
f010447e	obj/kern/kernel.asm	/^f010447e:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104481	obj/kern/kernel.asm	/^f0104481:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104484	obj/kern/kernel.asm	/^f0104484:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0104487	obj/kern/kernel.asm	/^f0104487:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f010448a	obj/kern/kernel.asm	/^f010448a:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f010448d	obj/kern/kernel.asm	/^f010448d:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f0104490	obj/kern/kernel.asm	/^f0104490:	e8 5b 11 00 00       	call   f01055f0 <__udivdi3>$/;"	l
f0104495	obj/kern/kernel.asm	/^f0104495:	83 c4 18             	add    $0x18,%esp$/;"	l
f0104498	obj/kern/kernel.asm	/^f0104498:	52                   	push   %edx$/;"	l
f0104499	obj/kern/kernel.asm	/^f0104499:	50                   	push   %eax$/;"	l
f010449a	obj/kern/kernel.asm	/^f010449a:	89 f2                	mov    %esi,%edx$/;"	l
f010449c	obj/kern/kernel.asm	/^f010449c:	89 f8                	mov    %edi,%eax$/;"	l
f010449e	obj/kern/kernel.asm	/^f010449e:	e8 9e ff ff ff       	call   f0104441 <printnum>$/;"	l
f01044a3	obj/kern/kernel.asm	/^f01044a3:	83 c4 20             	add    $0x20,%esp$/;"	l
f01044a6	obj/kern/kernel.asm	/^f01044a6:	eb 18                	jmp    f01044c0 <printnum+0x7f>$/;"	l
f01044a8	obj/kern/kernel.asm	/^f01044a8:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01044ab	obj/kern/kernel.asm	/^f01044ab:	56                   	push   %esi$/;"	l
f01044ac	obj/kern/kernel.asm	/^f01044ac:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f01044af	obj/kern/kernel.asm	/^f01044af:	ff d7                	call   *%edi$/;"	l
f01044b1	obj/kern/kernel.asm	/^f01044b1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01044b4	obj/kern/kernel.asm	/^f01044b4:	eb 03                	jmp    f01044b9 <printnum+0x78>$/;"	l
f01044b6	obj/kern/kernel.asm	/^f01044b6:	8b 5d 14             	mov    0x14(%ebp),%ebx$/;"	l
f01044b9	obj/kern/kernel.asm	/^f01044b9:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01044bc	obj/kern/kernel.asm	/^f01044bc:	85 db                	test   %ebx,%ebx$/;"	l
f01044be	obj/kern/kernel.asm	/^f01044be:	7f e8                	jg     f01044a8 <printnum+0x67>$/;"	l
f01044c0	obj/kern/kernel.asm	/^f01044c0:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01044c3	obj/kern/kernel.asm	/^f01044c3:	56                   	push   %esi$/;"	l
f01044c4	obj/kern/kernel.asm	/^f01044c4:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01044c7	obj/kern/kernel.asm	/^f01044c7:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f01044ca	obj/kern/kernel.asm	/^f01044ca:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f01044cd	obj/kern/kernel.asm	/^f01044cd:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f01044d0	obj/kern/kernel.asm	/^f01044d0:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f01044d3	obj/kern/kernel.asm	/^f01044d3:	e8 48 12 00 00       	call   f0105720 <__umoddi3>$/;"	l
f01044d8	obj/kern/kernel.asm	/^f01044d8:	83 c4 14             	add    $0x14,%esp$/;"	l
f01044db	obj/kern/kernel.asm	/^f01044db:	0f be 80 a8 6f 10 f0 	movsbl -0xfef9058(%eax),%eax$/;"	l
f01044e2	obj/kern/kernel.asm	/^f01044e2:	50                   	push   %eax$/;"	l
f01044e3	obj/kern/kernel.asm	/^f01044e3:	ff d7                	call   *%edi$/;"	l
f01044e5	obj/kern/kernel.asm	/^f01044e5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01044e8	obj/kern/kernel.asm	/^f01044e8:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01044eb	obj/kern/kernel.asm	/^f01044eb:	5b                   	pop    %ebx$/;"	l
f01044ec	obj/kern/kernel.asm	/^f01044ec:	5e                   	pop    %esi$/;"	l
f01044ed	obj/kern/kernel.asm	/^f01044ed:	5f                   	pop    %edi$/;"	l
f01044ee	obj/kern/kernel.asm	/^f01044ee:	5d                   	pop    %ebp$/;"	l
f01044ef	obj/kern/kernel.asm	/^f01044ef:	c3                   	ret    $/;"	l
f01044f0	obj/kern/kernel.asm	/^f01044f0 <getuint>:$/;"	l
f01044f0	obj/kern/kernel.asm	/^f01044f0:	55                   	push   %ebp$/;"	l
f01044f1	obj/kern/kernel.asm	/^f01044f1:	89 e5                	mov    %esp,%ebp$/;"	l
f01044f3	obj/kern/kernel.asm	/^f01044f3:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f01044f6	obj/kern/kernel.asm	/^f01044f6:	7e 0e                	jle    f0104506 <getuint+0x16>$/;"	l
f01044f8	obj/kern/kernel.asm	/^f01044f8:	8b 10                	mov    (%eax),%edx$/;"	l
f01044fa	obj/kern/kernel.asm	/^f01044fa:	8d 4a 08             	lea    0x8(%edx),%ecx$/;"	l
f01044fd	obj/kern/kernel.asm	/^f01044fd:	89 08                	mov    %ecx,(%eax)$/;"	l
f01044ff	obj/kern/kernel.asm	/^f01044ff:	8b 02                	mov    (%edx),%eax$/;"	l
f0104501	obj/kern/kernel.asm	/^f0104501:	8b 52 04             	mov    0x4(%edx),%edx$/;"	l
f0104504	obj/kern/kernel.asm	/^f0104504:	eb 22                	jmp    f0104528 <getuint+0x38>$/;"	l
f0104506	obj/kern/kernel.asm	/^f0104506:	85 d2                	test   %edx,%edx$/;"	l
f0104508	obj/kern/kernel.asm	/^f0104508:	74 10                	je     f010451a <getuint+0x2a>$/;"	l
f010450a	obj/kern/kernel.asm	/^f010450a:	8b 10                	mov    (%eax),%edx$/;"	l
f010450c	obj/kern/kernel.asm	/^f010450c:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f010450f	obj/kern/kernel.asm	/^f010450f:	89 08                	mov    %ecx,(%eax)$/;"	l
f0104511	obj/kern/kernel.asm	/^f0104511:	8b 02                	mov    (%edx),%eax$/;"	l
f0104513	obj/kern/kernel.asm	/^f0104513:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104518	obj/kern/kernel.asm	/^f0104518:	eb 0e                	jmp    f0104528 <getuint+0x38>$/;"	l
f010451a	obj/kern/kernel.asm	/^f010451a:	8b 10                	mov    (%eax),%edx$/;"	l
f010451c	obj/kern/kernel.asm	/^f010451c:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f010451f	obj/kern/kernel.asm	/^f010451f:	89 08                	mov    %ecx,(%eax)$/;"	l
f0104521	obj/kern/kernel.asm	/^f0104521:	8b 02                	mov    (%edx),%eax$/;"	l
f0104523	obj/kern/kernel.asm	/^f0104523:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104528	obj/kern/kernel.asm	/^f0104528:	5d                   	pop    %ebp$/;"	l
f0104529	obj/kern/kernel.asm	/^f0104529:	c3                   	ret    $/;"	l
f010452a	obj/kern/kernel.asm	/^f010452a <sprintputch>:$/;"	l
f010452a	obj/kern/kernel.asm	/^f010452a:	55                   	push   %ebp$/;"	l
f010452b	obj/kern/kernel.asm	/^f010452b:	89 e5                	mov    %esp,%ebp$/;"	l
f010452d	obj/kern/kernel.asm	/^f010452d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104530	obj/kern/kernel.asm	/^f0104530:	83 40 08 01          	addl   $0x1,0x8(%eax)$/;"	l
f0104534	obj/kern/kernel.asm	/^f0104534:	8b 10                	mov    (%eax),%edx$/;"	l
f0104536	obj/kern/kernel.asm	/^f0104536:	3b 50 04             	cmp    0x4(%eax),%edx$/;"	l
f0104539	obj/kern/kernel.asm	/^f0104539:	73 0a                	jae    f0104545 <sprintputch+0x1b>$/;"	l
f010453b	obj/kern/kernel.asm	/^f010453b:	8d 4a 01             	lea    0x1(%edx),%ecx$/;"	l
f010453e	obj/kern/kernel.asm	/^f010453e:	89 08                	mov    %ecx,(%eax)$/;"	l
f0104540	obj/kern/kernel.asm	/^f0104540:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104543	obj/kern/kernel.asm	/^f0104543:	88 02                	mov    %al,(%edx)$/;"	l
f0104545	obj/kern/kernel.asm	/^f0104545:	5d                   	pop    %ebp$/;"	l
f0104546	obj/kern/kernel.asm	/^f0104546:	c3                   	ret    $/;"	l
f0104547	obj/kern/kernel.asm	/^f0104547 <printfmt>:$/;"	l
f0104547	obj/kern/kernel.asm	/^f0104547:	55                   	push   %ebp$/;"	l
f0104548	obj/kern/kernel.asm	/^f0104548:	89 e5                	mov    %esp,%ebp$/;"	l
f010454a	obj/kern/kernel.asm	/^f010454a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010454d	obj/kern/kernel.asm	/^f010454d:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0104550	obj/kern/kernel.asm	/^f0104550:	50                   	push   %eax$/;"	l
f0104551	obj/kern/kernel.asm	/^f0104551:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104554	obj/kern/kernel.asm	/^f0104554:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104557	obj/kern/kernel.asm	/^f0104557:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010455a	obj/kern/kernel.asm	/^f010455a:	e8 05 00 00 00       	call   f0104564 <vprintfmt>$/;"	l
f010455f	obj/kern/kernel.asm	/^f010455f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104562	obj/kern/kernel.asm	/^f0104562:	c9                   	leave  $/;"	l
f0104563	obj/kern/kernel.asm	/^f0104563:	c3                   	ret    $/;"	l
f0104564	obj/kern/kernel.asm	/^f0104564 <vprintfmt>:$/;"	l
f0104564	obj/kern/kernel.asm	/^f0104564:	55                   	push   %ebp$/;"	l
f0104565	obj/kern/kernel.asm	/^f0104565:	89 e5                	mov    %esp,%ebp$/;"	l
f0104567	obj/kern/kernel.asm	/^f0104567:	57                   	push   %edi$/;"	l
f0104568	obj/kern/kernel.asm	/^f0104568:	56                   	push   %esi$/;"	l
f0104569	obj/kern/kernel.asm	/^f0104569:	53                   	push   %ebx$/;"	l
f010456a	obj/kern/kernel.asm	/^f010456a:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f010456d	obj/kern/kernel.asm	/^f010456d:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104570	obj/kern/kernel.asm	/^f0104570:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0104573	obj/kern/kernel.asm	/^f0104573:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f0104576	obj/kern/kernel.asm	/^f0104576:	eb 12                	jmp    f010458a <vprintfmt+0x26>$/;"	l
f0104578	obj/kern/kernel.asm	/^f0104578:	85 c0                	test   %eax,%eax$/;"	l
f010457a	obj/kern/kernel.asm	/^f010457a:	0f 84 89 03 00 00    	je     f0104909 <vprintfmt+0x3a5>$/;"	l
f0104580	obj/kern/kernel.asm	/^f0104580:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104583	obj/kern/kernel.asm	/^f0104583:	53                   	push   %ebx$/;"	l
f0104584	obj/kern/kernel.asm	/^f0104584:	50                   	push   %eax$/;"	l
f0104585	obj/kern/kernel.asm	/^f0104585:	ff d6                	call   *%esi$/;"	l
f0104587	obj/kern/kernel.asm	/^f0104587:	83 c4 10             	add    $0x10,%esp$/;"	l
f010458a	obj/kern/kernel.asm	/^f010458a:	83 c7 01             	add    $0x1,%edi$/;"	l
f010458d	obj/kern/kernel.asm	/^f010458d:	0f b6 47 ff          	movzbl -0x1(%edi),%eax$/;"	l
f0104591	obj/kern/kernel.asm	/^f0104591:	83 f8 25             	cmp    $0x25,%eax$/;"	l
f0104594	obj/kern/kernel.asm	/^f0104594:	75 e2                	jne    f0104578 <vprintfmt+0x14>$/;"	l
f0104596	obj/kern/kernel.asm	/^f0104596:	c6 45 d4 20          	movb   $0x20,-0x2c(%ebp)$/;"	l
f010459a	obj/kern/kernel.asm	/^f010459a:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)$/;"	l
f01045a1	obj/kern/kernel.asm	/^f01045a1:	c7 45 d0 ff ff ff ff 	movl   $0xffffffff,-0x30(%ebp)$/;"	l
f01045a8	obj/kern/kernel.asm	/^f01045a8:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)$/;"	l
f01045af	obj/kern/kernel.asm	/^f01045af:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01045b4	obj/kern/kernel.asm	/^f01045b4:	eb 07                	jmp    f01045bd <vprintfmt+0x59>$/;"	l
f01045b6	obj/kern/kernel.asm	/^f01045b6:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01045b9	obj/kern/kernel.asm	/^f01045b9:	c6 45 d4 2d          	movb   $0x2d,-0x2c(%ebp)$/;"	l
f01045bd	obj/kern/kernel.asm	/^f01045bd:	8d 47 01             	lea    0x1(%edi),%eax$/;"	l
f01045c0	obj/kern/kernel.asm	/^f01045c0:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01045c3	obj/kern/kernel.asm	/^f01045c3:	0f b6 07             	movzbl (%edi),%eax$/;"	l
f01045c6	obj/kern/kernel.asm	/^f01045c6:	0f b6 c8             	movzbl %al,%ecx$/;"	l
f01045c9	obj/kern/kernel.asm	/^f01045c9:	83 e8 23             	sub    $0x23,%eax$/;"	l
f01045cc	obj/kern/kernel.asm	/^f01045cc:	3c 55                	cmp    $0x55,%al$/;"	l
f01045ce	obj/kern/kernel.asm	/^f01045ce:	0f 87 1a 03 00 00    	ja     f01048ee <vprintfmt+0x38a>$/;"	l
f01045d4	obj/kern/kernel.asm	/^f01045d4:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01045d7	obj/kern/kernel.asm	/^f01045d7:	ff 24 85 60 70 10 f0 	jmp    *-0xfef8fa0(,%eax,4)$/;"	l
f01045de	obj/kern/kernel.asm	/^f01045de:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01045e1	obj/kern/kernel.asm	/^f01045e1:	c6 45 d4 30          	movb   $0x30,-0x2c(%ebp)$/;"	l
f01045e5	obj/kern/kernel.asm	/^f01045e5:	eb d6                	jmp    f01045bd <vprintfmt+0x59>$/;"	l
f01045e7	obj/kern/kernel.asm	/^f01045e7:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01045ea	obj/kern/kernel.asm	/^f01045ea:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01045ef	obj/kern/kernel.asm	/^f01045ef:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f01045f2	obj/kern/kernel.asm	/^f01045f2:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f01045f5	obj/kern/kernel.asm	/^f01045f5:	8d 44 41 d0          	lea    -0x30(%ecx,%eax,2),%eax$/;"	l
f01045f9	obj/kern/kernel.asm	/^f01045f9:	0f be 0f             	movsbl (%edi),%ecx$/;"	l
f01045fc	obj/kern/kernel.asm	/^f01045fc:	8d 51 d0             	lea    -0x30(%ecx),%edx$/;"	l
f01045ff	obj/kern/kernel.asm	/^f01045ff:	83 fa 09             	cmp    $0x9,%edx$/;"	l
f0104602	obj/kern/kernel.asm	/^f0104602:	77 39                	ja     f010463d <vprintfmt+0xd9>$/;"	l
f0104604	obj/kern/kernel.asm	/^f0104604:	83 c7 01             	add    $0x1,%edi$/;"	l
f0104607	obj/kern/kernel.asm	/^f0104607:	eb e9                	jmp    f01045f2 <vprintfmt+0x8e>$/;"	l
f0104609	obj/kern/kernel.asm	/^f0104609:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010460c	obj/kern/kernel.asm	/^f010460c:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
f010460f	obj/kern/kernel.asm	/^f010460f:	89 4d 14             	mov    %ecx,0x14(%ebp)$/;"	l
f0104612	obj/kern/kernel.asm	/^f0104612:	8b 00                	mov    (%eax),%eax$/;"	l
f0104614	obj/kern/kernel.asm	/^f0104614:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0104617	obj/kern/kernel.asm	/^f0104617:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010461a	obj/kern/kernel.asm	/^f010461a:	eb 27                	jmp    f0104643 <vprintfmt+0xdf>$/;"	l
f010461c	obj/kern/kernel.asm	/^f010461c:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010461f	obj/kern/kernel.asm	/^f010461f:	85 c0                	test   %eax,%eax$/;"	l
f0104621	obj/kern/kernel.asm	/^f0104621:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0104626	obj/kern/kernel.asm	/^f0104626:	0f 49 c8             	cmovns %eax,%ecx$/;"	l
f0104629	obj/kern/kernel.asm	/^f0104629:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f010462c	obj/kern/kernel.asm	/^f010462c:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010462f	obj/kern/kernel.asm	/^f010462f:	eb 8c                	jmp    f01045bd <vprintfmt+0x59>$/;"	l
f0104631	obj/kern/kernel.asm	/^f0104631:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0104634	obj/kern/kernel.asm	/^f0104634:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)$/;"	l
f010463b	obj/kern/kernel.asm	/^f010463b:	eb 80                	jmp    f01045bd <vprintfmt+0x59>$/;"	l
f010463d	obj/kern/kernel.asm	/^f010463d:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0104640	obj/kern/kernel.asm	/^f0104640:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0104643	obj/kern/kernel.asm	/^f0104643:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f0104647	obj/kern/kernel.asm	/^f0104647:	0f 89 70 ff ff ff    	jns    f01045bd <vprintfmt+0x59>$/;"	l
f010464d	obj/kern/kernel.asm	/^f010464d:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0104650	obj/kern/kernel.asm	/^f0104650:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0104653	obj/kern/kernel.asm	/^f0104653:	c7 45 d0 ff ff ff ff 	movl   $0xffffffff,-0x30(%ebp)$/;"	l
f010465a	obj/kern/kernel.asm	/^f010465a:	e9 5e ff ff ff       	jmp    f01045bd <vprintfmt+0x59>$/;"	l
f010465f	obj/kern/kernel.asm	/^f010465f:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104662	obj/kern/kernel.asm	/^f0104662:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0104665	obj/kern/kernel.asm	/^f0104665:	e9 53 ff ff ff       	jmp    f01045bd <vprintfmt+0x59>$/;"	l
f010466a	obj/kern/kernel.asm	/^f010466a:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010466d	obj/kern/kernel.asm	/^f010466d:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0104670	obj/kern/kernel.asm	/^f0104670:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0104673	obj/kern/kernel.asm	/^f0104673:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104676	obj/kern/kernel.asm	/^f0104676:	53                   	push   %ebx$/;"	l
f0104677	obj/kern/kernel.asm	/^f0104677:	ff 30                	pushl  (%eax)$/;"	l
f0104679	obj/kern/kernel.asm	/^f0104679:	ff d6                	call   *%esi$/;"	l
f010467b	obj/kern/kernel.asm	/^f010467b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010467e	obj/kern/kernel.asm	/^f010467e:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0104681	obj/kern/kernel.asm	/^f0104681:	e9 04 ff ff ff       	jmp    f010458a <vprintfmt+0x26>$/;"	l
f0104686	obj/kern/kernel.asm	/^f0104686:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104689	obj/kern/kernel.asm	/^f0104689:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f010468c	obj/kern/kernel.asm	/^f010468c:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f010468f	obj/kern/kernel.asm	/^f010468f:	8b 00                	mov    (%eax),%eax$/;"	l
f0104691	obj/kern/kernel.asm	/^f0104691:	99                   	cltd   $/;"	l
f0104692	obj/kern/kernel.asm	/^f0104692:	31 d0                	xor    %edx,%eax$/;"	l
f0104694	obj/kern/kernel.asm	/^f0104694:	29 d0                	sub    %edx,%eax$/;"	l
f0104696	obj/kern/kernel.asm	/^f0104696:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0104699	obj/kern/kernel.asm	/^f0104699:	7f 0b                	jg     f01046a6 <vprintfmt+0x142>$/;"	l
f010469b	obj/kern/kernel.asm	/^f010469b:	8b 14 85 c0 71 10 f0 	mov    -0xfef8e40(,%eax,4),%edx$/;"	l
f01046a2	obj/kern/kernel.asm	/^f01046a2:	85 d2                	test   %edx,%edx$/;"	l
f01046a4	obj/kern/kernel.asm	/^f01046a4:	75 18                	jne    f01046be <vprintfmt+0x15a>$/;"	l
f01046a6	obj/kern/kernel.asm	/^f01046a6:	50                   	push   %eax$/;"	l
f01046a7	obj/kern/kernel.asm	/^f01046a7:	68 c0 6f 10 f0       	push   $0xf0106fc0$/;"	l
f01046ac	obj/kern/kernel.asm	/^f01046ac:	53                   	push   %ebx$/;"	l
f01046ad	obj/kern/kernel.asm	/^f01046ad:	56                   	push   %esi$/;"	l
f01046ae	obj/kern/kernel.asm	/^f01046ae:	e8 94 fe ff ff       	call   f0104547 <printfmt>$/;"	l
f01046b3	obj/kern/kernel.asm	/^f01046b3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01046b6	obj/kern/kernel.asm	/^f01046b6:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01046b9	obj/kern/kernel.asm	/^f01046b9:	e9 cc fe ff ff       	jmp    f010458a <vprintfmt+0x26>$/;"	l
f01046be	obj/kern/kernel.asm	/^f01046be:	52                   	push   %edx$/;"	l
f01046bf	obj/kern/kernel.asm	/^f01046bf:	68 a4 67 10 f0       	push   $0xf01067a4$/;"	l
f01046c4	obj/kern/kernel.asm	/^f01046c4:	53                   	push   %ebx$/;"	l
f01046c5	obj/kern/kernel.asm	/^f01046c5:	56                   	push   %esi$/;"	l
f01046c6	obj/kern/kernel.asm	/^f01046c6:	e8 7c fe ff ff       	call   f0104547 <printfmt>$/;"	l
f01046cb	obj/kern/kernel.asm	/^f01046cb:	83 c4 10             	add    $0x10,%esp$/;"	l
f01046ce	obj/kern/kernel.asm	/^f01046ce:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01046d1	obj/kern/kernel.asm	/^f01046d1:	e9 b4 fe ff ff       	jmp    f010458a <vprintfmt+0x26>$/;"	l
f01046d6	obj/kern/kernel.asm	/^f01046d6:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01046d9	obj/kern/kernel.asm	/^f01046d9:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f01046dc	obj/kern/kernel.asm	/^f01046dc:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01046df	obj/kern/kernel.asm	/^f01046df:	8b 38                	mov    (%eax),%edi$/;"	l
f01046e1	obj/kern/kernel.asm	/^f01046e1:	85 ff                	test   %edi,%edi$/;"	l
f01046e3	obj/kern/kernel.asm	/^f01046e3:	b8 b9 6f 10 f0       	mov    $0xf0106fb9,%eax$/;"	l
f01046e8	obj/kern/kernel.asm	/^f01046e8:	0f 44 f8             	cmove  %eax,%edi$/;"	l
f01046eb	obj/kern/kernel.asm	/^f01046eb:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f01046ef	obj/kern/kernel.asm	/^f01046ef:	0f 8e 94 00 00 00    	jle    f0104789 <vprintfmt+0x225>$/;"	l
f01046f5	obj/kern/kernel.asm	/^f01046f5:	80 7d d4 2d          	cmpb   $0x2d,-0x2c(%ebp)$/;"	l
f01046f9	obj/kern/kernel.asm	/^f01046f9:	0f 84 98 00 00 00    	je     f0104797 <vprintfmt+0x233>$/;"	l
f01046ff	obj/kern/kernel.asm	/^f01046ff:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104702	obj/kern/kernel.asm	/^f0104702:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f0104705	obj/kern/kernel.asm	/^f0104705:	57                   	push   %edi$/;"	l
f0104706	obj/kern/kernel.asm	/^f0104706:	e8 5f 03 00 00       	call   f0104a6a <strnlen>$/;"	l
f010470b	obj/kern/kernel.asm	/^f010470b:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f010470e	obj/kern/kernel.asm	/^f010470e:	29 c1                	sub    %eax,%ecx$/;"	l
f0104710	obj/kern/kernel.asm	/^f0104710:	89 4d cc             	mov    %ecx,-0x34(%ebp)$/;"	l
f0104713	obj/kern/kernel.asm	/^f0104713:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104716	obj/kern/kernel.asm	/^f0104716:	0f be 45 d4          	movsbl -0x2c(%ebp),%eax$/;"	l
f010471a	obj/kern/kernel.asm	/^f010471a:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f010471d	obj/kern/kernel.asm	/^f010471d:	89 7d d4             	mov    %edi,-0x2c(%ebp)$/;"	l
f0104720	obj/kern/kernel.asm	/^f0104720:	89 cf                	mov    %ecx,%edi$/;"	l
f0104722	obj/kern/kernel.asm	/^f0104722:	eb 0f                	jmp    f0104733 <vprintfmt+0x1cf>$/;"	l
f0104724	obj/kern/kernel.asm	/^f0104724:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104727	obj/kern/kernel.asm	/^f0104727:	53                   	push   %ebx$/;"	l
f0104728	obj/kern/kernel.asm	/^f0104728:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f010472b	obj/kern/kernel.asm	/^f010472b:	ff d6                	call   *%esi$/;"	l
f010472d	obj/kern/kernel.asm	/^f010472d:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0104730	obj/kern/kernel.asm	/^f0104730:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104733	obj/kern/kernel.asm	/^f0104733:	85 ff                	test   %edi,%edi$/;"	l
f0104735	obj/kern/kernel.asm	/^f0104735:	7f ed                	jg     f0104724 <vprintfmt+0x1c0>$/;"	l
f0104737	obj/kern/kernel.asm	/^f0104737:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f010473a	obj/kern/kernel.asm	/^f010473a:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
f010473d	obj/kern/kernel.asm	/^f010473d:	85 c9                	test   %ecx,%ecx$/;"	l
f010473f	obj/kern/kernel.asm	/^f010473f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104744	obj/kern/kernel.asm	/^f0104744:	0f 49 c1             	cmovns %ecx,%eax$/;"	l
f0104747	obj/kern/kernel.asm	/^f0104747:	29 c1                	sub    %eax,%ecx$/;"	l
f0104749	obj/kern/kernel.asm	/^f0104749:	89 75 08             	mov    %esi,0x8(%ebp)$/;"	l
f010474c	obj/kern/kernel.asm	/^f010474c:	8b 75 d0             	mov    -0x30(%ebp),%esi$/;"	l
f010474f	obj/kern/kernel.asm	/^f010474f:	89 5d 0c             	mov    %ebx,0xc(%ebp)$/;"	l
f0104752	obj/kern/kernel.asm	/^f0104752:	89 cb                	mov    %ecx,%ebx$/;"	l
f0104754	obj/kern/kernel.asm	/^f0104754:	eb 4d                	jmp    f01047a3 <vprintfmt+0x23f>$/;"	l
f0104756	obj/kern/kernel.asm	/^f0104756:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
f010475a	obj/kern/kernel.asm	/^f010475a:	74 1b                	je     f0104777 <vprintfmt+0x213>$/;"	l
f010475c	obj/kern/kernel.asm	/^f010475c:	0f be c0             	movsbl %al,%eax$/;"	l
f010475f	obj/kern/kernel.asm	/^f010475f:	83 e8 20             	sub    $0x20,%eax$/;"	l
f0104762	obj/kern/kernel.asm	/^f0104762:	83 f8 5e             	cmp    $0x5e,%eax$/;"	l
f0104765	obj/kern/kernel.asm	/^f0104765:	76 10                	jbe    f0104777 <vprintfmt+0x213>$/;"	l
f0104767	obj/kern/kernel.asm	/^f0104767:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010476a	obj/kern/kernel.asm	/^f010476a:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010476d	obj/kern/kernel.asm	/^f010476d:	6a 3f                	push   $0x3f$/;"	l
f010476f	obj/kern/kernel.asm	/^f010476f:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0104772	obj/kern/kernel.asm	/^f0104772:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104775	obj/kern/kernel.asm	/^f0104775:	eb 0d                	jmp    f0104784 <vprintfmt+0x220>$/;"	l
f0104777	obj/kern/kernel.asm	/^f0104777:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010477a	obj/kern/kernel.asm	/^f010477a:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010477d	obj/kern/kernel.asm	/^f010477d:	52                   	push   %edx$/;"	l
f010477e	obj/kern/kernel.asm	/^f010477e:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0104781	obj/kern/kernel.asm	/^f0104781:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104784	obj/kern/kernel.asm	/^f0104784:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0104787	obj/kern/kernel.asm	/^f0104787:	eb 1a                	jmp    f01047a3 <vprintfmt+0x23f>$/;"	l
f0104789	obj/kern/kernel.asm	/^f0104789:	89 75 08             	mov    %esi,0x8(%ebp)$/;"	l
f010478c	obj/kern/kernel.asm	/^f010478c:	8b 75 d0             	mov    -0x30(%ebp),%esi$/;"	l
f010478f	obj/kern/kernel.asm	/^f010478f:	89 5d 0c             	mov    %ebx,0xc(%ebp)$/;"	l
f0104792	obj/kern/kernel.asm	/^f0104792:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f0104795	obj/kern/kernel.asm	/^f0104795:	eb 0c                	jmp    f01047a3 <vprintfmt+0x23f>$/;"	l
f0104797	obj/kern/kernel.asm	/^f0104797:	89 75 08             	mov    %esi,0x8(%ebp)$/;"	l
f010479a	obj/kern/kernel.asm	/^f010479a:	8b 75 d0             	mov    -0x30(%ebp),%esi$/;"	l
f010479d	obj/kern/kernel.asm	/^f010479d:	89 5d 0c             	mov    %ebx,0xc(%ebp)$/;"	l
f01047a0	obj/kern/kernel.asm	/^f01047a0:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f01047a3	obj/kern/kernel.asm	/^f01047a3:	83 c7 01             	add    $0x1,%edi$/;"	l
f01047a6	obj/kern/kernel.asm	/^f01047a6:	0f b6 47 ff          	movzbl -0x1(%edi),%eax$/;"	l
f01047aa	obj/kern/kernel.asm	/^f01047aa:	0f be d0             	movsbl %al,%edx$/;"	l
f01047ad	obj/kern/kernel.asm	/^f01047ad:	85 d2                	test   %edx,%edx$/;"	l
f01047af	obj/kern/kernel.asm	/^f01047af:	74 23                	je     f01047d4 <vprintfmt+0x270>$/;"	l
f01047b1	obj/kern/kernel.asm	/^f01047b1:	85 f6                	test   %esi,%esi$/;"	l
f01047b3	obj/kern/kernel.asm	/^f01047b3:	78 a1                	js     f0104756 <vprintfmt+0x1f2>$/;"	l
f01047b5	obj/kern/kernel.asm	/^f01047b5:	83 ee 01             	sub    $0x1,%esi$/;"	l
f01047b8	obj/kern/kernel.asm	/^f01047b8:	79 9c                	jns    f0104756 <vprintfmt+0x1f2>$/;"	l
f01047ba	obj/kern/kernel.asm	/^f01047ba:	89 df                	mov    %ebx,%edi$/;"	l
f01047bc	obj/kern/kernel.asm	/^f01047bc:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01047bf	obj/kern/kernel.asm	/^f01047bf:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01047c2	obj/kern/kernel.asm	/^f01047c2:	eb 18                	jmp    f01047dc <vprintfmt+0x278>$/;"	l
f01047c4	obj/kern/kernel.asm	/^f01047c4:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01047c7	obj/kern/kernel.asm	/^f01047c7:	53                   	push   %ebx$/;"	l
f01047c8	obj/kern/kernel.asm	/^f01047c8:	6a 20                	push   $0x20$/;"	l
f01047ca	obj/kern/kernel.asm	/^f01047ca:	ff d6                	call   *%esi$/;"	l
f01047cc	obj/kern/kernel.asm	/^f01047cc:	83 ef 01             	sub    $0x1,%edi$/;"	l
f01047cf	obj/kern/kernel.asm	/^f01047cf:	83 c4 10             	add    $0x10,%esp$/;"	l
f01047d2	obj/kern/kernel.asm	/^f01047d2:	eb 08                	jmp    f01047dc <vprintfmt+0x278>$/;"	l
f01047d4	obj/kern/kernel.asm	/^f01047d4:	89 df                	mov    %ebx,%edi$/;"	l
f01047d6	obj/kern/kernel.asm	/^f01047d6:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01047d9	obj/kern/kernel.asm	/^f01047d9:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01047dc	obj/kern/kernel.asm	/^f01047dc:	85 ff                	test   %edi,%edi$/;"	l
f01047de	obj/kern/kernel.asm	/^f01047de:	7f e4                	jg     f01047c4 <vprintfmt+0x260>$/;"	l
f01047e0	obj/kern/kernel.asm	/^f01047e0:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01047e3	obj/kern/kernel.asm	/^f01047e3:	e9 a2 fd ff ff       	jmp    f010458a <vprintfmt+0x26>$/;"	l
f01047e8	obj/kern/kernel.asm	/^f01047e8:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f01047eb	obj/kern/kernel.asm	/^f01047eb:	7e 16                	jle    f0104803 <vprintfmt+0x29f>$/;"	l
f01047ed	obj/kern/kernel.asm	/^f01047ed:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01047f0	obj/kern/kernel.asm	/^f01047f0:	8d 50 08             	lea    0x8(%eax),%edx$/;"	l
f01047f3	obj/kern/kernel.asm	/^f01047f3:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01047f6	obj/kern/kernel.asm	/^f01047f6:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f01047f9	obj/kern/kernel.asm	/^f01047f9:	8b 00                	mov    (%eax),%eax$/;"	l
f01047fb	obj/kern/kernel.asm	/^f01047fb:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f01047fe	obj/kern/kernel.asm	/^f01047fe:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0104801	obj/kern/kernel.asm	/^f0104801:	eb 32                	jmp    f0104835 <vprintfmt+0x2d1>$/;"	l
f0104803	obj/kern/kernel.asm	/^f0104803:	85 d2                	test   %edx,%edx$/;"	l
f0104805	obj/kern/kernel.asm	/^f0104805:	74 18                	je     f010481f <vprintfmt+0x2bb>$/;"	l
f0104807	obj/kern/kernel.asm	/^f0104807:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010480a	obj/kern/kernel.asm	/^f010480a:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f010480d	obj/kern/kernel.asm	/^f010480d:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0104810	obj/kern/kernel.asm	/^f0104810:	8b 00                	mov    (%eax),%eax$/;"	l
f0104812	obj/kern/kernel.asm	/^f0104812:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0104815	obj/kern/kernel.asm	/^f0104815:	89 c1                	mov    %eax,%ecx$/;"	l
f0104817	obj/kern/kernel.asm	/^f0104817:	c1 f9 1f             	sar    $0x1f,%ecx$/;"	l
f010481a	obj/kern/kernel.asm	/^f010481a:	89 4d dc             	mov    %ecx,-0x24(%ebp)$/;"	l
f010481d	obj/kern/kernel.asm	/^f010481d:	eb 16                	jmp    f0104835 <vprintfmt+0x2d1>$/;"	l
f010481f	obj/kern/kernel.asm	/^f010481f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104822	obj/kern/kernel.asm	/^f0104822:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0104825	obj/kern/kernel.asm	/^f0104825:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0104828	obj/kern/kernel.asm	/^f0104828:	8b 00                	mov    (%eax),%eax$/;"	l
f010482a	obj/kern/kernel.asm	/^f010482a:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f010482d	obj/kern/kernel.asm	/^f010482d:	89 c1                	mov    %eax,%ecx$/;"	l
f010482f	obj/kern/kernel.asm	/^f010482f:	c1 f9 1f             	sar    $0x1f,%ecx$/;"	l
f0104832	obj/kern/kernel.asm	/^f0104832:	89 4d dc             	mov    %ecx,-0x24(%ebp)$/;"	l
f0104835	obj/kern/kernel.asm	/^f0104835:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0104838	obj/kern/kernel.asm	/^f0104838:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f010483b	obj/kern/kernel.asm	/^f010483b:	b9 0a 00 00 00       	mov    $0xa,%ecx$/;"	l
f0104840	obj/kern/kernel.asm	/^f0104840:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
f0104844	obj/kern/kernel.asm	/^f0104844:	79 74                	jns    f01048ba <vprintfmt+0x356>$/;"	l
f0104846	obj/kern/kernel.asm	/^f0104846:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104849	obj/kern/kernel.asm	/^f0104849:	53                   	push   %ebx$/;"	l
f010484a	obj/kern/kernel.asm	/^f010484a:	6a 2d                	push   $0x2d$/;"	l
f010484c	obj/kern/kernel.asm	/^f010484c:	ff d6                	call   *%esi$/;"	l
f010484e	obj/kern/kernel.asm	/^f010484e:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0104851	obj/kern/kernel.asm	/^f0104851:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0104854	obj/kern/kernel.asm	/^f0104854:	f7 d8                	neg    %eax$/;"	l
f0104856	obj/kern/kernel.asm	/^f0104856:	83 d2 00             	adc    $0x0,%edx$/;"	l
f0104859	obj/kern/kernel.asm	/^f0104859:	f7 da                	neg    %edx$/;"	l
f010485b	obj/kern/kernel.asm	/^f010485b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010485e	obj/kern/kernel.asm	/^f010485e:	b9 0a 00 00 00       	mov    $0xa,%ecx$/;"	l
f0104863	obj/kern/kernel.asm	/^f0104863:	eb 55                	jmp    f01048ba <vprintfmt+0x356>$/;"	l
f0104865	obj/kern/kernel.asm	/^f0104865:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0104868	obj/kern/kernel.asm	/^f0104868:	e8 83 fc ff ff       	call   f01044f0 <getuint>$/;"	l
f010486d	obj/kern/kernel.asm	/^f010486d:	b9 0a 00 00 00       	mov    $0xa,%ecx$/;"	l
f0104872	obj/kern/kernel.asm	/^f0104872:	eb 46                	jmp    f01048ba <vprintfmt+0x356>$/;"	l
f0104874	obj/kern/kernel.asm	/^f0104874:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0104877	obj/kern/kernel.asm	/^f0104877:	e8 74 fc ff ff       	call   f01044f0 <getuint>$/;"	l
f010487c	obj/kern/kernel.asm	/^f010487c:	b9 08 00 00 00       	mov    $0x8,%ecx$/;"	l
f0104881	obj/kern/kernel.asm	/^f0104881:	eb 37                	jmp    f01048ba <vprintfmt+0x356>$/;"	l
f0104883	obj/kern/kernel.asm	/^f0104883:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104886	obj/kern/kernel.asm	/^f0104886:	53                   	push   %ebx$/;"	l
f0104887	obj/kern/kernel.asm	/^f0104887:	6a 30                	push   $0x30$/;"	l
f0104889	obj/kern/kernel.asm	/^f0104889:	ff d6                	call   *%esi$/;"	l
f010488b	obj/kern/kernel.asm	/^f010488b:	83 c4 08             	add    $0x8,%esp$/;"	l
f010488e	obj/kern/kernel.asm	/^f010488e:	53                   	push   %ebx$/;"	l
f010488f	obj/kern/kernel.asm	/^f010488f:	6a 78                	push   $0x78$/;"	l
f0104891	obj/kern/kernel.asm	/^f0104891:	ff d6                	call   *%esi$/;"	l
f0104893	obj/kern/kernel.asm	/^f0104893:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104896	obj/kern/kernel.asm	/^f0104896:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0104899	obj/kern/kernel.asm	/^f0104899:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f010489c	obj/kern/kernel.asm	/^f010489c:	8b 00                	mov    (%eax),%eax$/;"	l
f010489e	obj/kern/kernel.asm	/^f010489e:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01048a3	obj/kern/kernel.asm	/^f01048a3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01048a6	obj/kern/kernel.asm	/^f01048a6:	b9 10 00 00 00       	mov    $0x10,%ecx$/;"	l
f01048ab	obj/kern/kernel.asm	/^f01048ab:	eb 0d                	jmp    f01048ba <vprintfmt+0x356>$/;"	l
f01048ad	obj/kern/kernel.asm	/^f01048ad:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f01048b0	obj/kern/kernel.asm	/^f01048b0:	e8 3b fc ff ff       	call   f01044f0 <getuint>$/;"	l
f01048b5	obj/kern/kernel.asm	/^f01048b5:	b9 10 00 00 00       	mov    $0x10,%ecx$/;"	l
f01048ba	obj/kern/kernel.asm	/^f01048ba:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01048bd	obj/kern/kernel.asm	/^f01048bd:	0f be 7d d4          	movsbl -0x2c(%ebp),%edi$/;"	l
f01048c1	obj/kern/kernel.asm	/^f01048c1:	57                   	push   %edi$/;"	l
f01048c2	obj/kern/kernel.asm	/^f01048c2:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f01048c5	obj/kern/kernel.asm	/^f01048c5:	51                   	push   %ecx$/;"	l
f01048c6	obj/kern/kernel.asm	/^f01048c6:	52                   	push   %edx$/;"	l
f01048c7	obj/kern/kernel.asm	/^f01048c7:	50                   	push   %eax$/;"	l
f01048c8	obj/kern/kernel.asm	/^f01048c8:	89 da                	mov    %ebx,%edx$/;"	l
f01048ca	obj/kern/kernel.asm	/^f01048ca:	89 f0                	mov    %esi,%eax$/;"	l
f01048cc	obj/kern/kernel.asm	/^f01048cc:	e8 70 fb ff ff       	call   f0104441 <printnum>$/;"	l
f01048d1	obj/kern/kernel.asm	/^f01048d1:	83 c4 20             	add    $0x20,%esp$/;"	l
f01048d4	obj/kern/kernel.asm	/^f01048d4:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01048d7	obj/kern/kernel.asm	/^f01048d7:	e9 ae fc ff ff       	jmp    f010458a <vprintfmt+0x26>$/;"	l
f01048dc	obj/kern/kernel.asm	/^f01048dc:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01048df	obj/kern/kernel.asm	/^f01048df:	53                   	push   %ebx$/;"	l
f01048e0	obj/kern/kernel.asm	/^f01048e0:	51                   	push   %ecx$/;"	l
f01048e1	obj/kern/kernel.asm	/^f01048e1:	ff d6                	call   *%esi$/;"	l
f01048e3	obj/kern/kernel.asm	/^f01048e3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01048e6	obj/kern/kernel.asm	/^f01048e6:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01048e9	obj/kern/kernel.asm	/^f01048e9:	e9 9c fc ff ff       	jmp    f010458a <vprintfmt+0x26>$/;"	l
f01048ee	obj/kern/kernel.asm	/^f01048ee:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01048f1	obj/kern/kernel.asm	/^f01048f1:	53                   	push   %ebx$/;"	l
f01048f2	obj/kern/kernel.asm	/^f01048f2:	6a 25                	push   $0x25$/;"	l
f01048f4	obj/kern/kernel.asm	/^f01048f4:	ff d6                	call   *%esi$/;"	l
f01048f6	obj/kern/kernel.asm	/^f01048f6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01048f9	obj/kern/kernel.asm	/^f01048f9:	eb 03                	jmp    f01048fe <vprintfmt+0x39a>$/;"	l
f01048fb	obj/kern/kernel.asm	/^f01048fb:	83 ef 01             	sub    $0x1,%edi$/;"	l
f01048fe	obj/kern/kernel.asm	/^f01048fe:	80 7f ff 25          	cmpb   $0x25,-0x1(%edi)$/;"	l
f0104902	obj/kern/kernel.asm	/^f0104902:	75 f7                	jne    f01048fb <vprintfmt+0x397>$/;"	l
f0104904	obj/kern/kernel.asm	/^f0104904:	e9 81 fc ff ff       	jmp    f010458a <vprintfmt+0x26>$/;"	l
f0104909	obj/kern/kernel.asm	/^f0104909:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010490c	obj/kern/kernel.asm	/^f010490c:	5b                   	pop    %ebx$/;"	l
f010490d	obj/kern/kernel.asm	/^f010490d:	5e                   	pop    %esi$/;"	l
f010490e	obj/kern/kernel.asm	/^f010490e:	5f                   	pop    %edi$/;"	l
f010490f	obj/kern/kernel.asm	/^f010490f:	5d                   	pop    %ebp$/;"	l
f0104910	obj/kern/kernel.asm	/^f0104910:	c3                   	ret    $/;"	l
f0104911	obj/kern/kernel.asm	/^f0104911 <vsnprintf>:$/;"	l
f0104911	obj/kern/kernel.asm	/^f0104911:	55                   	push   %ebp$/;"	l
f0104912	obj/kern/kernel.asm	/^f0104912:	89 e5                	mov    %esp,%ebp$/;"	l
f0104914	obj/kern/kernel.asm	/^f0104914:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0104917	obj/kern/kernel.asm	/^f0104917:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010491a	obj/kern/kernel.asm	/^f010491a:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010491d	obj/kern/kernel.asm	/^f010491d:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0104920	obj/kern/kernel.asm	/^f0104920:	8d 4c 10 ff          	lea    -0x1(%eax,%edx,1),%ecx$/;"	l
f0104924	obj/kern/kernel.asm	/^f0104924:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f0104927	obj/kern/kernel.asm	/^f0104927:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f010492e	obj/kern/kernel.asm	/^f010492e:	85 c0                	test   %eax,%eax$/;"	l
f0104930	obj/kern/kernel.asm	/^f0104930:	74 26                	je     f0104958 <vsnprintf+0x47>$/;"	l
f0104932	obj/kern/kernel.asm	/^f0104932:	85 d2                	test   %edx,%edx$/;"	l
f0104934	obj/kern/kernel.asm	/^f0104934:	7e 22                	jle    f0104958 <vsnprintf+0x47>$/;"	l
f0104936	obj/kern/kernel.asm	/^f0104936:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f0104939	obj/kern/kernel.asm	/^f0104939:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f010493c	obj/kern/kernel.asm	/^f010493c:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f010493f	obj/kern/kernel.asm	/^f010493f:	50                   	push   %eax$/;"	l
f0104940	obj/kern/kernel.asm	/^f0104940:	68 2a 45 10 f0       	push   $0xf010452a$/;"	l
f0104945	obj/kern/kernel.asm	/^f0104945:	e8 1a fc ff ff       	call   f0104564 <vprintfmt>$/;"	l
f010494a	obj/kern/kernel.asm	/^f010494a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f010494d	obj/kern/kernel.asm	/^f010494d:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f0104950	obj/kern/kernel.asm	/^f0104950:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0104953	obj/kern/kernel.asm	/^f0104953:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104956	obj/kern/kernel.asm	/^f0104956:	eb 05                	jmp    f010495d <vsnprintf+0x4c>$/;"	l
f0104958	obj/kern/kernel.asm	/^f0104958:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010495d	obj/kern/kernel.asm	/^f010495d:	c9                   	leave  $/;"	l
f010495e	obj/kern/kernel.asm	/^f010495e:	c3                   	ret    $/;"	l
f010495f	obj/kern/kernel.asm	/^f010495f <snprintf>:$/;"	l
f010495f	obj/kern/kernel.asm	/^f010495f:	55                   	push   %ebp$/;"	l
f0104960	obj/kern/kernel.asm	/^f0104960:	89 e5                	mov    %esp,%ebp$/;"	l
f0104962	obj/kern/kernel.asm	/^f0104962:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104965	obj/kern/kernel.asm	/^f0104965:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0104968	obj/kern/kernel.asm	/^f0104968:	50                   	push   %eax$/;"	l
f0104969	obj/kern/kernel.asm	/^f0104969:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f010496c	obj/kern/kernel.asm	/^f010496c:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010496f	obj/kern/kernel.asm	/^f010496f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0104972	obj/kern/kernel.asm	/^f0104972:	e8 9a ff ff ff       	call   f0104911 <vsnprintf>$/;"	l
f0104977	obj/kern/kernel.asm	/^f0104977:	c9                   	leave  $/;"	l
f0104978	obj/kern/kernel.asm	/^f0104978:	c3                   	ret    $/;"	l
f0104979	obj/kern/kernel.asm	/^f0104979 <readline>:$/;"	l
f0104979	obj/kern/kernel.asm	/^f0104979:	55                   	push   %ebp$/;"	l
f010497a	obj/kern/kernel.asm	/^f010497a:	89 e5                	mov    %esp,%ebp$/;"	l
f010497c	obj/kern/kernel.asm	/^f010497c:	57                   	push   %edi$/;"	l
f010497d	obj/kern/kernel.asm	/^f010497d:	56                   	push   %esi$/;"	l
f010497e	obj/kern/kernel.asm	/^f010497e:	53                   	push   %ebx$/;"	l
f010497f	obj/kern/kernel.asm	/^f010497f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104982	obj/kern/kernel.asm	/^f0104982:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104985	obj/kern/kernel.asm	/^f0104985:	85 c0                	test   %eax,%eax$/;"	l
f0104987	obj/kern/kernel.asm	/^f0104987:	74 11                	je     f010499a <readline+0x21>$/;"	l
f0104989	obj/kern/kernel.asm	/^f0104989:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010498c	obj/kern/kernel.asm	/^f010498c:	50                   	push   %eax$/;"	l
f010498d	obj/kern/kernel.asm	/^f010498d:	68 a4 67 10 f0       	push   $0xf01067a4$/;"	l
f0104992	obj/kern/kernel.asm	/^f0104992:	e8 51 ec ff ff       	call   f01035e8 <cprintf>$/;"	l
f0104997	obj/kern/kernel.asm	/^f0104997:	83 c4 10             	add    $0x10,%esp$/;"	l
f010499a	obj/kern/kernel.asm	/^f010499a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010499d	obj/kern/kernel.asm	/^f010499d:	6a 00                	push   $0x0$/;"	l
f010499f	obj/kern/kernel.asm	/^f010499f:	e8 b2 bd ff ff       	call   f0100756 <iscons>$/;"	l
f01049a4	obj/kern/kernel.asm	/^f01049a4:	89 c7                	mov    %eax,%edi$/;"	l
f01049a6	obj/kern/kernel.asm	/^f01049a6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01049a9	obj/kern/kernel.asm	/^f01049a9:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01049ae	obj/kern/kernel.asm	/^f01049ae:	e8 92 bd ff ff       	call   f0100745 <getchar>$/;"	l
f01049b3	obj/kern/kernel.asm	/^f01049b3:	89 c3                	mov    %eax,%ebx$/;"	l
f01049b5	obj/kern/kernel.asm	/^f01049b5:	85 c0                	test   %eax,%eax$/;"	l
f01049b7	obj/kern/kernel.asm	/^f01049b7:	79 18                	jns    f01049d1 <readline+0x58>$/;"	l
f01049b9	obj/kern/kernel.asm	/^f01049b9:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01049bc	obj/kern/kernel.asm	/^f01049bc:	50                   	push   %eax$/;"	l
f01049bd	obj/kern/kernel.asm	/^f01049bd:	68 e4 71 10 f0       	push   $0xf01071e4$/;"	l
f01049c2	obj/kern/kernel.asm	/^f01049c2:	e8 21 ec ff ff       	call   f01035e8 <cprintf>$/;"	l
f01049c7	obj/kern/kernel.asm	/^f01049c7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01049ca	obj/kern/kernel.asm	/^f01049ca:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01049cf	obj/kern/kernel.asm	/^f01049cf:	eb 79                	jmp    f0104a4a <readline+0xd1>$/;"	l
f01049d1	obj/kern/kernel.asm	/^f01049d1:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f01049d4	obj/kern/kernel.asm	/^f01049d4:	0f 94 c2             	sete   %dl$/;"	l
f01049d7	obj/kern/kernel.asm	/^f01049d7:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
f01049da	obj/kern/kernel.asm	/^f01049da:	0f 94 c0             	sete   %al$/;"	l
f01049dd	obj/kern/kernel.asm	/^f01049dd:	08 c2                	or     %al,%dl$/;"	l
f01049df	obj/kern/kernel.asm	/^f01049df:	74 1a                	je     f01049fb <readline+0x82>$/;"	l
f01049e1	obj/kern/kernel.asm	/^f01049e1:	85 f6                	test   %esi,%esi$/;"	l
f01049e3	obj/kern/kernel.asm	/^f01049e3:	7e 16                	jle    f01049fb <readline+0x82>$/;"	l
f01049e5	obj/kern/kernel.asm	/^f01049e5:	85 ff                	test   %edi,%edi$/;"	l
f01049e7	obj/kern/kernel.asm	/^f01049e7:	74 0d                	je     f01049f6 <readline+0x7d>$/;"	l
f01049e9	obj/kern/kernel.asm	/^f01049e9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01049ec	obj/kern/kernel.asm	/^f01049ec:	6a 08                	push   $0x8$/;"	l
f01049ee	obj/kern/kernel.asm	/^f01049ee:	e8 42 bd ff ff       	call   f0100735 <cputchar>$/;"	l
f01049f3	obj/kern/kernel.asm	/^f01049f3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01049f6	obj/kern/kernel.asm	/^f01049f6:	83 ee 01             	sub    $0x1,%esi$/;"	l
f01049f9	obj/kern/kernel.asm	/^f01049f9:	eb b3                	jmp    f01049ae <readline+0x35>$/;"	l
f01049fb	obj/kern/kernel.asm	/^f01049fb:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
f01049fe	obj/kern/kernel.asm	/^f01049fe:	7e 23                	jle    f0104a23 <readline+0xaa>$/;"	l
f0104a00	obj/kern/kernel.asm	/^f0104a00:	81 fe fe 03 00 00    	cmp    $0x3fe,%esi$/;"	l
f0104a06	obj/kern/kernel.asm	/^f0104a06:	7f 1b                	jg     f0104a23 <readline+0xaa>$/;"	l
f0104a08	obj/kern/kernel.asm	/^f0104a08:	85 ff                	test   %edi,%edi$/;"	l
f0104a0a	obj/kern/kernel.asm	/^f0104a0a:	74 0c                	je     f0104a18 <readline+0x9f>$/;"	l
f0104a0c	obj/kern/kernel.asm	/^f0104a0c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104a0f	obj/kern/kernel.asm	/^f0104a0f:	53                   	push   %ebx$/;"	l
f0104a10	obj/kern/kernel.asm	/^f0104a10:	e8 20 bd ff ff       	call   f0100735 <cputchar>$/;"	l
f0104a15	obj/kern/kernel.asm	/^f0104a15:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104a18	obj/kern/kernel.asm	/^f0104a18:	88 9e 00 ab 22 f0    	mov    %bl,-0xfdd5500(%esi)$/;"	l
f0104a1e	obj/kern/kernel.asm	/^f0104a1e:	8d 76 01             	lea    0x1(%esi),%esi$/;"	l
f0104a21	obj/kern/kernel.asm	/^f0104a21:	eb 8b                	jmp    f01049ae <readline+0x35>$/;"	l
f0104a23	obj/kern/kernel.asm	/^f0104a23:	83 fb 0a             	cmp    $0xa,%ebx$/;"	l
f0104a26	obj/kern/kernel.asm	/^f0104a26:	74 05                	je     f0104a2d <readline+0xb4>$/;"	l
f0104a28	obj/kern/kernel.asm	/^f0104a28:	83 fb 0d             	cmp    $0xd,%ebx$/;"	l
f0104a2b	obj/kern/kernel.asm	/^f0104a2b:	75 81                	jne    f01049ae <readline+0x35>$/;"	l
f0104a2d	obj/kern/kernel.asm	/^f0104a2d:	85 ff                	test   %edi,%edi$/;"	l
f0104a2f	obj/kern/kernel.asm	/^f0104a2f:	74 0d                	je     f0104a3e <readline+0xc5>$/;"	l
f0104a31	obj/kern/kernel.asm	/^f0104a31:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104a34	obj/kern/kernel.asm	/^f0104a34:	6a 0a                	push   $0xa$/;"	l
f0104a36	obj/kern/kernel.asm	/^f0104a36:	e8 fa bc ff ff       	call   f0100735 <cputchar>$/;"	l
f0104a3b	obj/kern/kernel.asm	/^f0104a3b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104a3e	obj/kern/kernel.asm	/^f0104a3e:	c6 86 00 ab 22 f0 00 	movb   $0x0,-0xfdd5500(%esi)$/;"	l
f0104a45	obj/kern/kernel.asm	/^f0104a45:	b8 00 ab 22 f0       	mov    $0xf022ab00,%eax$/;"	l
f0104a4a	obj/kern/kernel.asm	/^f0104a4a:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0104a4d	obj/kern/kernel.asm	/^f0104a4d:	5b                   	pop    %ebx$/;"	l
f0104a4e	obj/kern/kernel.asm	/^f0104a4e:	5e                   	pop    %esi$/;"	l
f0104a4f	obj/kern/kernel.asm	/^f0104a4f:	5f                   	pop    %edi$/;"	l
f0104a50	obj/kern/kernel.asm	/^f0104a50:	5d                   	pop    %ebp$/;"	l
f0104a51	obj/kern/kernel.asm	/^f0104a51:	c3                   	ret    $/;"	l
f0104a52	obj/kern/kernel.asm	/^f0104a52 <strlen>:$/;"	l
f0104a52	obj/kern/kernel.asm	/^f0104a52:	55                   	push   %ebp$/;"	l
f0104a53	obj/kern/kernel.asm	/^f0104a53:	89 e5                	mov    %esp,%ebp$/;"	l
f0104a55	obj/kern/kernel.asm	/^f0104a55:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0104a58	obj/kern/kernel.asm	/^f0104a58:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104a5d	obj/kern/kernel.asm	/^f0104a5d:	eb 03                	jmp    f0104a62 <strlen+0x10>$/;"	l
f0104a5f	obj/kern/kernel.asm	/^f0104a5f:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104a62	obj/kern/kernel.asm	/^f0104a62:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)$/;"	l
f0104a66	obj/kern/kernel.asm	/^f0104a66:	75 f7                	jne    f0104a5f <strlen+0xd>$/;"	l
f0104a68	obj/kern/kernel.asm	/^f0104a68:	5d                   	pop    %ebp$/;"	l
f0104a69	obj/kern/kernel.asm	/^f0104a69:	c3                   	ret    $/;"	l
f0104a6a	obj/kern/kernel.asm	/^f0104a6a <strnlen>:$/;"	l
f0104a6a	obj/kern/kernel.asm	/^f0104a6a:	55                   	push   %ebp$/;"	l
f0104a6b	obj/kern/kernel.asm	/^f0104a6b:	89 e5                	mov    %esp,%ebp$/;"	l
f0104a6d	obj/kern/kernel.asm	/^f0104a6d:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0104a70	obj/kern/kernel.asm	/^f0104a70:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104a73	obj/kern/kernel.asm	/^f0104a73:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104a78	obj/kern/kernel.asm	/^f0104a78:	eb 03                	jmp    f0104a7d <strnlen+0x13>$/;"	l
f0104a7a	obj/kern/kernel.asm	/^f0104a7a:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104a7d	obj/kern/kernel.asm	/^f0104a7d:	39 c2                	cmp    %eax,%edx$/;"	l
f0104a7f	obj/kern/kernel.asm	/^f0104a7f:	74 08                	je     f0104a89 <strnlen+0x1f>$/;"	l
f0104a81	obj/kern/kernel.asm	/^f0104a81:	80 3c 11 00          	cmpb   $0x0,(%ecx,%edx,1)$/;"	l
f0104a85	obj/kern/kernel.asm	/^f0104a85:	75 f3                	jne    f0104a7a <strnlen+0x10>$/;"	l
f0104a87	obj/kern/kernel.asm	/^f0104a87:	89 d0                	mov    %edx,%eax$/;"	l
f0104a89	obj/kern/kernel.asm	/^f0104a89:	5d                   	pop    %ebp$/;"	l
f0104a8a	obj/kern/kernel.asm	/^f0104a8a:	c3                   	ret    $/;"	l
f0104a8b	obj/kern/kernel.asm	/^f0104a8b <strcpy>:$/;"	l
f0104a8b	obj/kern/kernel.asm	/^f0104a8b:	55                   	push   %ebp$/;"	l
f0104a8c	obj/kern/kernel.asm	/^f0104a8c:	89 e5                	mov    %esp,%ebp$/;"	l
f0104a8e	obj/kern/kernel.asm	/^f0104a8e:	53                   	push   %ebx$/;"	l
f0104a8f	obj/kern/kernel.asm	/^f0104a8f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104a92	obj/kern/kernel.asm	/^f0104a92:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0104a95	obj/kern/kernel.asm	/^f0104a95:	89 c2                	mov    %eax,%edx$/;"	l
f0104a97	obj/kern/kernel.asm	/^f0104a97:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104a9a	obj/kern/kernel.asm	/^f0104a9a:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0104a9d	obj/kern/kernel.asm	/^f0104a9d:	0f b6 59 ff          	movzbl -0x1(%ecx),%ebx$/;"	l
f0104aa1	obj/kern/kernel.asm	/^f0104aa1:	88 5a ff             	mov    %bl,-0x1(%edx)$/;"	l
f0104aa4	obj/kern/kernel.asm	/^f0104aa4:	84 db                	test   %bl,%bl$/;"	l
f0104aa6	obj/kern/kernel.asm	/^f0104aa6:	75 ef                	jne    f0104a97 <strcpy+0xc>$/;"	l
f0104aa8	obj/kern/kernel.asm	/^f0104aa8:	5b                   	pop    %ebx$/;"	l
f0104aa9	obj/kern/kernel.asm	/^f0104aa9:	5d                   	pop    %ebp$/;"	l
f0104aaa	obj/kern/kernel.asm	/^f0104aaa:	c3                   	ret    $/;"	l
f0104aab	obj/kern/kernel.asm	/^f0104aab <strcat>:$/;"	l
f0104aab	obj/kern/kernel.asm	/^f0104aab:	55                   	push   %ebp$/;"	l
f0104aac	obj/kern/kernel.asm	/^f0104aac:	89 e5                	mov    %esp,%ebp$/;"	l
f0104aae	obj/kern/kernel.asm	/^f0104aae:	53                   	push   %ebx$/;"	l
f0104aaf	obj/kern/kernel.asm	/^f0104aaf:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0104ab2	obj/kern/kernel.asm	/^f0104ab2:	53                   	push   %ebx$/;"	l
f0104ab3	obj/kern/kernel.asm	/^f0104ab3:	e8 9a ff ff ff       	call   f0104a52 <strlen>$/;"	l
f0104ab8	obj/kern/kernel.asm	/^f0104ab8:	83 c4 04             	add    $0x4,%esp$/;"	l
f0104abb	obj/kern/kernel.asm	/^f0104abb:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104abe	obj/kern/kernel.asm	/^f0104abe:	01 d8                	add    %ebx,%eax$/;"	l
f0104ac0	obj/kern/kernel.asm	/^f0104ac0:	50                   	push   %eax$/;"	l
f0104ac1	obj/kern/kernel.asm	/^f0104ac1:	e8 c5 ff ff ff       	call   f0104a8b <strcpy>$/;"	l
f0104ac6	obj/kern/kernel.asm	/^f0104ac6:	89 d8                	mov    %ebx,%eax$/;"	l
f0104ac8	obj/kern/kernel.asm	/^f0104ac8:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0104acb	obj/kern/kernel.asm	/^f0104acb:	c9                   	leave  $/;"	l
f0104acc	obj/kern/kernel.asm	/^f0104acc:	c3                   	ret    $/;"	l
f0104acd	obj/kern/kernel.asm	/^f0104acd <strncpy>:$/;"	l
f0104acd	obj/kern/kernel.asm	/^f0104acd:	55                   	push   %ebp$/;"	l
f0104ace	obj/kern/kernel.asm	/^f0104ace:	89 e5                	mov    %esp,%ebp$/;"	l
f0104ad0	obj/kern/kernel.asm	/^f0104ad0:	56                   	push   %esi$/;"	l
f0104ad1	obj/kern/kernel.asm	/^f0104ad1:	53                   	push   %ebx$/;"	l
f0104ad2	obj/kern/kernel.asm	/^f0104ad2:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104ad5	obj/kern/kernel.asm	/^f0104ad5:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0104ad8	obj/kern/kernel.asm	/^f0104ad8:	89 f3                	mov    %esi,%ebx$/;"	l
f0104ada	obj/kern/kernel.asm	/^f0104ada:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f0104add	obj/kern/kernel.asm	/^f0104add:	89 f2                	mov    %esi,%edx$/;"	l
f0104adf	obj/kern/kernel.asm	/^f0104adf:	eb 0f                	jmp    f0104af0 <strncpy+0x23>$/;"	l
f0104ae1	obj/kern/kernel.asm	/^f0104ae1:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104ae4	obj/kern/kernel.asm	/^f0104ae4:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f0104ae7	obj/kern/kernel.asm	/^f0104ae7:	88 42 ff             	mov    %al,-0x1(%edx)$/;"	l
f0104aea	obj/kern/kernel.asm	/^f0104aea:	80 39 01             	cmpb   $0x1,(%ecx)$/;"	l
f0104aed	obj/kern/kernel.asm	/^f0104aed:	83 d9 ff             	sbb    $0xffffffff,%ecx$/;"	l
f0104af0	obj/kern/kernel.asm	/^f0104af0:	39 da                	cmp    %ebx,%edx$/;"	l
f0104af2	obj/kern/kernel.asm	/^f0104af2:	75 ed                	jne    f0104ae1 <strncpy+0x14>$/;"	l
f0104af4	obj/kern/kernel.asm	/^f0104af4:	89 f0                	mov    %esi,%eax$/;"	l
f0104af6	obj/kern/kernel.asm	/^f0104af6:	5b                   	pop    %ebx$/;"	l
f0104af7	obj/kern/kernel.asm	/^f0104af7:	5e                   	pop    %esi$/;"	l
f0104af8	obj/kern/kernel.asm	/^f0104af8:	5d                   	pop    %ebp$/;"	l
f0104af9	obj/kern/kernel.asm	/^f0104af9:	c3                   	ret    $/;"	l
f0104afa	obj/kern/kernel.asm	/^f0104afa <strlcpy>:$/;"	l
f0104afa	obj/kern/kernel.asm	/^f0104afa:	55                   	push   %ebp$/;"	l
f0104afb	obj/kern/kernel.asm	/^f0104afb:	89 e5                	mov    %esp,%ebp$/;"	l
f0104afd	obj/kern/kernel.asm	/^f0104afd:	56                   	push   %esi$/;"	l
f0104afe	obj/kern/kernel.asm	/^f0104afe:	53                   	push   %ebx$/;"	l
f0104aff	obj/kern/kernel.asm	/^f0104aff:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104b02	obj/kern/kernel.asm	/^f0104b02:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0104b05	obj/kern/kernel.asm	/^f0104b05:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f0104b08	obj/kern/kernel.asm	/^f0104b08:	89 f0                	mov    %esi,%eax$/;"	l
f0104b0a	obj/kern/kernel.asm	/^f0104b0a:	85 d2                	test   %edx,%edx$/;"	l
f0104b0c	obj/kern/kernel.asm	/^f0104b0c:	74 21                	je     f0104b2f <strlcpy+0x35>$/;"	l
f0104b0e	obj/kern/kernel.asm	/^f0104b0e:	8d 44 16 ff          	lea    -0x1(%esi,%edx,1),%eax$/;"	l
f0104b12	obj/kern/kernel.asm	/^f0104b12:	89 f2                	mov    %esi,%edx$/;"	l
f0104b14	obj/kern/kernel.asm	/^f0104b14:	eb 09                	jmp    f0104b1f <strlcpy+0x25>$/;"	l
f0104b16	obj/kern/kernel.asm	/^f0104b16:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104b19	obj/kern/kernel.asm	/^f0104b19:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0104b1c	obj/kern/kernel.asm	/^f0104b1c:	88 5a ff             	mov    %bl,-0x1(%edx)$/;"	l
f0104b1f	obj/kern/kernel.asm	/^f0104b1f:	39 c2                	cmp    %eax,%edx$/;"	l
f0104b21	obj/kern/kernel.asm	/^f0104b21:	74 09                	je     f0104b2c <strlcpy+0x32>$/;"	l
f0104b23	obj/kern/kernel.asm	/^f0104b23:	0f b6 19             	movzbl (%ecx),%ebx$/;"	l
f0104b26	obj/kern/kernel.asm	/^f0104b26:	84 db                	test   %bl,%bl$/;"	l
f0104b28	obj/kern/kernel.asm	/^f0104b28:	75 ec                	jne    f0104b16 <strlcpy+0x1c>$/;"	l
f0104b2a	obj/kern/kernel.asm	/^f0104b2a:	89 d0                	mov    %edx,%eax$/;"	l
f0104b2c	obj/kern/kernel.asm	/^f0104b2c:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f0104b2f	obj/kern/kernel.asm	/^f0104b2f:	29 f0                	sub    %esi,%eax$/;"	l
f0104b31	obj/kern/kernel.asm	/^f0104b31:	5b                   	pop    %ebx$/;"	l
f0104b32	obj/kern/kernel.asm	/^f0104b32:	5e                   	pop    %esi$/;"	l
f0104b33	obj/kern/kernel.asm	/^f0104b33:	5d                   	pop    %ebp$/;"	l
f0104b34	obj/kern/kernel.asm	/^f0104b34:	c3                   	ret    $/;"	l
f0104b35	obj/kern/kernel.asm	/^f0104b35 <strcmp>:$/;"	l
f0104b35	obj/kern/kernel.asm	/^f0104b35:	55                   	push   %ebp$/;"	l
f0104b36	obj/kern/kernel.asm	/^f0104b36:	89 e5                	mov    %esp,%ebp$/;"	l
f0104b38	obj/kern/kernel.asm	/^f0104b38:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0104b3b	obj/kern/kernel.asm	/^f0104b3b:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0104b3e	obj/kern/kernel.asm	/^f0104b3e:	eb 06                	jmp    f0104b46 <strcmp+0x11>$/;"	l
f0104b40	obj/kern/kernel.asm	/^f0104b40:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0104b43	obj/kern/kernel.asm	/^f0104b43:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104b46	obj/kern/kernel.asm	/^f0104b46:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f0104b49	obj/kern/kernel.asm	/^f0104b49:	84 c0                	test   %al,%al$/;"	l
f0104b4b	obj/kern/kernel.asm	/^f0104b4b:	74 04                	je     f0104b51 <strcmp+0x1c>$/;"	l
f0104b4d	obj/kern/kernel.asm	/^f0104b4d:	3a 02                	cmp    (%edx),%al$/;"	l
f0104b4f	obj/kern/kernel.asm	/^f0104b4f:	74 ef                	je     f0104b40 <strcmp+0xb>$/;"	l
f0104b51	obj/kern/kernel.asm	/^f0104b51:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0104b54	obj/kern/kernel.asm	/^f0104b54:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f0104b57	obj/kern/kernel.asm	/^f0104b57:	29 d0                	sub    %edx,%eax$/;"	l
f0104b59	obj/kern/kernel.asm	/^f0104b59:	5d                   	pop    %ebp$/;"	l
f0104b5a	obj/kern/kernel.asm	/^f0104b5a:	c3                   	ret    $/;"	l
f0104b5b	obj/kern/kernel.asm	/^f0104b5b <strncmp>:$/;"	l
f0104b5b	obj/kern/kernel.asm	/^f0104b5b:	55                   	push   %ebp$/;"	l
f0104b5c	obj/kern/kernel.asm	/^f0104b5c:	89 e5                	mov    %esp,%ebp$/;"	l
f0104b5e	obj/kern/kernel.asm	/^f0104b5e:	53                   	push   %ebx$/;"	l
f0104b5f	obj/kern/kernel.asm	/^f0104b5f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104b62	obj/kern/kernel.asm	/^f0104b62:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0104b65	obj/kern/kernel.asm	/^f0104b65:	89 c3                	mov    %eax,%ebx$/;"	l
f0104b67	obj/kern/kernel.asm	/^f0104b67:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f0104b6a	obj/kern/kernel.asm	/^f0104b6a:	eb 06                	jmp    f0104b72 <strncmp+0x17>$/;"	l
f0104b6c	obj/kern/kernel.asm	/^f0104b6c:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104b6f	obj/kern/kernel.asm	/^f0104b6f:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104b72	obj/kern/kernel.asm	/^f0104b72:	39 d8                	cmp    %ebx,%eax$/;"	l
f0104b74	obj/kern/kernel.asm	/^f0104b74:	74 15                	je     f0104b8b <strncmp+0x30>$/;"	l
f0104b76	obj/kern/kernel.asm	/^f0104b76:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f0104b79	obj/kern/kernel.asm	/^f0104b79:	84 c9                	test   %cl,%cl$/;"	l
f0104b7b	obj/kern/kernel.asm	/^f0104b7b:	74 04                	je     f0104b81 <strncmp+0x26>$/;"	l
f0104b7d	obj/kern/kernel.asm	/^f0104b7d:	3a 0a                	cmp    (%edx),%cl$/;"	l
f0104b7f	obj/kern/kernel.asm	/^f0104b7f:	74 eb                	je     f0104b6c <strncmp+0x11>$/;"	l
f0104b81	obj/kern/kernel.asm	/^f0104b81:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0104b84	obj/kern/kernel.asm	/^f0104b84:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f0104b87	obj/kern/kernel.asm	/^f0104b87:	29 d0                	sub    %edx,%eax$/;"	l
f0104b89	obj/kern/kernel.asm	/^f0104b89:	eb 05                	jmp    f0104b90 <strncmp+0x35>$/;"	l
f0104b8b	obj/kern/kernel.asm	/^f0104b8b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104b90	obj/kern/kernel.asm	/^f0104b90:	5b                   	pop    %ebx$/;"	l
f0104b91	obj/kern/kernel.asm	/^f0104b91:	5d                   	pop    %ebp$/;"	l
f0104b92	obj/kern/kernel.asm	/^f0104b92:	c3                   	ret    $/;"	l
f0104b93	obj/kern/kernel.asm	/^f0104b93 <strchr>:$/;"	l
f0104b93	obj/kern/kernel.asm	/^f0104b93:	55                   	push   %ebp$/;"	l
f0104b94	obj/kern/kernel.asm	/^f0104b94:	89 e5                	mov    %esp,%ebp$/;"	l
f0104b96	obj/kern/kernel.asm	/^f0104b96:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104b99	obj/kern/kernel.asm	/^f0104b99:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0104b9d	obj/kern/kernel.asm	/^f0104b9d:	eb 07                	jmp    f0104ba6 <strchr+0x13>$/;"	l
f0104b9f	obj/kern/kernel.asm	/^f0104b9f:	38 ca                	cmp    %cl,%dl$/;"	l
f0104ba1	obj/kern/kernel.asm	/^f0104ba1:	74 0f                	je     f0104bb2 <strchr+0x1f>$/;"	l
f0104ba3	obj/kern/kernel.asm	/^f0104ba3:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104ba6	obj/kern/kernel.asm	/^f0104ba6:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0104ba9	obj/kern/kernel.asm	/^f0104ba9:	84 d2                	test   %dl,%dl$/;"	l
f0104bab	obj/kern/kernel.asm	/^f0104bab:	75 f2                	jne    f0104b9f <strchr+0xc>$/;"	l
f0104bad	obj/kern/kernel.asm	/^f0104bad:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104bb2	obj/kern/kernel.asm	/^f0104bb2:	5d                   	pop    %ebp$/;"	l
f0104bb3	obj/kern/kernel.asm	/^f0104bb3:	c3                   	ret    $/;"	l
f0104bb4	obj/kern/kernel.asm	/^f0104bb4 <strfind>:$/;"	l
f0104bb4	obj/kern/kernel.asm	/^f0104bb4:	55                   	push   %ebp$/;"	l
f0104bb5	obj/kern/kernel.asm	/^f0104bb5:	89 e5                	mov    %esp,%ebp$/;"	l
f0104bb7	obj/kern/kernel.asm	/^f0104bb7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104bba	obj/kern/kernel.asm	/^f0104bba:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0104bbe	obj/kern/kernel.asm	/^f0104bbe:	eb 03                	jmp    f0104bc3 <strfind+0xf>$/;"	l
f0104bc0	obj/kern/kernel.asm	/^f0104bc0:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104bc3	obj/kern/kernel.asm	/^f0104bc3:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0104bc6	obj/kern/kernel.asm	/^f0104bc6:	38 ca                	cmp    %cl,%dl$/;"	l
f0104bc8	obj/kern/kernel.asm	/^f0104bc8:	74 04                	je     f0104bce <strfind+0x1a>$/;"	l
f0104bca	obj/kern/kernel.asm	/^f0104bca:	84 d2                	test   %dl,%dl$/;"	l
f0104bcc	obj/kern/kernel.asm	/^f0104bcc:	75 f2                	jne    f0104bc0 <strfind+0xc>$/;"	l
f0104bce	obj/kern/kernel.asm	/^f0104bce:	5d                   	pop    %ebp$/;"	l
f0104bcf	obj/kern/kernel.asm	/^f0104bcf:	c3                   	ret    $/;"	l
f0104bd0	obj/kern/kernel.asm	/^f0104bd0 <memset>:$/;"	l
f0104bd0	obj/kern/kernel.asm	/^f0104bd0:	55                   	push   %ebp$/;"	l
f0104bd1	obj/kern/kernel.asm	/^f0104bd1:	89 e5                	mov    %esp,%ebp$/;"	l
f0104bd3	obj/kern/kernel.asm	/^f0104bd3:	57                   	push   %edi$/;"	l
f0104bd4	obj/kern/kernel.asm	/^f0104bd4:	56                   	push   %esi$/;"	l
f0104bd5	obj/kern/kernel.asm	/^f0104bd5:	53                   	push   %ebx$/;"	l
f0104bd6	obj/kern/kernel.asm	/^f0104bd6:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0104bd9	obj/kern/kernel.asm	/^f0104bd9:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0104bdc	obj/kern/kernel.asm	/^f0104bdc:	85 c9                	test   %ecx,%ecx$/;"	l
f0104bde	obj/kern/kernel.asm	/^f0104bde:	74 36                	je     f0104c16 <memset+0x46>$/;"	l
f0104be0	obj/kern/kernel.asm	/^f0104be0:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f0104be6	obj/kern/kernel.asm	/^f0104be6:	75 28                	jne    f0104c10 <memset+0x40>$/;"	l
f0104be8	obj/kern/kernel.asm	/^f0104be8:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0104beb	obj/kern/kernel.asm	/^f0104beb:	75 23                	jne    f0104c10 <memset+0x40>$/;"	l
f0104bed	obj/kern/kernel.asm	/^f0104bed:	0f b6 55 0c          	movzbl 0xc(%ebp),%edx$/;"	l
f0104bf1	obj/kern/kernel.asm	/^f0104bf1:	89 d3                	mov    %edx,%ebx$/;"	l
f0104bf3	obj/kern/kernel.asm	/^f0104bf3:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f0104bf6	obj/kern/kernel.asm	/^f0104bf6:	89 d6                	mov    %edx,%esi$/;"	l
f0104bf8	obj/kern/kernel.asm	/^f0104bf8:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f0104bfb	obj/kern/kernel.asm	/^f0104bfb:	89 d0                	mov    %edx,%eax$/;"	l
f0104bfd	obj/kern/kernel.asm	/^f0104bfd:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f0104c00	obj/kern/kernel.asm	/^f0104c00:	09 f0                	or     %esi,%eax$/;"	l
f0104c02	obj/kern/kernel.asm	/^f0104c02:	09 c2                	or     %eax,%edx$/;"	l
f0104c04	obj/kern/kernel.asm	/^f0104c04:	89 d8                	mov    %ebx,%eax$/;"	l
f0104c06	obj/kern/kernel.asm	/^f0104c06:	09 d0                	or     %edx,%eax$/;"	l
f0104c08	obj/kern/kernel.asm	/^f0104c08:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0104c0b	obj/kern/kernel.asm	/^f0104c0b:	fc                   	cld    $/;"	l
f0104c0c	obj/kern/kernel.asm	/^f0104c0c:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f0104c0e	obj/kern/kernel.asm	/^f0104c0e:	eb 06                	jmp    f0104c16 <memset+0x46>$/;"	l
f0104c10	obj/kern/kernel.asm	/^f0104c10:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104c13	obj/kern/kernel.asm	/^f0104c13:	fc                   	cld    $/;"	l
f0104c14	obj/kern/kernel.asm	/^f0104c14:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
f0104c16	obj/kern/kernel.asm	/^f0104c16:	89 f8                	mov    %edi,%eax$/;"	l
f0104c18	obj/kern/kernel.asm	/^f0104c18:	5b                   	pop    %ebx$/;"	l
f0104c19	obj/kern/kernel.asm	/^f0104c19:	5e                   	pop    %esi$/;"	l
f0104c1a	obj/kern/kernel.asm	/^f0104c1a:	5f                   	pop    %edi$/;"	l
f0104c1b	obj/kern/kernel.asm	/^f0104c1b:	5d                   	pop    %ebp$/;"	l
f0104c1c	obj/kern/kernel.asm	/^f0104c1c:	c3                   	ret    $/;"	l
f0104c1d	obj/kern/kernel.asm	/^f0104c1d <memmove>:$/;"	l
f0104c1d	obj/kern/kernel.asm	/^f0104c1d:	55                   	push   %ebp$/;"	l
f0104c1e	obj/kern/kernel.asm	/^f0104c1e:	89 e5                	mov    %esp,%ebp$/;"	l
f0104c20	obj/kern/kernel.asm	/^f0104c20:	57                   	push   %edi$/;"	l
f0104c21	obj/kern/kernel.asm	/^f0104c21:	56                   	push   %esi$/;"	l
f0104c22	obj/kern/kernel.asm	/^f0104c22:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104c25	obj/kern/kernel.asm	/^f0104c25:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0104c28	obj/kern/kernel.asm	/^f0104c28:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0104c2b	obj/kern/kernel.asm	/^f0104c2b:	39 c6                	cmp    %eax,%esi$/;"	l
f0104c2d	obj/kern/kernel.asm	/^f0104c2d:	73 35                	jae    f0104c64 <memmove+0x47>$/;"	l
f0104c2f	obj/kern/kernel.asm	/^f0104c2f:	8d 14 0e             	lea    (%esi,%ecx,1),%edx$/;"	l
f0104c32	obj/kern/kernel.asm	/^f0104c32:	39 d0                	cmp    %edx,%eax$/;"	l
f0104c34	obj/kern/kernel.asm	/^f0104c34:	73 2e                	jae    f0104c64 <memmove+0x47>$/;"	l
f0104c36	obj/kern/kernel.asm	/^f0104c36:	8d 3c 08             	lea    (%eax,%ecx,1),%edi$/;"	l
f0104c39	obj/kern/kernel.asm	/^f0104c39:	89 d6                	mov    %edx,%esi$/;"	l
f0104c3b	obj/kern/kernel.asm	/^f0104c3b:	09 fe                	or     %edi,%esi$/;"	l
f0104c3d	obj/kern/kernel.asm	/^f0104c3d:	f7 c6 03 00 00 00    	test   $0x3,%esi$/;"	l
f0104c43	obj/kern/kernel.asm	/^f0104c43:	75 13                	jne    f0104c58 <memmove+0x3b>$/;"	l
f0104c45	obj/kern/kernel.asm	/^f0104c45:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0104c48	obj/kern/kernel.asm	/^f0104c48:	75 0e                	jne    f0104c58 <memmove+0x3b>$/;"	l
f0104c4a	obj/kern/kernel.asm	/^f0104c4a:	83 ef 04             	sub    $0x4,%edi$/;"	l
f0104c4d	obj/kern/kernel.asm	/^f0104c4d:	8d 72 fc             	lea    -0x4(%edx),%esi$/;"	l
f0104c50	obj/kern/kernel.asm	/^f0104c50:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0104c53	obj/kern/kernel.asm	/^f0104c53:	fd                   	std    $/;"	l
f0104c54	obj/kern/kernel.asm	/^f0104c54:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0104c56	obj/kern/kernel.asm	/^f0104c56:	eb 09                	jmp    f0104c61 <memmove+0x44>$/;"	l
f0104c58	obj/kern/kernel.asm	/^f0104c58:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0104c5b	obj/kern/kernel.asm	/^f0104c5b:	8d 72 ff             	lea    -0x1(%edx),%esi$/;"	l
f0104c5e	obj/kern/kernel.asm	/^f0104c5e:	fd                   	std    $/;"	l
f0104c5f	obj/kern/kernel.asm	/^f0104c5f:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0104c61	obj/kern/kernel.asm	/^f0104c61:	fc                   	cld    $/;"	l
f0104c62	obj/kern/kernel.asm	/^f0104c62:	eb 1d                	jmp    f0104c81 <memmove+0x64>$/;"	l
f0104c64	obj/kern/kernel.asm	/^f0104c64:	89 f2                	mov    %esi,%edx$/;"	l
f0104c66	obj/kern/kernel.asm	/^f0104c66:	09 c2                	or     %eax,%edx$/;"	l
f0104c68	obj/kern/kernel.asm	/^f0104c68:	f6 c2 03             	test   $0x3,%dl$/;"	l
f0104c6b	obj/kern/kernel.asm	/^f0104c6b:	75 0f                	jne    f0104c7c <memmove+0x5f>$/;"	l
f0104c6d	obj/kern/kernel.asm	/^f0104c6d:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0104c70	obj/kern/kernel.asm	/^f0104c70:	75 0a                	jne    f0104c7c <memmove+0x5f>$/;"	l
f0104c72	obj/kern/kernel.asm	/^f0104c72:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0104c75	obj/kern/kernel.asm	/^f0104c75:	89 c7                	mov    %eax,%edi$/;"	l
f0104c77	obj/kern/kernel.asm	/^f0104c77:	fc                   	cld    $/;"	l
f0104c78	obj/kern/kernel.asm	/^f0104c78:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0104c7a	obj/kern/kernel.asm	/^f0104c7a:	eb 05                	jmp    f0104c81 <memmove+0x64>$/;"	l
f0104c7c	obj/kern/kernel.asm	/^f0104c7c:	89 c7                	mov    %eax,%edi$/;"	l
f0104c7e	obj/kern/kernel.asm	/^f0104c7e:	fc                   	cld    $/;"	l
f0104c7f	obj/kern/kernel.asm	/^f0104c7f:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0104c81	obj/kern/kernel.asm	/^f0104c81:	5e                   	pop    %esi$/;"	l
f0104c82	obj/kern/kernel.asm	/^f0104c82:	5f                   	pop    %edi$/;"	l
f0104c83	obj/kern/kernel.asm	/^f0104c83:	5d                   	pop    %ebp$/;"	l
f0104c84	obj/kern/kernel.asm	/^f0104c84:	c3                   	ret    $/;"	l
f0104c85	obj/kern/kernel.asm	/^f0104c85 <memcpy>:$/;"	l
f0104c85	obj/kern/kernel.asm	/^f0104c85:	55                   	push   %ebp$/;"	l
f0104c86	obj/kern/kernel.asm	/^f0104c86:	89 e5                	mov    %esp,%ebp$/;"	l
f0104c88	obj/kern/kernel.asm	/^f0104c88:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104c8b	obj/kern/kernel.asm	/^f0104c8b:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104c8e	obj/kern/kernel.asm	/^f0104c8e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0104c91	obj/kern/kernel.asm	/^f0104c91:	e8 87 ff ff ff       	call   f0104c1d <memmove>$/;"	l
f0104c96	obj/kern/kernel.asm	/^f0104c96:	c9                   	leave  $/;"	l
f0104c97	obj/kern/kernel.asm	/^f0104c97:	c3                   	ret    $/;"	l
f0104c98	obj/kern/kernel.asm	/^f0104c98 <memcmp>:$/;"	l
f0104c98	obj/kern/kernel.asm	/^f0104c98:	55                   	push   %ebp$/;"	l
f0104c99	obj/kern/kernel.asm	/^f0104c99:	89 e5                	mov    %esp,%ebp$/;"	l
f0104c9b	obj/kern/kernel.asm	/^f0104c9b:	56                   	push   %esi$/;"	l
f0104c9c	obj/kern/kernel.asm	/^f0104c9c:	53                   	push   %ebx$/;"	l
f0104c9d	obj/kern/kernel.asm	/^f0104c9d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104ca0	obj/kern/kernel.asm	/^f0104ca0:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0104ca3	obj/kern/kernel.asm	/^f0104ca3:	89 c6                	mov    %eax,%esi$/;"	l
f0104ca5	obj/kern/kernel.asm	/^f0104ca5:	03 75 10             	add    0x10(%ebp),%esi$/;"	l
f0104ca8	obj/kern/kernel.asm	/^f0104ca8:	eb 1a                	jmp    f0104cc4 <memcmp+0x2c>$/;"	l
f0104caa	obj/kern/kernel.asm	/^f0104caa:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f0104cad	obj/kern/kernel.asm	/^f0104cad:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f0104cb0	obj/kern/kernel.asm	/^f0104cb0:	38 d9                	cmp    %bl,%cl$/;"	l
f0104cb2	obj/kern/kernel.asm	/^f0104cb2:	74 0a                	je     f0104cbe <memcmp+0x26>$/;"	l
f0104cb4	obj/kern/kernel.asm	/^f0104cb4:	0f b6 c1             	movzbl %cl,%eax$/;"	l
f0104cb7	obj/kern/kernel.asm	/^f0104cb7:	0f b6 db             	movzbl %bl,%ebx$/;"	l
f0104cba	obj/kern/kernel.asm	/^f0104cba:	29 d8                	sub    %ebx,%eax$/;"	l
f0104cbc	obj/kern/kernel.asm	/^f0104cbc:	eb 0f                	jmp    f0104ccd <memcmp+0x35>$/;"	l
f0104cbe	obj/kern/kernel.asm	/^f0104cbe:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104cc1	obj/kern/kernel.asm	/^f0104cc1:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104cc4	obj/kern/kernel.asm	/^f0104cc4:	39 f0                	cmp    %esi,%eax$/;"	l
f0104cc6	obj/kern/kernel.asm	/^f0104cc6:	75 e2                	jne    f0104caa <memcmp+0x12>$/;"	l
f0104cc8	obj/kern/kernel.asm	/^f0104cc8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104ccd	obj/kern/kernel.asm	/^f0104ccd:	5b                   	pop    %ebx$/;"	l
f0104cce	obj/kern/kernel.asm	/^f0104cce:	5e                   	pop    %esi$/;"	l
f0104ccf	obj/kern/kernel.asm	/^f0104ccf:	5d                   	pop    %ebp$/;"	l
f0104cd0	obj/kern/kernel.asm	/^f0104cd0:	c3                   	ret    $/;"	l
f0104cd1	obj/kern/kernel.asm	/^f0104cd1 <memfind>:$/;"	l
f0104cd1	obj/kern/kernel.asm	/^f0104cd1:	55                   	push   %ebp$/;"	l
f0104cd2	obj/kern/kernel.asm	/^f0104cd2:	89 e5                	mov    %esp,%ebp$/;"	l
f0104cd4	obj/kern/kernel.asm	/^f0104cd4:	53                   	push   %ebx$/;"	l
f0104cd5	obj/kern/kernel.asm	/^f0104cd5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104cd8	obj/kern/kernel.asm	/^f0104cd8:	89 c1                	mov    %eax,%ecx$/;"	l
f0104cda	obj/kern/kernel.asm	/^f0104cda:	03 4d 10             	add    0x10(%ebp),%ecx$/;"	l
f0104cdd	obj/kern/kernel.asm	/^f0104cdd:	0f b6 5d 0c          	movzbl 0xc(%ebp),%ebx$/;"	l
f0104ce1	obj/kern/kernel.asm	/^f0104ce1:	eb 0a                	jmp    f0104ced <memfind+0x1c>$/;"	l
f0104ce3	obj/kern/kernel.asm	/^f0104ce3:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0104ce6	obj/kern/kernel.asm	/^f0104ce6:	39 da                	cmp    %ebx,%edx$/;"	l
f0104ce8	obj/kern/kernel.asm	/^f0104ce8:	74 07                	je     f0104cf1 <memfind+0x20>$/;"	l
f0104cea	obj/kern/kernel.asm	/^f0104cea:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104ced	obj/kern/kernel.asm	/^f0104ced:	39 c8                	cmp    %ecx,%eax$/;"	l
f0104cef	obj/kern/kernel.asm	/^f0104cef:	72 f2                	jb     f0104ce3 <memfind+0x12>$/;"	l
f0104cf1	obj/kern/kernel.asm	/^f0104cf1:	5b                   	pop    %ebx$/;"	l
f0104cf2	obj/kern/kernel.asm	/^f0104cf2:	5d                   	pop    %ebp$/;"	l
f0104cf3	obj/kern/kernel.asm	/^f0104cf3:	c3                   	ret    $/;"	l
f0104cf4	obj/kern/kernel.asm	/^f0104cf4 <strtol>:$/;"	l
f0104cf4	obj/kern/kernel.asm	/^f0104cf4:	55                   	push   %ebp$/;"	l
f0104cf5	obj/kern/kernel.asm	/^f0104cf5:	89 e5                	mov    %esp,%ebp$/;"	l
f0104cf7	obj/kern/kernel.asm	/^f0104cf7:	57                   	push   %edi$/;"	l
f0104cf8	obj/kern/kernel.asm	/^f0104cf8:	56                   	push   %esi$/;"	l
f0104cf9	obj/kern/kernel.asm	/^f0104cf9:	53                   	push   %ebx$/;"	l
f0104cfa	obj/kern/kernel.asm	/^f0104cfa:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0104cfd	obj/kern/kernel.asm	/^f0104cfd:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0104d00	obj/kern/kernel.asm	/^f0104d00:	eb 03                	jmp    f0104d05 <strtol+0x11>$/;"	l
f0104d02	obj/kern/kernel.asm	/^f0104d02:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0104d05	obj/kern/kernel.asm	/^f0104d05:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f0104d08	obj/kern/kernel.asm	/^f0104d08:	3c 20                	cmp    $0x20,%al$/;"	l
f0104d0a	obj/kern/kernel.asm	/^f0104d0a:	74 f6                	je     f0104d02 <strtol+0xe>$/;"	l
f0104d0c	obj/kern/kernel.asm	/^f0104d0c:	3c 09                	cmp    $0x9,%al$/;"	l
f0104d0e	obj/kern/kernel.asm	/^f0104d0e:	74 f2                	je     f0104d02 <strtol+0xe>$/;"	l
f0104d10	obj/kern/kernel.asm	/^f0104d10:	3c 2b                	cmp    $0x2b,%al$/;"	l
f0104d12	obj/kern/kernel.asm	/^f0104d12:	75 0a                	jne    f0104d1e <strtol+0x2a>$/;"	l
f0104d14	obj/kern/kernel.asm	/^f0104d14:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0104d17	obj/kern/kernel.asm	/^f0104d17:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0104d1c	obj/kern/kernel.asm	/^f0104d1c:	eb 11                	jmp    f0104d2f <strtol+0x3b>$/;"	l
f0104d1e	obj/kern/kernel.asm	/^f0104d1e:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0104d23	obj/kern/kernel.asm	/^f0104d23:	3c 2d                	cmp    $0x2d,%al$/;"	l
f0104d25	obj/kern/kernel.asm	/^f0104d25:	75 08                	jne    f0104d2f <strtol+0x3b>$/;"	l
f0104d27	obj/kern/kernel.asm	/^f0104d27:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0104d2a	obj/kern/kernel.asm	/^f0104d2a:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
f0104d2f	obj/kern/kernel.asm	/^f0104d2f:	f7 c3 ef ff ff ff    	test   $0xffffffef,%ebx$/;"	l
f0104d35	obj/kern/kernel.asm	/^f0104d35:	75 15                	jne    f0104d4c <strtol+0x58>$/;"	l
f0104d37	obj/kern/kernel.asm	/^f0104d37:	80 39 30             	cmpb   $0x30,(%ecx)$/;"	l
f0104d3a	obj/kern/kernel.asm	/^f0104d3a:	75 10                	jne    f0104d4c <strtol+0x58>$/;"	l
f0104d3c	obj/kern/kernel.asm	/^f0104d3c:	80 79 01 78          	cmpb   $0x78,0x1(%ecx)$/;"	l
f0104d40	obj/kern/kernel.asm	/^f0104d40:	75 7c                	jne    f0104dbe <strtol+0xca>$/;"	l
f0104d42	obj/kern/kernel.asm	/^f0104d42:	83 c1 02             	add    $0x2,%ecx$/;"	l
f0104d45	obj/kern/kernel.asm	/^f0104d45:	bb 10 00 00 00       	mov    $0x10,%ebx$/;"	l
f0104d4a	obj/kern/kernel.asm	/^f0104d4a:	eb 16                	jmp    f0104d62 <strtol+0x6e>$/;"	l
f0104d4c	obj/kern/kernel.asm	/^f0104d4c:	85 db                	test   %ebx,%ebx$/;"	l
f0104d4e	obj/kern/kernel.asm	/^f0104d4e:	75 12                	jne    f0104d62 <strtol+0x6e>$/;"	l
f0104d50	obj/kern/kernel.asm	/^f0104d50:	bb 0a 00 00 00       	mov    $0xa,%ebx$/;"	l
f0104d55	obj/kern/kernel.asm	/^f0104d55:	80 39 30             	cmpb   $0x30,(%ecx)$/;"	l
f0104d58	obj/kern/kernel.asm	/^f0104d58:	75 08                	jne    f0104d62 <strtol+0x6e>$/;"	l
f0104d5a	obj/kern/kernel.asm	/^f0104d5a:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0104d5d	obj/kern/kernel.asm	/^f0104d5d:	bb 08 00 00 00       	mov    $0x8,%ebx$/;"	l
f0104d62	obj/kern/kernel.asm	/^f0104d62:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104d67	obj/kern/kernel.asm	/^f0104d67:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f0104d6a	obj/kern/kernel.asm	/^f0104d6a:	0f b6 11             	movzbl (%ecx),%edx$/;"	l
f0104d6d	obj/kern/kernel.asm	/^f0104d6d:	8d 72 d0             	lea    -0x30(%edx),%esi$/;"	l
f0104d70	obj/kern/kernel.asm	/^f0104d70:	89 f3                	mov    %esi,%ebx$/;"	l
f0104d72	obj/kern/kernel.asm	/^f0104d72:	80 fb 09             	cmp    $0x9,%bl$/;"	l
f0104d75	obj/kern/kernel.asm	/^f0104d75:	77 08                	ja     f0104d7f <strtol+0x8b>$/;"	l
f0104d77	obj/kern/kernel.asm	/^f0104d77:	0f be d2             	movsbl %dl,%edx$/;"	l
f0104d7a	obj/kern/kernel.asm	/^f0104d7a:	83 ea 30             	sub    $0x30,%edx$/;"	l
f0104d7d	obj/kern/kernel.asm	/^f0104d7d:	eb 22                	jmp    f0104da1 <strtol+0xad>$/;"	l
f0104d7f	obj/kern/kernel.asm	/^f0104d7f:	8d 72 9f             	lea    -0x61(%edx),%esi$/;"	l
f0104d82	obj/kern/kernel.asm	/^f0104d82:	89 f3                	mov    %esi,%ebx$/;"	l
f0104d84	obj/kern/kernel.asm	/^f0104d84:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0104d87	obj/kern/kernel.asm	/^f0104d87:	77 08                	ja     f0104d91 <strtol+0x9d>$/;"	l
f0104d89	obj/kern/kernel.asm	/^f0104d89:	0f be d2             	movsbl %dl,%edx$/;"	l
f0104d8c	obj/kern/kernel.asm	/^f0104d8c:	83 ea 57             	sub    $0x57,%edx$/;"	l
f0104d8f	obj/kern/kernel.asm	/^f0104d8f:	eb 10                	jmp    f0104da1 <strtol+0xad>$/;"	l
f0104d91	obj/kern/kernel.asm	/^f0104d91:	8d 72 bf             	lea    -0x41(%edx),%esi$/;"	l
f0104d94	obj/kern/kernel.asm	/^f0104d94:	89 f3                	mov    %esi,%ebx$/;"	l
f0104d96	obj/kern/kernel.asm	/^f0104d96:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0104d99	obj/kern/kernel.asm	/^f0104d99:	77 16                	ja     f0104db1 <strtol+0xbd>$/;"	l
f0104d9b	obj/kern/kernel.asm	/^f0104d9b:	0f be d2             	movsbl %dl,%edx$/;"	l
f0104d9e	obj/kern/kernel.asm	/^f0104d9e:	83 ea 37             	sub    $0x37,%edx$/;"	l
f0104da1	obj/kern/kernel.asm	/^f0104da1:	3b 55 10             	cmp    0x10(%ebp),%edx$/;"	l
f0104da4	obj/kern/kernel.asm	/^f0104da4:	7d 0b                	jge    f0104db1 <strtol+0xbd>$/;"	l
f0104da6	obj/kern/kernel.asm	/^f0104da6:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0104da9	obj/kern/kernel.asm	/^f0104da9:	0f af 45 10          	imul   0x10(%ebp),%eax$/;"	l
f0104dad	obj/kern/kernel.asm	/^f0104dad:	01 d0                	add    %edx,%eax$/;"	l
f0104daf	obj/kern/kernel.asm	/^f0104daf:	eb b9                	jmp    f0104d6a <strtol+0x76>$/;"	l
f0104db1	obj/kern/kernel.asm	/^f0104db1:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f0104db5	obj/kern/kernel.asm	/^f0104db5:	74 0d                	je     f0104dc4 <strtol+0xd0>$/;"	l
f0104db7	obj/kern/kernel.asm	/^f0104db7:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0104dba	obj/kern/kernel.asm	/^f0104dba:	89 0e                	mov    %ecx,(%esi)$/;"	l
f0104dbc	obj/kern/kernel.asm	/^f0104dbc:	eb 06                	jmp    f0104dc4 <strtol+0xd0>$/;"	l
f0104dbe	obj/kern/kernel.asm	/^f0104dbe:	85 db                	test   %ebx,%ebx$/;"	l
f0104dc0	obj/kern/kernel.asm	/^f0104dc0:	74 98                	je     f0104d5a <strtol+0x66>$/;"	l
f0104dc2	obj/kern/kernel.asm	/^f0104dc2:	eb 9e                	jmp    f0104d62 <strtol+0x6e>$/;"	l
f0104dc4	obj/kern/kernel.asm	/^f0104dc4:	89 c2                	mov    %eax,%edx$/;"	l
f0104dc6	obj/kern/kernel.asm	/^f0104dc6:	f7 da                	neg    %edx$/;"	l
f0104dc8	obj/kern/kernel.asm	/^f0104dc8:	85 ff                	test   %edi,%edi$/;"	l
f0104dca	obj/kern/kernel.asm	/^f0104dca:	0f 45 c2             	cmovne %edx,%eax$/;"	l
f0104dcd	obj/kern/kernel.asm	/^f0104dcd:	5b                   	pop    %ebx$/;"	l
f0104dce	obj/kern/kernel.asm	/^f0104dce:	5e                   	pop    %esi$/;"	l
f0104dcf	obj/kern/kernel.asm	/^f0104dcf:	5f                   	pop    %edi$/;"	l
f0104dd0	obj/kern/kernel.asm	/^f0104dd0:	5d                   	pop    %ebp$/;"	l
f0104dd1	obj/kern/kernel.asm	/^f0104dd1:	c3                   	ret    $/;"	l
f0104dd2	obj/kern/kernel.asm	/^f0104dd2:	66 90                	xchg   %ax,%ax$/;"	l
f0104dd4	obj/kern/kernel.asm	/^f0104dd4 <mpentry_start>:$/;"	l
f0104dd4	obj/kern/kernel.asm	/^f0104dd4:	fa                   	cli    $/;"	l
f0104dd5	obj/kern/kernel.asm	/^f0104dd5:	31 c0                	xor    %eax,%eax$/;"	l
f0104dd7	obj/kern/kernel.asm	/^f0104dd7:	8e d8                	mov    %eax,%ds$/;"	l
f0104dd9	obj/kern/kernel.asm	/^f0104dd9:	8e c0                	mov    %eax,%es$/;"	l
f0104ddb	obj/kern/kernel.asm	/^f0104ddb:	8e d0                	mov    %eax,%ss$/;"	l
f0104ddd	obj/kern/kernel.asm	/^f0104ddd:	0f 01 16             	lgdtl  (%esi)$/;"	l
f0104de0	obj/kern/kernel.asm	/^f0104de0:	74 70                	je     f0104e52 <mpsearch1+0x3>$/;"	l
f0104de2	obj/kern/kernel.asm	/^f0104de2:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0104de5	obj/kern/kernel.asm	/^f0104de5:	66 83 c8 01          	or     $0x1,%ax$/;"	l
f0104de9	obj/kern/kernel.asm	/^f0104de9:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0104dec	obj/kern/kernel.asm	/^f0104dec:	66 ea 20 70 00 00    	ljmpw  $0x0,$0x7020$/;"	l
f0104df2	obj/kern/kernel.asm	/^f0104df2:	08 00                	or     %al,(%eax)$/;"	l
f0104df4	obj/kern/kernel.asm	/^f0104df4 <start32>:$/;"	l
f0104df4	obj/kern/kernel.asm	/^f0104df4:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f0104df8	obj/kern/kernel.asm	/^f0104df8:	8e d8                	mov    %eax,%ds$/;"	l
f0104dfa	obj/kern/kernel.asm	/^f0104dfa:	8e c0                	mov    %eax,%es$/;"	l
f0104dfc	obj/kern/kernel.asm	/^f0104dfc:	8e d0                	mov    %eax,%ss$/;"	l
f0104dfe	obj/kern/kernel.asm	/^f0104dfe:	66 b8 00 00          	mov    $0x0,%ax$/;"	l
f0104e02	obj/kern/kernel.asm	/^f0104e02:	8e e0                	mov    %eax,%fs$/;"	l
f0104e04	obj/kern/kernel.asm	/^f0104e04:	8e e8                	mov    %eax,%gs$/;"	l
f0104e06	obj/kern/kernel.asm	/^f0104e06:	b8 00 d0 11 00       	mov    $0x11d000,%eax$/;"	l
f0104e0b	obj/kern/kernel.asm	/^f0104e0b:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0104e0e	obj/kern/kernel.asm	/^f0104e0e:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0104e11	obj/kern/kernel.asm	/^f0104e11:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0104e16	obj/kern/kernel.asm	/^f0104e16:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0104e19	obj/kern/kernel.asm	/^f0104e19:	8b 25 04 af 22 f0    	mov    0xf022af04,%esp$/;"	l
f0104e1f	obj/kern/kernel.asm	/^f0104e1f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0104e24	obj/kern/kernel.asm	/^f0104e24:	b8 90 01 10 f0       	mov    $0xf0100190,%eax$/;"	l
f0104e29	obj/kern/kernel.asm	/^f0104e29:	ff d0                	call   *%eax$/;"	l
f0104e2b	obj/kern/kernel.asm	/^f0104e2b <spin>:$/;"	l
f0104e2b	obj/kern/kernel.asm	/^f0104e2b:	eb fe                	jmp    f0104e2b <spin>$/;"	l
f0104e2d	obj/kern/kernel.asm	/^f0104e2d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0104e30	obj/kern/kernel.asm	/^f0104e30 <gdt>:$/;"	l
f0104e38	obj/kern/kernel.asm	/^f0104e38:	ff                   	(bad)  $/;"	l
f0104e39	obj/kern/kernel.asm	/^f0104e39:	ff 00                	incl   (%eax)$/;"	l
f0104e3b	obj/kern/kernel.asm	/^f0104e3b:	00 00                	add    %al,(%eax)$/;"	l
f0104e3d	obj/kern/kernel.asm	/^f0104e3d:	9a cf 00 ff ff 00 00 	lcall  $0x0,$0xffff00cf$/;"	l
f0104e44	obj/kern/kernel.asm	/^f0104e44:	00                   	.byte 0x0$/;"	l
f0104e45	obj/kern/kernel.asm	/^f0104e45:	92                   	xchg   %eax,%edx$/;"	l
f0104e46	obj/kern/kernel.asm	/^f0104e46:	cf                   	iret   $/;"	l
f0104e48	obj/kern/kernel.asm	/^f0104e48 <gdtdesc>:$/;"	l
f0104e48	obj/kern/kernel.asm	/^f0104e48:	17                   	pop    %ss$/;"	l
f0104e49	obj/kern/kernel.asm	/^f0104e49:	00 5c 70 00          	add    %bl,0x0(%eax,%esi,2)$/;"	l
f0104e4e	obj/kern/kernel.asm	/^f0104e4e <mpentry_end>:$/;"	l
f0104e4e	obj/kern/kernel.asm	/^f0104e4e:	90                   	nop$/;"	l
f0104e4f	obj/kern/kernel.asm	/^f0104e4f <mpsearch1>:$/;"	l
f0104e4f	obj/kern/kernel.asm	/^f0104e4f:	55                   	push   %ebp$/;"	l
f0104e50	obj/kern/kernel.asm	/^f0104e50:	89 e5                	mov    %esp,%ebp$/;"	l
f0104e52	obj/kern/kernel.asm	/^f0104e52:	57                   	push   %edi$/;"	l
f0104e53	obj/kern/kernel.asm	/^f0104e53:	56                   	push   %esi$/;"	l
f0104e54	obj/kern/kernel.asm	/^f0104e54:	53                   	push   %ebx$/;"	l
f0104e55	obj/kern/kernel.asm	/^f0104e55:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104e58	obj/kern/kernel.asm	/^f0104e58:	8b 0d 08 af 22 f0    	mov    0xf022af08,%ecx$/;"	l
f0104e5e	obj/kern/kernel.asm	/^f0104e5e:	89 c3                	mov    %eax,%ebx$/;"	l
f0104e60	obj/kern/kernel.asm	/^f0104e60:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f0104e63	obj/kern/kernel.asm	/^f0104e63:	39 cb                	cmp    %ecx,%ebx$/;"	l
f0104e65	obj/kern/kernel.asm	/^f0104e65:	72 12                	jb     f0104e79 <mpsearch1+0x2a>$/;"	l
f0104e67	obj/kern/kernel.asm	/^f0104e67:	50                   	push   %eax$/;"	l
f0104e68	obj/kern/kernel.asm	/^f0104e68:	68 a4 58 10 f0       	push   $0xf01058a4$/;"	l
f0104e6d	obj/kern/kernel.asm	/^f0104e6d:	6a 57                	push   $0x57$/;"	l
f0104e6f	obj/kern/kernel.asm	/^f0104e6f:	68 81 73 10 f0       	push   $0xf0107381$/;"	l
f0104e74	obj/kern/kernel.asm	/^f0104e74:	e8 c7 b1 ff ff       	call   f0100040 <_panic>$/;"	l
f0104e79	obj/kern/kernel.asm	/^f0104e79:	8d 98 00 00 00 f0    	lea    -0x10000000(%eax),%ebx$/;"	l
f0104e7f	obj/kern/kernel.asm	/^f0104e7f:	01 d0                	add    %edx,%eax$/;"	l
f0104e81	obj/kern/kernel.asm	/^f0104e81:	89 c2                	mov    %eax,%edx$/;"	l
f0104e83	obj/kern/kernel.asm	/^f0104e83:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0104e86	obj/kern/kernel.asm	/^f0104e86:	39 ca                	cmp    %ecx,%edx$/;"	l
f0104e88	obj/kern/kernel.asm	/^f0104e88:	72 12                	jb     f0104e9c <mpsearch1+0x4d>$/;"	l
f0104e8a	obj/kern/kernel.asm	/^f0104e8a:	50                   	push   %eax$/;"	l
f0104e8b	obj/kern/kernel.asm	/^f0104e8b:	68 a4 58 10 f0       	push   $0xf01058a4$/;"	l
f0104e90	obj/kern/kernel.asm	/^f0104e90:	6a 57                	push   $0x57$/;"	l
f0104e92	obj/kern/kernel.asm	/^f0104e92:	68 81 73 10 f0       	push   $0xf0107381$/;"	l
f0104e97	obj/kern/kernel.asm	/^f0104e97:	e8 a4 b1 ff ff       	call   f0100040 <_panic>$/;"	l
f0104e9c	obj/kern/kernel.asm	/^f0104e9c:	8d b0 00 00 00 f0    	lea    -0x10000000(%eax),%esi$/;"	l
f0104ea2	obj/kern/kernel.asm	/^f0104ea2:	eb 2f                	jmp    f0104ed3 <mpsearch1+0x84>$/;"	l
f0104ea4	obj/kern/kernel.asm	/^f0104ea4:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104ea7	obj/kern/kernel.asm	/^f0104ea7:	6a 04                	push   $0x4$/;"	l
f0104ea9	obj/kern/kernel.asm	/^f0104ea9:	68 91 73 10 f0       	push   $0xf0107391$/;"	l
f0104eae	obj/kern/kernel.asm	/^f0104eae:	53                   	push   %ebx$/;"	l
f0104eaf	obj/kern/kernel.asm	/^f0104eaf:	e8 e4 fd ff ff       	call   f0104c98 <memcmp>$/;"	l
f0104eb4	obj/kern/kernel.asm	/^f0104eb4:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104eb7	obj/kern/kernel.asm	/^f0104eb7:	85 c0                	test   %eax,%eax$/;"	l
f0104eb9	obj/kern/kernel.asm	/^f0104eb9:	75 15                	jne    f0104ed0 <mpsearch1+0x81>$/;"	l
f0104ebb	obj/kern/kernel.asm	/^f0104ebb:	89 da                	mov    %ebx,%edx$/;"	l
f0104ebd	obj/kern/kernel.asm	/^f0104ebd:	8d 7b 10             	lea    0x10(%ebx),%edi$/;"	l
f0104ec0	obj/kern/kernel.asm	/^f0104ec0:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0104ec3	obj/kern/kernel.asm	/^f0104ec3:	01 c8                	add    %ecx,%eax$/;"	l
f0104ec5	obj/kern/kernel.asm	/^f0104ec5:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104ec8	obj/kern/kernel.asm	/^f0104ec8:	39 d7                	cmp    %edx,%edi$/;"	l
f0104eca	obj/kern/kernel.asm	/^f0104eca:	75 f4                	jne    f0104ec0 <mpsearch1+0x71>$/;"	l
f0104ecc	obj/kern/kernel.asm	/^f0104ecc:	84 c0                	test   %al,%al$/;"	l
f0104ece	obj/kern/kernel.asm	/^f0104ece:	74 0e                	je     f0104ede <mpsearch1+0x8f>$/;"	l
f0104ed0	obj/kern/kernel.asm	/^f0104ed0:	83 c3 10             	add    $0x10,%ebx$/;"	l
f0104ed3	obj/kern/kernel.asm	/^f0104ed3:	39 f3                	cmp    %esi,%ebx$/;"	l
f0104ed5	obj/kern/kernel.asm	/^f0104ed5:	72 cd                	jb     f0104ea4 <mpsearch1+0x55>$/;"	l
f0104ed7	obj/kern/kernel.asm	/^f0104ed7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104edc	obj/kern/kernel.asm	/^f0104edc:	eb 02                	jmp    f0104ee0 <mpsearch1+0x91>$/;"	l
f0104ede	obj/kern/kernel.asm	/^f0104ede:	89 d8                	mov    %ebx,%eax$/;"	l
f0104ee0	obj/kern/kernel.asm	/^f0104ee0:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0104ee3	obj/kern/kernel.asm	/^f0104ee3:	5b                   	pop    %ebx$/;"	l
f0104ee4	obj/kern/kernel.asm	/^f0104ee4:	5e                   	pop    %esi$/;"	l
f0104ee5	obj/kern/kernel.asm	/^f0104ee5:	5f                   	pop    %edi$/;"	l
f0104ee6	obj/kern/kernel.asm	/^f0104ee6:	5d                   	pop    %ebp$/;"	l
f0104ee7	obj/kern/kernel.asm	/^f0104ee7:	c3                   	ret    $/;"	l
f0104ee8	obj/kern/kernel.asm	/^f0104ee8 <mp_init>:$/;"	l
f0104ee8	obj/kern/kernel.asm	/^f0104ee8:	55                   	push   %ebp$/;"	l
f0104ee9	obj/kern/kernel.asm	/^f0104ee9:	89 e5                	mov    %esp,%ebp$/;"	l
f0104eeb	obj/kern/kernel.asm	/^f0104eeb:	57                   	push   %edi$/;"	l
f0104eec	obj/kern/kernel.asm	/^f0104eec:	56                   	push   %esi$/;"	l
f0104eed	obj/kern/kernel.asm	/^f0104eed:	53                   	push   %ebx$/;"	l
f0104eee	obj/kern/kernel.asm	/^f0104eee:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0104ef1	obj/kern/kernel.asm	/^f0104ef1:	c7 05 c0 b3 22 f0 20 	movl   $0xf022b020,0xf022b3c0$/;"	l
f0104ef8	obj/kern/kernel.asm	/^f0104ef8:	b0 22 f0 $/;"	l
f0104efb	obj/kern/kernel.asm	/^f0104efb:	83 3d 08 af 22 f0 00 	cmpl   $0x0,0xf022af08$/;"	l
f0104f02	obj/kern/kernel.asm	/^f0104f02:	75 16                	jne    f0104f1a <mp_init+0x32>$/;"	l
f0104f04	obj/kern/kernel.asm	/^f0104f04:	68 00 04 00 00       	push   $0x400$/;"	l
f0104f09	obj/kern/kernel.asm	/^f0104f09:	68 a4 58 10 f0       	push   $0xf01058a4$/;"	l
f0104f0e	obj/kern/kernel.asm	/^f0104f0e:	6a 6f                	push   $0x6f$/;"	l
f0104f10	obj/kern/kernel.asm	/^f0104f10:	68 81 73 10 f0       	push   $0xf0107381$/;"	l
f0104f15	obj/kern/kernel.asm	/^f0104f15:	e8 26 b1 ff ff       	call   f0100040 <_panic>$/;"	l
f0104f1a	obj/kern/kernel.asm	/^f0104f1a:	0f b7 05 0e 04 00 f0 	movzwl 0xf000040e,%eax$/;"	l
f0104f21	obj/kern/kernel.asm	/^f0104f21:	85 c0                	test   %eax,%eax$/;"	l
f0104f23	obj/kern/kernel.asm	/^f0104f23:	74 16                	je     f0104f3b <mp_init+0x53>$/;"	l
f0104f25	obj/kern/kernel.asm	/^f0104f25:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0104f28	obj/kern/kernel.asm	/^f0104f28:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f0104f2d	obj/kern/kernel.asm	/^f0104f2d:	e8 1d ff ff ff       	call   f0104e4f <mpsearch1>$/;"	l
f0104f32	obj/kern/kernel.asm	/^f0104f32:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0104f35	obj/kern/kernel.asm	/^f0104f35:	85 c0                	test   %eax,%eax$/;"	l
f0104f37	obj/kern/kernel.asm	/^f0104f37:	75 3c                	jne    f0104f75 <mp_init+0x8d>$/;"	l
f0104f39	obj/kern/kernel.asm	/^f0104f39:	eb 20                	jmp    f0104f5b <mp_init+0x73>$/;"	l
f0104f3b	obj/kern/kernel.asm	/^f0104f3b:	0f b7 05 13 04 00 f0 	movzwl 0xf0000413,%eax$/;"	l
f0104f42	obj/kern/kernel.asm	/^f0104f42:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f0104f45	obj/kern/kernel.asm	/^f0104f45:	2d 00 04 00 00       	sub    $0x400,%eax$/;"	l
f0104f4a	obj/kern/kernel.asm	/^f0104f4a:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f0104f4f	obj/kern/kernel.asm	/^f0104f4f:	e8 fb fe ff ff       	call   f0104e4f <mpsearch1>$/;"	l
f0104f54	obj/kern/kernel.asm	/^f0104f54:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0104f57	obj/kern/kernel.asm	/^f0104f57:	85 c0                	test   %eax,%eax$/;"	l
f0104f59	obj/kern/kernel.asm	/^f0104f59:	75 1a                	jne    f0104f75 <mp_init+0x8d>$/;"	l
f0104f5b	obj/kern/kernel.asm	/^f0104f5b:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0104f60	obj/kern/kernel.asm	/^f0104f60:	b8 00 00 0f 00       	mov    $0xf0000,%eax$/;"	l
f0104f65	obj/kern/kernel.asm	/^f0104f65:	e8 e5 fe ff ff       	call   f0104e4f <mpsearch1>$/;"	l
f0104f6a	obj/kern/kernel.asm	/^f0104f6a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0104f6d	obj/kern/kernel.asm	/^f0104f6d:	85 c0                	test   %eax,%eax$/;"	l
f0104f6f	obj/kern/kernel.asm	/^f0104f6f:	0f 84 5d 02 00 00    	je     f01051d2 <mp_init+0x2ea>$/;"	l
f0104f75	obj/kern/kernel.asm	/^f0104f75:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104f78	obj/kern/kernel.asm	/^f0104f78:	8b 70 04             	mov    0x4(%eax),%esi$/;"	l
f0104f7b	obj/kern/kernel.asm	/^f0104f7b:	85 f6                	test   %esi,%esi$/;"	l
f0104f7d	obj/kern/kernel.asm	/^f0104f7d:	74 06                	je     f0104f85 <mp_init+0x9d>$/;"	l
f0104f7f	obj/kern/kernel.asm	/^f0104f7f:	80 78 0b 00          	cmpb   $0x0,0xb(%eax)$/;"	l
f0104f83	obj/kern/kernel.asm	/^f0104f83:	74 15                	je     f0104f9a <mp_init+0xb2>$/;"	l
f0104f85	obj/kern/kernel.asm	/^f0104f85:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104f88	obj/kern/kernel.asm	/^f0104f88:	68 f4 71 10 f0       	push   $0xf01071f4$/;"	l
f0104f8d	obj/kern/kernel.asm	/^f0104f8d:	e8 56 e6 ff ff       	call   f01035e8 <cprintf>$/;"	l
f0104f92	obj/kern/kernel.asm	/^f0104f92:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104f95	obj/kern/kernel.asm	/^f0104f95:	e9 38 02 00 00       	jmp    f01051d2 <mp_init+0x2ea>$/;"	l
f0104f9a	obj/kern/kernel.asm	/^f0104f9a:	89 f0                	mov    %esi,%eax$/;"	l
f0104f9c	obj/kern/kernel.asm	/^f0104f9c:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0104f9f	obj/kern/kernel.asm	/^f0104f9f:	3b 05 08 af 22 f0    	cmp    0xf022af08,%eax$/;"	l
f0104fa5	obj/kern/kernel.asm	/^f0104fa5:	72 15                	jb     f0104fbc <mp_init+0xd4>$/;"	l
f0104fa7	obj/kern/kernel.asm	/^f0104fa7:	56                   	push   %esi$/;"	l
f0104fa8	obj/kern/kernel.asm	/^f0104fa8:	68 a4 58 10 f0       	push   $0xf01058a4$/;"	l
f0104fad	obj/kern/kernel.asm	/^f0104fad:	68 90 00 00 00       	push   $0x90$/;"	l
f0104fb2	obj/kern/kernel.asm	/^f0104fb2:	68 81 73 10 f0       	push   $0xf0107381$/;"	l
f0104fb7	obj/kern/kernel.asm	/^f0104fb7:	e8 84 b0 ff ff       	call   f0100040 <_panic>$/;"	l
f0104fbc	obj/kern/kernel.asm	/^f0104fbc:	8d 9e 00 00 00 f0    	lea    -0x10000000(%esi),%ebx$/;"	l
f0104fc2	obj/kern/kernel.asm	/^f0104fc2:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104fc5	obj/kern/kernel.asm	/^f0104fc5:	6a 04                	push   $0x4$/;"	l
f0104fc7	obj/kern/kernel.asm	/^f0104fc7:	68 96 73 10 f0       	push   $0xf0107396$/;"	l
f0104fcc	obj/kern/kernel.asm	/^f0104fcc:	53                   	push   %ebx$/;"	l
f0104fcd	obj/kern/kernel.asm	/^f0104fcd:	e8 c6 fc ff ff       	call   f0104c98 <memcmp>$/;"	l
f0104fd2	obj/kern/kernel.asm	/^f0104fd2:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104fd5	obj/kern/kernel.asm	/^f0104fd5:	85 c0                	test   %eax,%eax$/;"	l
f0104fd7	obj/kern/kernel.asm	/^f0104fd7:	74 15                	je     f0104fee <mp_init+0x106>$/;"	l
f0104fd9	obj/kern/kernel.asm	/^f0104fd9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104fdc	obj/kern/kernel.asm	/^f0104fdc:	68 24 72 10 f0       	push   $0xf0107224$/;"	l
f0104fe1	obj/kern/kernel.asm	/^f0104fe1:	e8 02 e6 ff ff       	call   f01035e8 <cprintf>$/;"	l
f0104fe6	obj/kern/kernel.asm	/^f0104fe6:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104fe9	obj/kern/kernel.asm	/^f0104fe9:	e9 e4 01 00 00       	jmp    f01051d2 <mp_init+0x2ea>$/;"	l
f0104fee	obj/kern/kernel.asm	/^f0104fee:	0f b7 43 04          	movzwl 0x4(%ebx),%eax$/;"	l
f0104ff2	obj/kern/kernel.asm	/^f0104ff2:	66 89 45 e2          	mov    %ax,-0x1e(%ebp)$/;"	l
f0104ff6	obj/kern/kernel.asm	/^f0104ff6:	0f b7 f8             	movzwl %ax,%edi$/;"	l
f0104ff9	obj/kern/kernel.asm	/^f0104ff9:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104ffe	obj/kern/kernel.asm	/^f0104ffe:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105003	obj/kern/kernel.asm	/^f0105003:	eb 0d                	jmp    f0105012 <mp_init+0x12a>$/;"	l
f0105005	obj/kern/kernel.asm	/^f0105005:	0f b6 8c 30 00 00 00 	movzbl -0x10000000(%eax,%esi,1),%ecx$/;"	l
f010500c	obj/kern/kernel.asm	/^f010500c:	f0 $/;"	l
f010500d	obj/kern/kernel.asm	/^f010500d:	01 ca                	add    %ecx,%edx$/;"	l
f010500f	obj/kern/kernel.asm	/^f010500f:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105012	obj/kern/kernel.asm	/^f0105012:	39 c7                	cmp    %eax,%edi$/;"	l
f0105014	obj/kern/kernel.asm	/^f0105014:	75 ef                	jne    f0105005 <mp_init+0x11d>$/;"	l
f0105016	obj/kern/kernel.asm	/^f0105016:	84 d2                	test   %dl,%dl$/;"	l
f0105018	obj/kern/kernel.asm	/^f0105018:	74 15                	je     f010502f <mp_init+0x147>$/;"	l
f010501a	obj/kern/kernel.asm	/^f010501a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010501d	obj/kern/kernel.asm	/^f010501d:	68 58 72 10 f0       	push   $0xf0107258$/;"	l
f0105022	obj/kern/kernel.asm	/^f0105022:	e8 c1 e5 ff ff       	call   f01035e8 <cprintf>$/;"	l
f0105027	obj/kern/kernel.asm	/^f0105027:	83 c4 10             	add    $0x10,%esp$/;"	l
f010502a	obj/kern/kernel.asm	/^f010502a:	e9 a3 01 00 00       	jmp    f01051d2 <mp_init+0x2ea>$/;"	l
f010502f	obj/kern/kernel.asm	/^f010502f:	0f b6 43 06          	movzbl 0x6(%ebx),%eax$/;"	l
f0105033	obj/kern/kernel.asm	/^f0105033:	3c 01                	cmp    $0x1,%al$/;"	l
f0105035	obj/kern/kernel.asm	/^f0105035:	74 1d                	je     f0105054 <mp_init+0x16c>$/;"	l
f0105037	obj/kern/kernel.asm	/^f0105037:	3c 04                	cmp    $0x4,%al$/;"	l
f0105039	obj/kern/kernel.asm	/^f0105039:	74 19                	je     f0105054 <mp_init+0x16c>$/;"	l
f010503b	obj/kern/kernel.asm	/^f010503b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010503e	obj/kern/kernel.asm	/^f010503e:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105041	obj/kern/kernel.asm	/^f0105041:	50                   	push   %eax$/;"	l
f0105042	obj/kern/kernel.asm	/^f0105042:	68 7c 72 10 f0       	push   $0xf010727c$/;"	l
f0105047	obj/kern/kernel.asm	/^f0105047:	e8 9c e5 ff ff       	call   f01035e8 <cprintf>$/;"	l
f010504c	obj/kern/kernel.asm	/^f010504c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010504f	obj/kern/kernel.asm	/^f010504f:	e9 7e 01 00 00       	jmp    f01051d2 <mp_init+0x2ea>$/;"	l
f0105054	obj/kern/kernel.asm	/^f0105054:	0f b7 7b 28          	movzwl 0x28(%ebx),%edi$/;"	l
f0105058	obj/kern/kernel.asm	/^f0105058:	0f b7 4d e2          	movzwl -0x1e(%ebp),%ecx$/;"	l
f010505c	obj/kern/kernel.asm	/^f010505c:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105061	obj/kern/kernel.asm	/^f0105061:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105066	obj/kern/kernel.asm	/^f0105066:	01 ce                	add    %ecx,%esi$/;"	l
f0105068	obj/kern/kernel.asm	/^f0105068:	eb 0d                	jmp    f0105077 <mp_init+0x18f>$/;"	l
f010506a	obj/kern/kernel.asm	/^f010506a:	0f b6 8c 06 00 00 00 	movzbl -0x10000000(%esi,%eax,1),%ecx$/;"	l
f0105071	obj/kern/kernel.asm	/^f0105071:	f0 $/;"	l
f0105072	obj/kern/kernel.asm	/^f0105072:	01 ca                	add    %ecx,%edx$/;"	l
f0105074	obj/kern/kernel.asm	/^f0105074:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105077	obj/kern/kernel.asm	/^f0105077:	39 c7                	cmp    %eax,%edi$/;"	l
f0105079	obj/kern/kernel.asm	/^f0105079:	75 ef                	jne    f010506a <mp_init+0x182>$/;"	l
f010507b	obj/kern/kernel.asm	/^f010507b:	89 d0                	mov    %edx,%eax$/;"	l
f010507d	obj/kern/kernel.asm	/^f010507d:	02 43 2a             	add    0x2a(%ebx),%al$/;"	l
f0105080	obj/kern/kernel.asm	/^f0105080:	74 15                	je     f0105097 <mp_init+0x1af>$/;"	l
f0105082	obj/kern/kernel.asm	/^f0105082:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105085	obj/kern/kernel.asm	/^f0105085:	68 9c 72 10 f0       	push   $0xf010729c$/;"	l
f010508a	obj/kern/kernel.asm	/^f010508a:	e8 59 e5 ff ff       	call   f01035e8 <cprintf>$/;"	l
f010508f	obj/kern/kernel.asm	/^f010508f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105092	obj/kern/kernel.asm	/^f0105092:	e9 3b 01 00 00       	jmp    f01051d2 <mp_init+0x2ea>$/;"	l
f0105097	obj/kern/kernel.asm	/^f0105097:	85 db                	test   %ebx,%ebx$/;"	l
f0105099	obj/kern/kernel.asm	/^f0105099:	0f 84 33 01 00 00    	je     f01051d2 <mp_init+0x2ea>$/;"	l
f010509f	obj/kern/kernel.asm	/^f010509f:	c7 05 00 b0 22 f0 01 	movl   $0x1,0xf022b000$/;"	l
f01050a6	obj/kern/kernel.asm	/^f01050a6:	00 00 00 $/;"	l
f01050a9	obj/kern/kernel.asm	/^f01050a9:	8b 43 24             	mov    0x24(%ebx),%eax$/;"	l
f01050ac	obj/kern/kernel.asm	/^f01050ac:	a3 00 c0 26 f0       	mov    %eax,0xf026c000$/;"	l
f01050b1	obj/kern/kernel.asm	/^f01050b1:	8d 7b 2c             	lea    0x2c(%ebx),%edi$/;"	l
f01050b4	obj/kern/kernel.asm	/^f01050b4:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01050b9	obj/kern/kernel.asm	/^f01050b9:	e9 85 00 00 00       	jmp    f0105143 <mp_init+0x25b>$/;"	l
f01050be	obj/kern/kernel.asm	/^f01050be:	0f b6 07             	movzbl (%edi),%eax$/;"	l
f01050c1	obj/kern/kernel.asm	/^f01050c1:	84 c0                	test   %al,%al$/;"	l
f01050c3	obj/kern/kernel.asm	/^f01050c3:	74 06                	je     f01050cb <mp_init+0x1e3>$/;"	l
f01050c5	obj/kern/kernel.asm	/^f01050c5:	3c 04                	cmp    $0x4,%al$/;"	l
f01050c7	obj/kern/kernel.asm	/^f01050c7:	77 55                	ja     f010511e <mp_init+0x236>$/;"	l
f01050c9	obj/kern/kernel.asm	/^f01050c9:	eb 4e                	jmp    f0105119 <mp_init+0x231>$/;"	l
f01050cb	obj/kern/kernel.asm	/^f01050cb:	f6 47 03 02          	testb  $0x2,0x3(%edi)$/;"	l
f01050cf	obj/kern/kernel.asm	/^f01050cf:	74 11                	je     f01050e2 <mp_init+0x1fa>$/;"	l
f01050d1	obj/kern/kernel.asm	/^f01050d1:	6b 05 c4 b3 22 f0 74 	imul   $0x74,0xf022b3c4,%eax$/;"	l
f01050d8	obj/kern/kernel.asm	/^f01050d8:	05 20 b0 22 f0       	add    $0xf022b020,%eax$/;"	l
f01050dd	obj/kern/kernel.asm	/^f01050dd:	a3 c0 b3 22 f0       	mov    %eax,0xf022b3c0$/;"	l
f01050e2	obj/kern/kernel.asm	/^f01050e2:	a1 c4 b3 22 f0       	mov    0xf022b3c4,%eax$/;"	l
f01050e7	obj/kern/kernel.asm	/^f01050e7:	83 f8 07             	cmp    $0x7,%eax$/;"	l
f01050ea	obj/kern/kernel.asm	/^f01050ea:	7f 13                	jg     f01050ff <mp_init+0x217>$/;"	l
f01050ec	obj/kern/kernel.asm	/^f01050ec:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f01050ef	obj/kern/kernel.asm	/^f01050ef:	88 82 20 b0 22 f0    	mov    %al,-0xfdd4fe0(%edx)$/;"	l
f01050f5	obj/kern/kernel.asm	/^f01050f5:	83 c0 01             	add    $0x1,%eax$/;"	l
f01050f8	obj/kern/kernel.asm	/^f01050f8:	a3 c4 b3 22 f0       	mov    %eax,0xf022b3c4$/;"	l
f01050fd	obj/kern/kernel.asm	/^f01050fd:	eb 15                	jmp    f0105114 <mp_init+0x22c>$/;"	l
f01050ff	obj/kern/kernel.asm	/^f01050ff:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105102	obj/kern/kernel.asm	/^f0105102:	0f b6 47 01          	movzbl 0x1(%edi),%eax$/;"	l
f0105106	obj/kern/kernel.asm	/^f0105106:	50                   	push   %eax$/;"	l
f0105107	obj/kern/kernel.asm	/^f0105107:	68 cc 72 10 f0       	push   $0xf01072cc$/;"	l
f010510c	obj/kern/kernel.asm	/^f010510c:	e8 d7 e4 ff ff       	call   f01035e8 <cprintf>$/;"	l
f0105111	obj/kern/kernel.asm	/^f0105111:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105114	obj/kern/kernel.asm	/^f0105114:	83 c7 14             	add    $0x14,%edi$/;"	l
f0105117	obj/kern/kernel.asm	/^f0105117:	eb 27                	jmp    f0105140 <mp_init+0x258>$/;"	l
f0105119	obj/kern/kernel.asm	/^f0105119:	83 c7 08             	add    $0x8,%edi$/;"	l
f010511c	obj/kern/kernel.asm	/^f010511c:	eb 22                	jmp    f0105140 <mp_init+0x258>$/;"	l
f010511e	obj/kern/kernel.asm	/^f010511e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105121	obj/kern/kernel.asm	/^f0105121:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105124	obj/kern/kernel.asm	/^f0105124:	50                   	push   %eax$/;"	l
f0105125	obj/kern/kernel.asm	/^f0105125:	68 f4 72 10 f0       	push   $0xf01072f4$/;"	l
f010512a	obj/kern/kernel.asm	/^f010512a:	e8 b9 e4 ff ff       	call   f01035e8 <cprintf>$/;"	l
f010512f	obj/kern/kernel.asm	/^f010512f:	c7 05 00 b0 22 f0 00 	movl   $0x0,0xf022b000$/;"	l
f0105136	obj/kern/kernel.asm	/^f0105136:	00 00 00 $/;"	l
f0105139	obj/kern/kernel.asm	/^f0105139:	0f b7 73 22          	movzwl 0x22(%ebx),%esi$/;"	l
f010513d	obj/kern/kernel.asm	/^f010513d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105140	obj/kern/kernel.asm	/^f0105140:	83 c6 01             	add    $0x1,%esi$/;"	l
f0105143	obj/kern/kernel.asm	/^f0105143:	0f b7 43 22          	movzwl 0x22(%ebx),%eax$/;"	l
f0105147	obj/kern/kernel.asm	/^f0105147:	39 c6                	cmp    %eax,%esi$/;"	l
f0105149	obj/kern/kernel.asm	/^f0105149:	0f 82 6f ff ff ff    	jb     f01050be <mp_init+0x1d6>$/;"	l
f010514f	obj/kern/kernel.asm	/^f010514f:	a1 c0 b3 22 f0       	mov    0xf022b3c0,%eax$/;"	l
f0105154	obj/kern/kernel.asm	/^f0105154:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)$/;"	l
f010515b	obj/kern/kernel.asm	/^f010515b:	83 3d 00 b0 22 f0 00 	cmpl   $0x0,0xf022b000$/;"	l
f0105162	obj/kern/kernel.asm	/^f0105162:	75 26                	jne    f010518a <mp_init+0x2a2>$/;"	l
f0105164	obj/kern/kernel.asm	/^f0105164:	c7 05 c4 b3 22 f0 01 	movl   $0x1,0xf022b3c4$/;"	l
f010516b	obj/kern/kernel.asm	/^f010516b:	00 00 00 $/;"	l
f010516e	obj/kern/kernel.asm	/^f010516e:	c7 05 00 c0 26 f0 00 	movl   $0x0,0xf026c000$/;"	l
f0105175	obj/kern/kernel.asm	/^f0105175:	00 00 00 $/;"	l
f0105178	obj/kern/kernel.asm	/^f0105178:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010517b	obj/kern/kernel.asm	/^f010517b:	68 14 73 10 f0       	push   $0xf0107314$/;"	l
f0105180	obj/kern/kernel.asm	/^f0105180:	e8 63 e4 ff ff       	call   f01035e8 <cprintf>$/;"	l
f0105185	obj/kern/kernel.asm	/^f0105185:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105188	obj/kern/kernel.asm	/^f0105188:	eb 48                	jmp    f01051d2 <mp_init+0x2ea>$/;"	l
f010518a	obj/kern/kernel.asm	/^f010518a:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010518d	obj/kern/kernel.asm	/^f010518d:	ff 35 c4 b3 22 f0    	pushl  0xf022b3c4$/;"	l
f0105193	obj/kern/kernel.asm	/^f0105193:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0105196	obj/kern/kernel.asm	/^f0105196:	50                   	push   %eax$/;"	l
f0105197	obj/kern/kernel.asm	/^f0105197:	68 9b 73 10 f0       	push   $0xf010739b$/;"	l
f010519c	obj/kern/kernel.asm	/^f010519c:	e8 47 e4 ff ff       	call   f01035e8 <cprintf>$/;"	l
f01051a1	obj/kern/kernel.asm	/^f01051a1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01051a4	obj/kern/kernel.asm	/^f01051a4:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01051a7	obj/kern/kernel.asm	/^f01051a7:	80 78 0c 00          	cmpb   $0x0,0xc(%eax)$/;"	l
f01051ab	obj/kern/kernel.asm	/^f01051ab:	74 25                	je     f01051d2 <mp_init+0x2ea>$/;"	l
f01051ad	obj/kern/kernel.asm	/^f01051ad:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01051b0	obj/kern/kernel.asm	/^f01051b0:	68 40 73 10 f0       	push   $0xf0107340$/;"	l
f01051b5	obj/kern/kernel.asm	/^f01051b5:	e8 2e e4 ff ff       	call   f01035e8 <cprintf>$/;"	l
f01051ba	obj/kern/kernel.asm	/^f01051ba:	ba 22 00 00 00       	mov    $0x22,%edx$/;"	l
f01051bf	obj/kern/kernel.asm	/^f01051bf:	b8 70 00 00 00       	mov    $0x70,%eax$/;"	l
f01051c4	obj/kern/kernel.asm	/^f01051c4:	ee                   	out    %al,(%dx)$/;"	l
f01051c5	obj/kern/kernel.asm	/^f01051c5:	ba 23 00 00 00       	mov    $0x23,%edx$/;"	l
f01051ca	obj/kern/kernel.asm	/^f01051ca:	ec                   	in     (%dx),%al$/;"	l
f01051cb	obj/kern/kernel.asm	/^f01051cb:	83 c8 01             	or     $0x1,%eax$/;"	l
f01051ce	obj/kern/kernel.asm	/^f01051ce:	ee                   	out    %al,(%dx)$/;"	l
f01051cf	obj/kern/kernel.asm	/^f01051cf:	83 c4 10             	add    $0x10,%esp$/;"	l
f01051d2	obj/kern/kernel.asm	/^f01051d2:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01051d5	obj/kern/kernel.asm	/^f01051d5:	5b                   	pop    %ebx$/;"	l
f01051d6	obj/kern/kernel.asm	/^f01051d6:	5e                   	pop    %esi$/;"	l
f01051d7	obj/kern/kernel.asm	/^f01051d7:	5f                   	pop    %edi$/;"	l
f01051d8	obj/kern/kernel.asm	/^f01051d8:	5d                   	pop    %ebp$/;"	l
f01051d9	obj/kern/kernel.asm	/^f01051d9:	c3                   	ret    $/;"	l
f01051da	obj/kern/kernel.asm	/^f01051da <lapicw>:$/;"	l
f01051da	obj/kern/kernel.asm	/^f01051da:	55                   	push   %ebp$/;"	l
f01051db	obj/kern/kernel.asm	/^f01051db:	89 e5                	mov    %esp,%ebp$/;"	l
f01051dd	obj/kern/kernel.asm	/^f01051dd:	8b 0d 04 c0 26 f0    	mov    0xf026c004,%ecx$/;"	l
f01051e3	obj/kern/kernel.asm	/^f01051e3:	8d 04 81             	lea    (%ecx,%eax,4),%eax$/;"	l
f01051e6	obj/kern/kernel.asm	/^f01051e6:	89 10                	mov    %edx,(%eax)$/;"	l
f01051e8	obj/kern/kernel.asm	/^f01051e8:	a1 04 c0 26 f0       	mov    0xf026c004,%eax$/;"	l
f01051ed	obj/kern/kernel.asm	/^f01051ed:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f01051f0	obj/kern/kernel.asm	/^f01051f0:	5d                   	pop    %ebp$/;"	l
f01051f1	obj/kern/kernel.asm	/^f01051f1:	c3                   	ret    $/;"	l
f01051f2	obj/kern/kernel.asm	/^f01051f2 <cpunum>:$/;"	l
f01051f2	obj/kern/kernel.asm	/^f01051f2:	55                   	push   %ebp$/;"	l
f01051f3	obj/kern/kernel.asm	/^f01051f3:	89 e5                	mov    %esp,%ebp$/;"	l
f01051f5	obj/kern/kernel.asm	/^f01051f5:	a1 04 c0 26 f0       	mov    0xf026c004,%eax$/;"	l
f01051fa	obj/kern/kernel.asm	/^f01051fa:	85 c0                	test   %eax,%eax$/;"	l
f01051fc	obj/kern/kernel.asm	/^f01051fc:	74 08                	je     f0105206 <cpunum+0x14>$/;"	l
f01051fe	obj/kern/kernel.asm	/^f01051fe:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f0105201	obj/kern/kernel.asm	/^f0105201:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0105204	obj/kern/kernel.asm	/^f0105204:	eb 05                	jmp    f010520b <cpunum+0x19>$/;"	l
f0105206	obj/kern/kernel.asm	/^f0105206:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010520b	obj/kern/kernel.asm	/^f010520b:	5d                   	pop    %ebp$/;"	l
f010520c	obj/kern/kernel.asm	/^f010520c:	c3                   	ret    $/;"	l
f010520d	obj/kern/kernel.asm	/^f010520d <lapic_init>:$/;"	l
f010520d	obj/kern/kernel.asm	/^f010520d:	a1 00 c0 26 f0       	mov    0xf026c000,%eax$/;"	l
f0105212	obj/kern/kernel.asm	/^f0105212:	85 c0                	test   %eax,%eax$/;"	l
f0105214	obj/kern/kernel.asm	/^f0105214:	0f 84 21 01 00 00    	je     f010533b <lapic_init+0x12e>$/;"	l
f010521a	obj/kern/kernel.asm	/^f010521a:	55                   	push   %ebp$/;"	l
f010521b	obj/kern/kernel.asm	/^f010521b:	89 e5                	mov    %esp,%ebp$/;"	l
f010521d	obj/kern/kernel.asm	/^f010521d:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0105220	obj/kern/kernel.asm	/^f0105220:	68 00 10 00 00       	push   $0x1000$/;"	l
f0105225	obj/kern/kernel.asm	/^f0105225:	50                   	push   %eax$/;"	l
f0105226	obj/kern/kernel.asm	/^f0105226:	e8 45 c0 ff ff       	call   f0101270 <mmio_map_region>$/;"	l
f010522b	obj/kern/kernel.asm	/^f010522b:	a3 04 c0 26 f0       	mov    %eax,0xf026c004$/;"	l
f0105230	obj/kern/kernel.asm	/^f0105230:	ba 27 01 00 00       	mov    $0x127,%edx$/;"	l
f0105235	obj/kern/kernel.asm	/^f0105235:	b8 3c 00 00 00       	mov    $0x3c,%eax$/;"	l
f010523a	obj/kern/kernel.asm	/^f010523a:	e8 9b ff ff ff       	call   f01051da <lapicw>$/;"	l
f010523f	obj/kern/kernel.asm	/^f010523f:	ba 0b 00 00 00       	mov    $0xb,%edx$/;"	l
f0105244	obj/kern/kernel.asm	/^f0105244:	b8 f8 00 00 00       	mov    $0xf8,%eax$/;"	l
f0105249	obj/kern/kernel.asm	/^f0105249:	e8 8c ff ff ff       	call   f01051da <lapicw>$/;"	l
f010524e	obj/kern/kernel.asm	/^f010524e:	ba 20 00 02 00       	mov    $0x20020,%edx$/;"	l
f0105253	obj/kern/kernel.asm	/^f0105253:	b8 c8 00 00 00       	mov    $0xc8,%eax$/;"	l
f0105258	obj/kern/kernel.asm	/^f0105258:	e8 7d ff ff ff       	call   f01051da <lapicw>$/;"	l
f010525d	obj/kern/kernel.asm	/^f010525d:	ba 80 96 98 00       	mov    $0x989680,%edx$/;"	l
f0105262	obj/kern/kernel.asm	/^f0105262:	b8 e0 00 00 00       	mov    $0xe0,%eax$/;"	l
f0105267	obj/kern/kernel.asm	/^f0105267:	e8 6e ff ff ff       	call   f01051da <lapicw>$/;"	l
f010526c	obj/kern/kernel.asm	/^f010526c:	e8 81 ff ff ff       	call   f01051f2 <cpunum>$/;"	l
f0105271	obj/kern/kernel.asm	/^f0105271:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105274	obj/kern/kernel.asm	/^f0105274:	05 20 b0 22 f0       	add    $0xf022b020,%eax$/;"	l
f0105279	obj/kern/kernel.asm	/^f0105279:	83 c4 10             	add    $0x10,%esp$/;"	l
f010527c	obj/kern/kernel.asm	/^f010527c:	39 05 c0 b3 22 f0    	cmp    %eax,0xf022b3c0$/;"	l
f0105282	obj/kern/kernel.asm	/^f0105282:	74 0f                	je     f0105293 <lapic_init+0x86>$/;"	l
f0105284	obj/kern/kernel.asm	/^f0105284:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0105289	obj/kern/kernel.asm	/^f0105289:	b8 d4 00 00 00       	mov    $0xd4,%eax$/;"	l
f010528e	obj/kern/kernel.asm	/^f010528e:	e8 47 ff ff ff       	call   f01051da <lapicw>$/;"	l
f0105293	obj/kern/kernel.asm	/^f0105293:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0105298	obj/kern/kernel.asm	/^f0105298:	b8 d8 00 00 00       	mov    $0xd8,%eax$/;"	l
f010529d	obj/kern/kernel.asm	/^f010529d:	e8 38 ff ff ff       	call   f01051da <lapicw>$/;"	l
f01052a2	obj/kern/kernel.asm	/^f01052a2:	a1 04 c0 26 f0       	mov    0xf026c004,%eax$/;"	l
f01052a7	obj/kern/kernel.asm	/^f01052a7:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
f01052aa	obj/kern/kernel.asm	/^f01052aa:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01052ad	obj/kern/kernel.asm	/^f01052ad:	3c 03                	cmp    $0x3,%al$/;"	l
f01052af	obj/kern/kernel.asm	/^f01052af:	76 0f                	jbe    f01052c0 <lapic_init+0xb3>$/;"	l
f01052b1	obj/kern/kernel.asm	/^f01052b1:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f01052b6	obj/kern/kernel.asm	/^f01052b6:	b8 d0 00 00 00       	mov    $0xd0,%eax$/;"	l
f01052bb	obj/kern/kernel.asm	/^f01052bb:	e8 1a ff ff ff       	call   f01051da <lapicw>$/;"	l
f01052c0	obj/kern/kernel.asm	/^f01052c0:	ba 33 00 00 00       	mov    $0x33,%edx$/;"	l
f01052c5	obj/kern/kernel.asm	/^f01052c5:	b8 dc 00 00 00       	mov    $0xdc,%eax$/;"	l
f01052ca	obj/kern/kernel.asm	/^f01052ca:	e8 0b ff ff ff       	call   f01051da <lapicw>$/;"	l
f01052cf	obj/kern/kernel.asm	/^f01052cf:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01052d4	obj/kern/kernel.asm	/^f01052d4:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f01052d9	obj/kern/kernel.asm	/^f01052d9:	e8 fc fe ff ff       	call   f01051da <lapicw>$/;"	l
f01052de	obj/kern/kernel.asm	/^f01052de:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01052e3	obj/kern/kernel.asm	/^f01052e3:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f01052e8	obj/kern/kernel.asm	/^f01052e8:	e8 ed fe ff ff       	call   f01051da <lapicw>$/;"	l
f01052ed	obj/kern/kernel.asm	/^f01052ed:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01052f2	obj/kern/kernel.asm	/^f01052f2:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f01052f7	obj/kern/kernel.asm	/^f01052f7:	e8 de fe ff ff       	call   f01051da <lapicw>$/;"	l
f01052fc	obj/kern/kernel.asm	/^f01052fc:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105301	obj/kern/kernel.asm	/^f0105301:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0105306	obj/kern/kernel.asm	/^f0105306:	e8 cf fe ff ff       	call   f01051da <lapicw>$/;"	l
f010530b	obj/kern/kernel.asm	/^f010530b:	ba 00 85 08 00       	mov    $0x88500,%edx$/;"	l
f0105310	obj/kern/kernel.asm	/^f0105310:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0105315	obj/kern/kernel.asm	/^f0105315:	e8 c0 fe ff ff       	call   f01051da <lapicw>$/;"	l
f010531a	obj/kern/kernel.asm	/^f010531a:	8b 15 04 c0 26 f0    	mov    0xf026c004,%edx$/;"	l
f0105320	obj/kern/kernel.asm	/^f0105320:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f0105326	obj/kern/kernel.asm	/^f0105326:	f6 c4 10             	test   $0x10,%ah$/;"	l
f0105329	obj/kern/kernel.asm	/^f0105329:	75 f5                	jne    f0105320 <lapic_init+0x113>$/;"	l
f010532b	obj/kern/kernel.asm	/^f010532b:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105330	obj/kern/kernel.asm	/^f0105330:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0105335	obj/kern/kernel.asm	/^f0105335:	e8 a0 fe ff ff       	call   f01051da <lapicw>$/;"	l
f010533a	obj/kern/kernel.asm	/^f010533a:	c9                   	leave  $/;"	l
f010533b	obj/kern/kernel.asm	/^f010533b:	f3 c3                	repz ret $/;"	l
f010533d	obj/kern/kernel.asm	/^f010533d <lapic_eoi>:$/;"	l
f010533d	obj/kern/kernel.asm	/^f010533d:	83 3d 04 c0 26 f0 00 	cmpl   $0x0,0xf026c004$/;"	l
f0105344	obj/kern/kernel.asm	/^f0105344:	74 13                	je     f0105359 <lapic_eoi+0x1c>$/;"	l
f0105346	obj/kern/kernel.asm	/^f0105346:	55                   	push   %ebp$/;"	l
f0105347	obj/kern/kernel.asm	/^f0105347:	89 e5                	mov    %esp,%ebp$/;"	l
f0105349	obj/kern/kernel.asm	/^f0105349:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010534e	obj/kern/kernel.asm	/^f010534e:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f0105353	obj/kern/kernel.asm	/^f0105353:	e8 82 fe ff ff       	call   f01051da <lapicw>$/;"	l
f0105358	obj/kern/kernel.asm	/^f0105358:	5d                   	pop    %ebp$/;"	l
f0105359	obj/kern/kernel.asm	/^f0105359:	f3 c3                	repz ret $/;"	l
f010535b	obj/kern/kernel.asm	/^f010535b <lapic_startap>:$/;"	l
f010535b	obj/kern/kernel.asm	/^f010535b:	55                   	push   %ebp$/;"	l
f010535c	obj/kern/kernel.asm	/^f010535c:	89 e5                	mov    %esp,%ebp$/;"	l
f010535e	obj/kern/kernel.asm	/^f010535e:	56                   	push   %esi$/;"	l
f010535f	obj/kern/kernel.asm	/^f010535f:	53                   	push   %ebx$/;"	l
f0105360	obj/kern/kernel.asm	/^f0105360:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105363	obj/kern/kernel.asm	/^f0105363:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0105366	obj/kern/kernel.asm	/^f0105366:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f010536b	obj/kern/kernel.asm	/^f010536b:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0105370	obj/kern/kernel.asm	/^f0105370:	ee                   	out    %al,(%dx)$/;"	l
f0105371	obj/kern/kernel.asm	/^f0105371:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f0105376	obj/kern/kernel.asm	/^f0105376:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f010537b	obj/kern/kernel.asm	/^f010537b:	ee                   	out    %al,(%dx)$/;"	l
f010537c	obj/kern/kernel.asm	/^f010537c:	83 3d 08 af 22 f0 00 	cmpl   $0x0,0xf022af08$/;"	l
f0105383	obj/kern/kernel.asm	/^f0105383:	75 19                	jne    f010539e <lapic_startap+0x43>$/;"	l
f0105385	obj/kern/kernel.asm	/^f0105385:	68 67 04 00 00       	push   $0x467$/;"	l
f010538a	obj/kern/kernel.asm	/^f010538a:	68 a4 58 10 f0       	push   $0xf01058a4$/;"	l
f010538f	obj/kern/kernel.asm	/^f010538f:	68 98 00 00 00       	push   $0x98$/;"	l
f0105394	obj/kern/kernel.asm	/^f0105394:	68 b8 73 10 f0       	push   $0xf01073b8$/;"	l
f0105399	obj/kern/kernel.asm	/^f0105399:	e8 a2 ac ff ff       	call   f0100040 <_panic>$/;"	l
f010539e	obj/kern/kernel.asm	/^f010539e:	66 c7 05 67 04 00 f0 	movw   $0x0,0xf0000467$/;"	l
f01053a5	obj/kern/kernel.asm	/^f01053a5:	00 00 $/;"	l
f01053a7	obj/kern/kernel.asm	/^f01053a7:	89 d8                	mov    %ebx,%eax$/;"	l
f01053a9	obj/kern/kernel.asm	/^f01053a9:	c1 e8 04             	shr    $0x4,%eax$/;"	l
f01053ac	obj/kern/kernel.asm	/^f01053ac:	66 a3 69 04 00 f0    	mov    %ax,0xf0000469$/;"	l
f01053b2	obj/kern/kernel.asm	/^f01053b2:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f01053b5	obj/kern/kernel.asm	/^f01053b5:	89 f2                	mov    %esi,%edx$/;"	l
f01053b7	obj/kern/kernel.asm	/^f01053b7:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f01053bc	obj/kern/kernel.asm	/^f01053bc:	e8 19 fe ff ff       	call   f01051da <lapicw>$/;"	l
f01053c1	obj/kern/kernel.asm	/^f01053c1:	ba 00 c5 00 00       	mov    $0xc500,%edx$/;"	l
f01053c6	obj/kern/kernel.asm	/^f01053c6:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f01053cb	obj/kern/kernel.asm	/^f01053cb:	e8 0a fe ff ff       	call   f01051da <lapicw>$/;"	l
f01053d0	obj/kern/kernel.asm	/^f01053d0:	ba 00 85 00 00       	mov    $0x8500,%edx$/;"	l
f01053d5	obj/kern/kernel.asm	/^f01053d5:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f01053da	obj/kern/kernel.asm	/^f01053da:	e8 fb fd ff ff       	call   f01051da <lapicw>$/;"	l
f01053df	obj/kern/kernel.asm	/^f01053df:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f01053e2	obj/kern/kernel.asm	/^f01053e2:	80 cf 06             	or     $0x6,%bh$/;"	l
f01053e5	obj/kern/kernel.asm	/^f01053e5:	89 f2                	mov    %esi,%edx$/;"	l
f01053e7	obj/kern/kernel.asm	/^f01053e7:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f01053ec	obj/kern/kernel.asm	/^f01053ec:	e8 e9 fd ff ff       	call   f01051da <lapicw>$/;"	l
f01053f1	obj/kern/kernel.asm	/^f01053f1:	89 da                	mov    %ebx,%edx$/;"	l
f01053f3	obj/kern/kernel.asm	/^f01053f3:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f01053f8	obj/kern/kernel.asm	/^f01053f8:	e8 dd fd ff ff       	call   f01051da <lapicw>$/;"	l
f01053fd	obj/kern/kernel.asm	/^f01053fd:	89 f2                	mov    %esi,%edx$/;"	l
f01053ff	obj/kern/kernel.asm	/^f01053ff:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0105404	obj/kern/kernel.asm	/^f0105404:	e8 d1 fd ff ff       	call   f01051da <lapicw>$/;"	l
f0105409	obj/kern/kernel.asm	/^f0105409:	89 da                	mov    %ebx,%edx$/;"	l
f010540b	obj/kern/kernel.asm	/^f010540b:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0105410	obj/kern/kernel.asm	/^f0105410:	e8 c5 fd ff ff       	call   f01051da <lapicw>$/;"	l
f0105415	obj/kern/kernel.asm	/^f0105415:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0105418	obj/kern/kernel.asm	/^f0105418:	5b                   	pop    %ebx$/;"	l
f0105419	obj/kern/kernel.asm	/^f0105419:	5e                   	pop    %esi$/;"	l
f010541a	obj/kern/kernel.asm	/^f010541a:	5d                   	pop    %ebp$/;"	l
f010541b	obj/kern/kernel.asm	/^f010541b:	c3                   	ret    $/;"	l
f010541c	obj/kern/kernel.asm	/^f010541c <lapic_ipi>:$/;"	l
f010541c	obj/kern/kernel.asm	/^f010541c:	55                   	push   %ebp$/;"	l
f010541d	obj/kern/kernel.asm	/^f010541d:	89 e5                	mov    %esp,%ebp$/;"	l
f010541f	obj/kern/kernel.asm	/^f010541f:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0105422	obj/kern/kernel.asm	/^f0105422:	81 ca 00 00 0c 00    	or     $0xc0000,%edx$/;"	l
f0105428	obj/kern/kernel.asm	/^f0105428:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f010542d	obj/kern/kernel.asm	/^f010542d:	e8 a8 fd ff ff       	call   f01051da <lapicw>$/;"	l
f0105432	obj/kern/kernel.asm	/^f0105432:	8b 15 04 c0 26 f0    	mov    0xf026c004,%edx$/;"	l
f0105438	obj/kern/kernel.asm	/^f0105438:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f010543e	obj/kern/kernel.asm	/^f010543e:	f6 c4 10             	test   $0x10,%ah$/;"	l
f0105441	obj/kern/kernel.asm	/^f0105441:	75 f5                	jne    f0105438 <lapic_ipi+0x1c>$/;"	l
f0105443	obj/kern/kernel.asm	/^f0105443:	5d                   	pop    %ebp$/;"	l
f0105444	obj/kern/kernel.asm	/^f0105444:	c3                   	ret    $/;"	l
f0105445	obj/kern/kernel.asm	/^f0105445 <__spin_initlock>:$/;"	l
f0105445	obj/kern/kernel.asm	/^f0105445:	55                   	push   %ebp$/;"	l
f0105446	obj/kern/kernel.asm	/^f0105446:	89 e5                	mov    %esp,%ebp$/;"	l
f0105448	obj/kern/kernel.asm	/^f0105448:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010544b	obj/kern/kernel.asm	/^f010544b:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0105451	obj/kern/kernel.asm	/^f0105451:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105454	obj/kern/kernel.asm	/^f0105454:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
f0105457	obj/kern/kernel.asm	/^f0105457:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
f010545e	obj/kern/kernel.asm	/^f010545e:	5d                   	pop    %ebp$/;"	l
f010545f	obj/kern/kernel.asm	/^f010545f:	c3                   	ret    $/;"	l
f0105460	obj/kern/kernel.asm	/^f0105460 <spin_lock>:$/;"	l
f0105460	obj/kern/kernel.asm	/^f0105460:	55                   	push   %ebp$/;"	l
f0105461	obj/kern/kernel.asm	/^f0105461:	89 e5                	mov    %esp,%ebp$/;"	l
f0105463	obj/kern/kernel.asm	/^f0105463:	56                   	push   %esi$/;"	l
f0105464	obj/kern/kernel.asm	/^f0105464:	53                   	push   %ebx$/;"	l
f0105465	obj/kern/kernel.asm	/^f0105465:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0105468	obj/kern/kernel.asm	/^f0105468:	83 3b 00             	cmpl   $0x0,(%ebx)$/;"	l
f010546b	obj/kern/kernel.asm	/^f010546b:	74 14                	je     f0105481 <spin_lock+0x21>$/;"	l
f010546d	obj/kern/kernel.asm	/^f010546d:	8b 73 08             	mov    0x8(%ebx),%esi$/;"	l
f0105470	obj/kern/kernel.asm	/^f0105470:	e8 7d fd ff ff       	call   f01051f2 <cpunum>$/;"	l
f0105475	obj/kern/kernel.asm	/^f0105475:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105478	obj/kern/kernel.asm	/^f0105478:	05 20 b0 22 f0       	add    $0xf022b020,%eax$/;"	l
f010547d	obj/kern/kernel.asm	/^f010547d:	39 c6                	cmp    %eax,%esi$/;"	l
f010547f	obj/kern/kernel.asm	/^f010547f:	74 07                	je     f0105488 <spin_lock+0x28>$/;"	l
f0105481	obj/kern/kernel.asm	/^f0105481:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f0105486	obj/kern/kernel.asm	/^f0105486:	eb 20                	jmp    f01054a8 <spin_lock+0x48>$/;"	l
f0105488	obj/kern/kernel.asm	/^f0105488:	8b 5b 04             	mov    0x4(%ebx),%ebx$/;"	l
f010548b	obj/kern/kernel.asm	/^f010548b:	e8 62 fd ff ff       	call   f01051f2 <cpunum>$/;"	l
f0105490	obj/kern/kernel.asm	/^f0105490:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105493	obj/kern/kernel.asm	/^f0105493:	53                   	push   %ebx$/;"	l
f0105494	obj/kern/kernel.asm	/^f0105494:	50                   	push   %eax$/;"	l
f0105495	obj/kern/kernel.asm	/^f0105495:	68 c8 73 10 f0       	push   $0xf01073c8$/;"	l
f010549a	obj/kern/kernel.asm	/^f010549a:	6a 41                	push   $0x41$/;"	l
f010549c	obj/kern/kernel.asm	/^f010549c:	68 2c 74 10 f0       	push   $0xf010742c$/;"	l
f01054a1	obj/kern/kernel.asm	/^f01054a1:	e8 9a ab ff ff       	call   f0100040 <_panic>$/;"	l
f01054a6	obj/kern/kernel.asm	/^f01054a6:	f3 90                	pause  $/;"	l
f01054a8	obj/kern/kernel.asm	/^f01054a8:	89 d0                	mov    %edx,%eax$/;"	l
f01054aa	obj/kern/kernel.asm	/^f01054aa:	f0 87 03             	lock xchg %eax,(%ebx)$/;"	l
f01054ad	obj/kern/kernel.asm	/^f01054ad:	85 c0                	test   %eax,%eax$/;"	l
f01054af	obj/kern/kernel.asm	/^f01054af:	75 f5                	jne    f01054a6 <spin_lock+0x46>$/;"	l
f01054b1	obj/kern/kernel.asm	/^f01054b1:	e8 3c fd ff ff       	call   f01051f2 <cpunum>$/;"	l
f01054b6	obj/kern/kernel.asm	/^f01054b6:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01054b9	obj/kern/kernel.asm	/^f01054b9:	05 20 b0 22 f0       	add    $0xf022b020,%eax$/;"	l
f01054be	obj/kern/kernel.asm	/^f01054be:	89 43 08             	mov    %eax,0x8(%ebx)$/;"	l
f01054c1	obj/kern/kernel.asm	/^f01054c1:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f01054c4	obj/kern/kernel.asm	/^f01054c4:	89 ea                	mov    %ebp,%edx$/;"	l
f01054c6	obj/kern/kernel.asm	/^f01054c6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01054cb	obj/kern/kernel.asm	/^f01054cb:	eb 0b                	jmp    f01054d8 <spin_lock+0x78>$/;"	l
f01054cd	obj/kern/kernel.asm	/^f01054cd:	8b 4a 04             	mov    0x4(%edx),%ecx$/;"	l
f01054d0	obj/kern/kernel.asm	/^f01054d0:	89 0c 83             	mov    %ecx,(%ebx,%eax,4)$/;"	l
f01054d3	obj/kern/kernel.asm	/^f01054d3:	8b 12                	mov    (%edx),%edx$/;"	l
f01054d5	obj/kern/kernel.asm	/^f01054d5:	83 c0 01             	add    $0x1,%eax$/;"	l
f01054d8	obj/kern/kernel.asm	/^f01054d8:	81 fa ff ff 7f ef    	cmp    $0xef7fffff,%edx$/;"	l
f01054de	obj/kern/kernel.asm	/^f01054de:	76 11                	jbe    f01054f1 <spin_lock+0x91>$/;"	l
f01054e0	obj/kern/kernel.asm	/^f01054e0:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f01054e3	obj/kern/kernel.asm	/^f01054e3:	7e e8                	jle    f01054cd <spin_lock+0x6d>$/;"	l
f01054e5	obj/kern/kernel.asm	/^f01054e5:	eb 0a                	jmp    f01054f1 <spin_lock+0x91>$/;"	l
f01054e7	obj/kern/kernel.asm	/^f01054e7:	c7 04 83 00 00 00 00 	movl   $0x0,(%ebx,%eax,4)$/;"	l
f01054ee	obj/kern/kernel.asm	/^f01054ee:	83 c0 01             	add    $0x1,%eax$/;"	l
f01054f1	obj/kern/kernel.asm	/^f01054f1:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f01054f4	obj/kern/kernel.asm	/^f01054f4:	7e f1                	jle    f01054e7 <spin_lock+0x87>$/;"	l
f01054f6	obj/kern/kernel.asm	/^f01054f6:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f01054f9	obj/kern/kernel.asm	/^f01054f9:	5b                   	pop    %ebx$/;"	l
f01054fa	obj/kern/kernel.asm	/^f01054fa:	5e                   	pop    %esi$/;"	l
f01054fb	obj/kern/kernel.asm	/^f01054fb:	5d                   	pop    %ebp$/;"	l
f01054fc	obj/kern/kernel.asm	/^f01054fc:	c3                   	ret    $/;"	l
f01054fd	obj/kern/kernel.asm	/^f01054fd <spin_unlock>:$/;"	l
f01054fd	obj/kern/kernel.asm	/^f01054fd:	55                   	push   %ebp$/;"	l
f01054fe	obj/kern/kernel.asm	/^f01054fe:	89 e5                	mov    %esp,%ebp$/;"	l
f0105500	obj/kern/kernel.asm	/^f0105500:	57                   	push   %edi$/;"	l
f0105501	obj/kern/kernel.asm	/^f0105501:	56                   	push   %esi$/;"	l
f0105502	obj/kern/kernel.asm	/^f0105502:	53                   	push   %ebx$/;"	l
f0105503	obj/kern/kernel.asm	/^f0105503:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0105506	obj/kern/kernel.asm	/^f0105506:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105509	obj/kern/kernel.asm	/^f0105509:	83 3e 00             	cmpl   $0x0,(%esi)$/;"	l
f010550c	obj/kern/kernel.asm	/^f010550c:	74 18                	je     f0105526 <spin_unlock+0x29>$/;"	l
f010550e	obj/kern/kernel.asm	/^f010550e:	8b 5e 08             	mov    0x8(%esi),%ebx$/;"	l
f0105511	obj/kern/kernel.asm	/^f0105511:	e8 dc fc ff ff       	call   f01051f2 <cpunum>$/;"	l
f0105516	obj/kern/kernel.asm	/^f0105516:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105519	obj/kern/kernel.asm	/^f0105519:	05 20 b0 22 f0       	add    $0xf022b020,%eax$/;"	l
f010551e	obj/kern/kernel.asm	/^f010551e:	39 c3                	cmp    %eax,%ebx$/;"	l
f0105520	obj/kern/kernel.asm	/^f0105520:	0f 84 a5 00 00 00    	je     f01055cb <spin_unlock+0xce>$/;"	l
f0105526	obj/kern/kernel.asm	/^f0105526:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105529	obj/kern/kernel.asm	/^f0105529:	6a 28                	push   $0x28$/;"	l
f010552b	obj/kern/kernel.asm	/^f010552b:	8d 46 0c             	lea    0xc(%esi),%eax$/;"	l
f010552e	obj/kern/kernel.asm	/^f010552e:	50                   	push   %eax$/;"	l
f010552f	obj/kern/kernel.asm	/^f010552f:	8d 5d c0             	lea    -0x40(%ebp),%ebx$/;"	l
f0105532	obj/kern/kernel.asm	/^f0105532:	53                   	push   %ebx$/;"	l
f0105533	obj/kern/kernel.asm	/^f0105533:	e8 e5 f6 ff ff       	call   f0104c1d <memmove>$/;"	l
f0105538	obj/kern/kernel.asm	/^f0105538:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f010553b	obj/kern/kernel.asm	/^f010553b:	0f b6 38             	movzbl (%eax),%edi$/;"	l
f010553e	obj/kern/kernel.asm	/^f010553e:	8b 76 04             	mov    0x4(%esi),%esi$/;"	l
f0105541	obj/kern/kernel.asm	/^f0105541:	e8 ac fc ff ff       	call   f01051f2 <cpunum>$/;"	l
f0105546	obj/kern/kernel.asm	/^f0105546:	57                   	push   %edi$/;"	l
f0105547	obj/kern/kernel.asm	/^f0105547:	56                   	push   %esi$/;"	l
f0105548	obj/kern/kernel.asm	/^f0105548:	50                   	push   %eax$/;"	l
f0105549	obj/kern/kernel.asm	/^f0105549:	68 f4 73 10 f0       	push   $0xf01073f4$/;"	l
f010554e	obj/kern/kernel.asm	/^f010554e:	e8 95 e0 ff ff       	call   f01035e8 <cprintf>$/;"	l
f0105553	obj/kern/kernel.asm	/^f0105553:	83 c4 20             	add    $0x20,%esp$/;"	l
f0105556	obj/kern/kernel.asm	/^f0105556:	8d 7d a8             	lea    -0x58(%ebp),%edi$/;"	l
f0105559	obj/kern/kernel.asm	/^f0105559:	eb 54                	jmp    f01055af <spin_unlock+0xb2>$/;"	l
f010555b	obj/kern/kernel.asm	/^f010555b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010555e	obj/kern/kernel.asm	/^f010555e:	57                   	push   %edi$/;"	l
f010555f	obj/kern/kernel.asm	/^f010555f:	50                   	push   %eax$/;"	l
f0105560	obj/kern/kernel.asm	/^f0105560:	e8 f9 eb ff ff       	call   f010415e <debuginfo_eip>$/;"	l
f0105565	obj/kern/kernel.asm	/^f0105565:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105568	obj/kern/kernel.asm	/^f0105568:	85 c0                	test   %eax,%eax$/;"	l
f010556a	obj/kern/kernel.asm	/^f010556a:	78 27                	js     f0105593 <spin_unlock+0x96>$/;"	l
f010556c	obj/kern/kernel.asm	/^f010556c:	8b 06                	mov    (%esi),%eax$/;"	l
f010556e	obj/kern/kernel.asm	/^f010556e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105571	obj/kern/kernel.asm	/^f0105571:	89 c2                	mov    %eax,%edx$/;"	l
f0105573	obj/kern/kernel.asm	/^f0105573:	2b 55 b8             	sub    -0x48(%ebp),%edx$/;"	l
f0105576	obj/kern/kernel.asm	/^f0105576:	52                   	push   %edx$/;"	l
f0105577	obj/kern/kernel.asm	/^f0105577:	ff 75 b0             	pushl  -0x50(%ebp)$/;"	l
f010557a	obj/kern/kernel.asm	/^f010557a:	ff 75 b4             	pushl  -0x4c(%ebp)$/;"	l
f010557d	obj/kern/kernel.asm	/^f010557d:	ff 75 ac             	pushl  -0x54(%ebp)$/;"	l
f0105580	obj/kern/kernel.asm	/^f0105580:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f0105583	obj/kern/kernel.asm	/^f0105583:	50                   	push   %eax$/;"	l
f0105584	obj/kern/kernel.asm	/^f0105584:	68 3c 74 10 f0       	push   $0xf010743c$/;"	l
f0105589	obj/kern/kernel.asm	/^f0105589:	e8 5a e0 ff ff       	call   f01035e8 <cprintf>$/;"	l
f010558e	obj/kern/kernel.asm	/^f010558e:	83 c4 20             	add    $0x20,%esp$/;"	l
f0105591	obj/kern/kernel.asm	/^f0105591:	eb 12                	jmp    f01055a5 <spin_unlock+0xa8>$/;"	l
f0105593	obj/kern/kernel.asm	/^f0105593:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105596	obj/kern/kernel.asm	/^f0105596:	ff 36                	pushl  (%esi)$/;"	l
f0105598	obj/kern/kernel.asm	/^f0105598:	68 53 74 10 f0       	push   $0xf0107453$/;"	l
f010559d	obj/kern/kernel.asm	/^f010559d:	e8 46 e0 ff ff       	call   f01035e8 <cprintf>$/;"	l
f01055a2	obj/kern/kernel.asm	/^f01055a2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01055a5	obj/kern/kernel.asm	/^f01055a5:	83 c3 04             	add    $0x4,%ebx$/;"	l
f01055a8	obj/kern/kernel.asm	/^f01055a8:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
f01055ab	obj/kern/kernel.asm	/^f01055ab:	39 c3                	cmp    %eax,%ebx$/;"	l
f01055ad	obj/kern/kernel.asm	/^f01055ad:	74 08                	je     f01055b7 <spin_unlock+0xba>$/;"	l
f01055af	obj/kern/kernel.asm	/^f01055af:	89 de                	mov    %ebx,%esi$/;"	l
f01055b1	obj/kern/kernel.asm	/^f01055b1:	8b 03                	mov    (%ebx),%eax$/;"	l
f01055b3	obj/kern/kernel.asm	/^f01055b3:	85 c0                	test   %eax,%eax$/;"	l
f01055b5	obj/kern/kernel.asm	/^f01055b5:	75 a4                	jne    f010555b <spin_unlock+0x5e>$/;"	l
f01055b7	obj/kern/kernel.asm	/^f01055b7:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01055ba	obj/kern/kernel.asm	/^f01055ba:	68 5b 74 10 f0       	push   $0xf010745b$/;"	l
f01055bf	obj/kern/kernel.asm	/^f01055bf:	6a 67                	push   $0x67$/;"	l
f01055c1	obj/kern/kernel.asm	/^f01055c1:	68 2c 74 10 f0       	push   $0xf010742c$/;"	l
f01055c6	obj/kern/kernel.asm	/^f01055c6:	e8 75 aa ff ff       	call   f0100040 <_panic>$/;"	l
f01055cb	obj/kern/kernel.asm	/^f01055cb:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)$/;"	l
f01055d2	obj/kern/kernel.asm	/^f01055d2:	c7 46 08 00 00 00 00 	movl   $0x0,0x8(%esi)$/;"	l
f01055d9	obj/kern/kernel.asm	/^f01055d9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01055de	obj/kern/kernel.asm	/^f01055de:	f0 87 06             	lock xchg %eax,(%esi)$/;"	l
f01055e1	obj/kern/kernel.asm	/^f01055e1:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01055e4	obj/kern/kernel.asm	/^f01055e4:	5b                   	pop    %ebx$/;"	l
f01055e5	obj/kern/kernel.asm	/^f01055e5:	5e                   	pop    %esi$/;"	l
f01055e6	obj/kern/kernel.asm	/^f01055e6:	5f                   	pop    %edi$/;"	l
f01055e7	obj/kern/kernel.asm	/^f01055e7:	5d                   	pop    %ebp$/;"	l
f01055e8	obj/kern/kernel.asm	/^f01055e8:	c3                   	ret    $/;"	l
f01055e9	obj/kern/kernel.asm	/^f01055e9:	66 90                	xchg   %ax,%ax$/;"	l
f01055eb	obj/kern/kernel.asm	/^f01055eb:	66 90                	xchg   %ax,%ax$/;"	l
f01055ed	obj/kern/kernel.asm	/^f01055ed:	66 90                	xchg   %ax,%ax$/;"	l
f01055ef	obj/kern/kernel.asm	/^f01055ef:	90                   	nop$/;"	l
f01055f0	obj/kern/kernel.asm	/^f01055f0 <__udivdi3>:$/;"	l
f01055f0	obj/kern/kernel.asm	/^f01055f0:	55                   	push   %ebp$/;"	l
f01055f1	obj/kern/kernel.asm	/^f01055f1:	57                   	push   %edi$/;"	l
f01055f2	obj/kern/kernel.asm	/^f01055f2:	56                   	push   %esi$/;"	l
f01055f3	obj/kern/kernel.asm	/^f01055f3:	53                   	push   %ebx$/;"	l
f01055f4	obj/kern/kernel.asm	/^f01055f4:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01055f7	obj/kern/kernel.asm	/^f01055f7:	8b 74 24 3c          	mov    0x3c(%esp),%esi$/;"	l
f01055fb	obj/kern/kernel.asm	/^f01055fb:	8b 5c 24 30          	mov    0x30(%esp),%ebx$/;"	l
f01055ff	obj/kern/kernel.asm	/^f01055ff:	8b 4c 24 34          	mov    0x34(%esp),%ecx$/;"	l
f0105603	obj/kern/kernel.asm	/^f0105603:	8b 7c 24 38          	mov    0x38(%esp),%edi$/;"	l
f0105607	obj/kern/kernel.asm	/^f0105607:	85 f6                	test   %esi,%esi$/;"	l
f0105609	obj/kern/kernel.asm	/^f0105609:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f010560d	obj/kern/kernel.asm	/^f010560d:	89 ca                	mov    %ecx,%edx$/;"	l
f010560f	obj/kern/kernel.asm	/^f010560f:	89 f8                	mov    %edi,%eax$/;"	l
f0105611	obj/kern/kernel.asm	/^f0105611:	75 3d                	jne    f0105650 <__udivdi3+0x60>$/;"	l
f0105613	obj/kern/kernel.asm	/^f0105613:	39 cf                	cmp    %ecx,%edi$/;"	l
f0105615	obj/kern/kernel.asm	/^f0105615:	0f 87 c5 00 00 00    	ja     f01056e0 <__udivdi3+0xf0>$/;"	l
f010561b	obj/kern/kernel.asm	/^f010561b:	85 ff                	test   %edi,%edi$/;"	l
f010561d	obj/kern/kernel.asm	/^f010561d:	89 fd                	mov    %edi,%ebp$/;"	l
f010561f	obj/kern/kernel.asm	/^f010561f:	75 0b                	jne    f010562c <__udivdi3+0x3c>$/;"	l
f0105621	obj/kern/kernel.asm	/^f0105621:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0105626	obj/kern/kernel.asm	/^f0105626:	31 d2                	xor    %edx,%edx$/;"	l
f0105628	obj/kern/kernel.asm	/^f0105628:	f7 f7                	div    %edi$/;"	l
f010562a	obj/kern/kernel.asm	/^f010562a:	89 c5                	mov    %eax,%ebp$/;"	l
f010562c	obj/kern/kernel.asm	/^f010562c:	89 c8                	mov    %ecx,%eax$/;"	l
f010562e	obj/kern/kernel.asm	/^f010562e:	31 d2                	xor    %edx,%edx$/;"	l
f0105630	obj/kern/kernel.asm	/^f0105630:	f7 f5                	div    %ebp$/;"	l
f0105632	obj/kern/kernel.asm	/^f0105632:	89 c1                	mov    %eax,%ecx$/;"	l
f0105634	obj/kern/kernel.asm	/^f0105634:	89 d8                	mov    %ebx,%eax$/;"	l
f0105636	obj/kern/kernel.asm	/^f0105636:	89 cf                	mov    %ecx,%edi$/;"	l
f0105638	obj/kern/kernel.asm	/^f0105638:	f7 f5                	div    %ebp$/;"	l
f010563a	obj/kern/kernel.asm	/^f010563a:	89 c3                	mov    %eax,%ebx$/;"	l
f010563c	obj/kern/kernel.asm	/^f010563c:	89 d8                	mov    %ebx,%eax$/;"	l
f010563e	obj/kern/kernel.asm	/^f010563e:	89 fa                	mov    %edi,%edx$/;"	l
f0105640	obj/kern/kernel.asm	/^f0105640:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0105643	obj/kern/kernel.asm	/^f0105643:	5b                   	pop    %ebx$/;"	l
f0105644	obj/kern/kernel.asm	/^f0105644:	5e                   	pop    %esi$/;"	l
f0105645	obj/kern/kernel.asm	/^f0105645:	5f                   	pop    %edi$/;"	l
f0105646	obj/kern/kernel.asm	/^f0105646:	5d                   	pop    %ebp$/;"	l
f0105647	obj/kern/kernel.asm	/^f0105647:	c3                   	ret    $/;"	l
f0105648	obj/kern/kernel.asm	/^f0105648:	90                   	nop$/;"	l
f0105649	obj/kern/kernel.asm	/^f0105649:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0105650	obj/kern/kernel.asm	/^f0105650:	39 ce                	cmp    %ecx,%esi$/;"	l
f0105652	obj/kern/kernel.asm	/^f0105652:	77 74                	ja     f01056c8 <__udivdi3+0xd8>$/;"	l
f0105654	obj/kern/kernel.asm	/^f0105654:	0f bd fe             	bsr    %esi,%edi$/;"	l
f0105657	obj/kern/kernel.asm	/^f0105657:	83 f7 1f             	xor    $0x1f,%edi$/;"	l
f010565a	obj/kern/kernel.asm	/^f010565a:	0f 84 98 00 00 00    	je     f01056f8 <__udivdi3+0x108>$/;"	l
f0105660	obj/kern/kernel.asm	/^f0105660:	bb 20 00 00 00       	mov    $0x20,%ebx$/;"	l
f0105665	obj/kern/kernel.asm	/^f0105665:	89 f9                	mov    %edi,%ecx$/;"	l
f0105667	obj/kern/kernel.asm	/^f0105667:	89 c5                	mov    %eax,%ebp$/;"	l
f0105669	obj/kern/kernel.asm	/^f0105669:	29 fb                	sub    %edi,%ebx$/;"	l
f010566b	obj/kern/kernel.asm	/^f010566b:	d3 e6                	shl    %cl,%esi$/;"	d
f010566d	obj/kern/kernel.asm	/^f010566d:	89 d9                	mov    %ebx,%ecx$/;"	l
f010566f	obj/kern/kernel.asm	/^f010566f:	d3 ed                	shr    %cl,%ebp$/;"	d
f0105671	obj/kern/kernel.asm	/^f0105671:	89 f9                	mov    %edi,%ecx$/;"	l
f0105673	obj/kern/kernel.asm	/^f0105673:	d3 e0                	shl    %cl,%eax$/;"	d
f0105675	obj/kern/kernel.asm	/^f0105675:	09 ee                	or     %ebp,%esi$/;"	l
f0105677	obj/kern/kernel.asm	/^f0105677:	89 d9                	mov    %ebx,%ecx$/;"	l
f0105679	obj/kern/kernel.asm	/^f0105679:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010567d	obj/kern/kernel.asm	/^f010567d:	89 d5                	mov    %edx,%ebp$/;"	l
f010567f	obj/kern/kernel.asm	/^f010567f:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f0105683	obj/kern/kernel.asm	/^f0105683:	d3 ed                	shr    %cl,%ebp$/;"	d
f0105685	obj/kern/kernel.asm	/^f0105685:	89 f9                	mov    %edi,%ecx$/;"	l
f0105687	obj/kern/kernel.asm	/^f0105687:	d3 e2                	shl    %cl,%edx$/;"	d
f0105689	obj/kern/kernel.asm	/^f0105689:	89 d9                	mov    %ebx,%ecx$/;"	l
f010568b	obj/kern/kernel.asm	/^f010568b:	d3 e8                	shr    %cl,%eax$/;"	d
f010568d	obj/kern/kernel.asm	/^f010568d:	09 c2                	or     %eax,%edx$/;"	l
f010568f	obj/kern/kernel.asm	/^f010568f:	89 d0                	mov    %edx,%eax$/;"	l
f0105691	obj/kern/kernel.asm	/^f0105691:	89 ea                	mov    %ebp,%edx$/;"	l
f0105693	obj/kern/kernel.asm	/^f0105693:	f7 f6                	div    %esi$/;"	l
f0105695	obj/kern/kernel.asm	/^f0105695:	89 d5                	mov    %edx,%ebp$/;"	l
f0105697	obj/kern/kernel.asm	/^f0105697:	89 c3                	mov    %eax,%ebx$/;"	l
f0105699	obj/kern/kernel.asm	/^f0105699:	f7 64 24 0c          	mull   0xc(%esp)$/;"	l
f010569d	obj/kern/kernel.asm	/^f010569d:	39 d5                	cmp    %edx,%ebp$/;"	l
f010569f	obj/kern/kernel.asm	/^f010569f:	72 10                	jb     f01056b1 <__udivdi3+0xc1>$/;"	l
f01056a1	obj/kern/kernel.asm	/^f01056a1:	8b 74 24 08          	mov    0x8(%esp),%esi$/;"	l
f01056a5	obj/kern/kernel.asm	/^f01056a5:	89 f9                	mov    %edi,%ecx$/;"	l
f01056a7	obj/kern/kernel.asm	/^f01056a7:	d3 e6                	shl    %cl,%esi$/;"	d
f01056a9	obj/kern/kernel.asm	/^f01056a9:	39 c6                	cmp    %eax,%esi$/;"	l
f01056ab	obj/kern/kernel.asm	/^f01056ab:	73 07                	jae    f01056b4 <__udivdi3+0xc4>$/;"	l
f01056ad	obj/kern/kernel.asm	/^f01056ad:	39 d5                	cmp    %edx,%ebp$/;"	l
f01056af	obj/kern/kernel.asm	/^f01056af:	75 03                	jne    f01056b4 <__udivdi3+0xc4>$/;"	l
f01056b1	obj/kern/kernel.asm	/^f01056b1:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01056b4	obj/kern/kernel.asm	/^f01056b4:	31 ff                	xor    %edi,%edi$/;"	l
f01056b6	obj/kern/kernel.asm	/^f01056b6:	89 d8                	mov    %ebx,%eax$/;"	l
f01056b8	obj/kern/kernel.asm	/^f01056b8:	89 fa                	mov    %edi,%edx$/;"	l
f01056ba	obj/kern/kernel.asm	/^f01056ba:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01056bd	obj/kern/kernel.asm	/^f01056bd:	5b                   	pop    %ebx$/;"	l
f01056be	obj/kern/kernel.asm	/^f01056be:	5e                   	pop    %esi$/;"	l
f01056bf	obj/kern/kernel.asm	/^f01056bf:	5f                   	pop    %edi$/;"	l
f01056c0	obj/kern/kernel.asm	/^f01056c0:	5d                   	pop    %ebp$/;"	l
f01056c1	obj/kern/kernel.asm	/^f01056c1:	c3                   	ret    $/;"	l
f01056c2	obj/kern/kernel.asm	/^f01056c2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f01056c8	obj/kern/kernel.asm	/^f01056c8:	31 ff                	xor    %edi,%edi$/;"	l
f01056ca	obj/kern/kernel.asm	/^f01056ca:	31 db                	xor    %ebx,%ebx$/;"	l
f01056cc	obj/kern/kernel.asm	/^f01056cc:	89 d8                	mov    %ebx,%eax$/;"	l
f01056ce	obj/kern/kernel.asm	/^f01056ce:	89 fa                	mov    %edi,%edx$/;"	l
f01056d0	obj/kern/kernel.asm	/^f01056d0:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01056d3	obj/kern/kernel.asm	/^f01056d3:	5b                   	pop    %ebx$/;"	l
f01056d4	obj/kern/kernel.asm	/^f01056d4:	5e                   	pop    %esi$/;"	l
f01056d5	obj/kern/kernel.asm	/^f01056d5:	5f                   	pop    %edi$/;"	l
f01056d6	obj/kern/kernel.asm	/^f01056d6:	5d                   	pop    %ebp$/;"	l
f01056d7	obj/kern/kernel.asm	/^f01056d7:	c3                   	ret    $/;"	l
f01056d8	obj/kern/kernel.asm	/^f01056d8:	90                   	nop$/;"	l
f01056d9	obj/kern/kernel.asm	/^f01056d9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01056e0	obj/kern/kernel.asm	/^f01056e0:	89 d8                	mov    %ebx,%eax$/;"	l
f01056e2	obj/kern/kernel.asm	/^f01056e2:	f7 f7                	div    %edi$/;"	l
f01056e4	obj/kern/kernel.asm	/^f01056e4:	31 ff                	xor    %edi,%edi$/;"	l
f01056e6	obj/kern/kernel.asm	/^f01056e6:	89 c3                	mov    %eax,%ebx$/;"	l
f01056e8	obj/kern/kernel.asm	/^f01056e8:	89 d8                	mov    %ebx,%eax$/;"	l
f01056ea	obj/kern/kernel.asm	/^f01056ea:	89 fa                	mov    %edi,%edx$/;"	l
f01056ec	obj/kern/kernel.asm	/^f01056ec:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01056ef	obj/kern/kernel.asm	/^f01056ef:	5b                   	pop    %ebx$/;"	l
f01056f0	obj/kern/kernel.asm	/^f01056f0:	5e                   	pop    %esi$/;"	l
f01056f1	obj/kern/kernel.asm	/^f01056f1:	5f                   	pop    %edi$/;"	l
f01056f2	obj/kern/kernel.asm	/^f01056f2:	5d                   	pop    %ebp$/;"	l
f01056f3	obj/kern/kernel.asm	/^f01056f3:	c3                   	ret    $/;"	l
f01056f4	obj/kern/kernel.asm	/^f01056f4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01056f8	obj/kern/kernel.asm	/^f01056f8:	39 ce                	cmp    %ecx,%esi$/;"	l
f01056fa	obj/kern/kernel.asm	/^f01056fa:	72 0c                	jb     f0105708 <__udivdi3+0x118>$/;"	l
f01056fc	obj/kern/kernel.asm	/^f01056fc:	31 db                	xor    %ebx,%ebx$/;"	l
f01056fe	obj/kern/kernel.asm	/^f01056fe:	3b 44 24 08          	cmp    0x8(%esp),%eax$/;"	l
f0105702	obj/kern/kernel.asm	/^f0105702:	0f 87 34 ff ff ff    	ja     f010563c <__udivdi3+0x4c>$/;"	l
f0105708	obj/kern/kernel.asm	/^f0105708:	bb 01 00 00 00       	mov    $0x1,%ebx$/;"	l
f010570d	obj/kern/kernel.asm	/^f010570d:	e9 2a ff ff ff       	jmp    f010563c <__udivdi3+0x4c>$/;"	l
f0105712	obj/kern/kernel.asm	/^f0105712:	66 90                	xchg   %ax,%ax$/;"	l
f0105714	obj/kern/kernel.asm	/^f0105714:	66 90                	xchg   %ax,%ax$/;"	l
f0105716	obj/kern/kernel.asm	/^f0105716:	66 90                	xchg   %ax,%ax$/;"	l
f0105718	obj/kern/kernel.asm	/^f0105718:	66 90                	xchg   %ax,%ax$/;"	l
f010571a	obj/kern/kernel.asm	/^f010571a:	66 90                	xchg   %ax,%ax$/;"	l
f010571c	obj/kern/kernel.asm	/^f010571c:	66 90                	xchg   %ax,%ax$/;"	l
f010571e	obj/kern/kernel.asm	/^f010571e:	66 90                	xchg   %ax,%ax$/;"	l
f0105720	obj/kern/kernel.asm	/^f0105720 <__umoddi3>:$/;"	l
f0105720	obj/kern/kernel.asm	/^f0105720:	55                   	push   %ebp$/;"	l
f0105721	obj/kern/kernel.asm	/^f0105721:	57                   	push   %edi$/;"	l
f0105722	obj/kern/kernel.asm	/^f0105722:	56                   	push   %esi$/;"	l
f0105723	obj/kern/kernel.asm	/^f0105723:	53                   	push   %ebx$/;"	l
f0105724	obj/kern/kernel.asm	/^f0105724:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0105727	obj/kern/kernel.asm	/^f0105727:	8b 54 24 3c          	mov    0x3c(%esp),%edx$/;"	l
f010572b	obj/kern/kernel.asm	/^f010572b:	8b 4c 24 30          	mov    0x30(%esp),%ecx$/;"	l
f010572f	obj/kern/kernel.asm	/^f010572f:	8b 74 24 34          	mov    0x34(%esp),%esi$/;"	l
f0105733	obj/kern/kernel.asm	/^f0105733:	8b 7c 24 38          	mov    0x38(%esp),%edi$/;"	l
f0105737	obj/kern/kernel.asm	/^f0105737:	85 d2                	test   %edx,%edx$/;"	l
f0105739	obj/kern/kernel.asm	/^f0105739:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f010573d	obj/kern/kernel.asm	/^f010573d:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0105741	obj/kern/kernel.asm	/^f0105741:	89 f3                	mov    %esi,%ebx$/;"	l
f0105743	obj/kern/kernel.asm	/^f0105743:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0105746	obj/kern/kernel.asm	/^f0105746:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010574a	obj/kern/kernel.asm	/^f010574a:	75 1c                	jne    f0105768 <__umoddi3+0x48>$/;"	l
f010574c	obj/kern/kernel.asm	/^f010574c:	39 f7                	cmp    %esi,%edi$/;"	l
f010574e	obj/kern/kernel.asm	/^f010574e:	76 50                	jbe    f01057a0 <__umoddi3+0x80>$/;"	l
f0105750	obj/kern/kernel.asm	/^f0105750:	89 c8                	mov    %ecx,%eax$/;"	l
f0105752	obj/kern/kernel.asm	/^f0105752:	89 f2                	mov    %esi,%edx$/;"	l
f0105754	obj/kern/kernel.asm	/^f0105754:	f7 f7                	div    %edi$/;"	l
f0105756	obj/kern/kernel.asm	/^f0105756:	89 d0                	mov    %edx,%eax$/;"	l
f0105758	obj/kern/kernel.asm	/^f0105758:	31 d2                	xor    %edx,%edx$/;"	l
f010575a	obj/kern/kernel.asm	/^f010575a:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010575d	obj/kern/kernel.asm	/^f010575d:	5b                   	pop    %ebx$/;"	l
f010575e	obj/kern/kernel.asm	/^f010575e:	5e                   	pop    %esi$/;"	l
f010575f	obj/kern/kernel.asm	/^f010575f:	5f                   	pop    %edi$/;"	l
f0105760	obj/kern/kernel.asm	/^f0105760:	5d                   	pop    %ebp$/;"	l
f0105761	obj/kern/kernel.asm	/^f0105761:	c3                   	ret    $/;"	l
f0105762	obj/kern/kernel.asm	/^f0105762:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f0105768	obj/kern/kernel.asm	/^f0105768:	39 f2                	cmp    %esi,%edx$/;"	l
f010576a	obj/kern/kernel.asm	/^f010576a:	89 d0                	mov    %edx,%eax$/;"	l
f010576c	obj/kern/kernel.asm	/^f010576c:	77 52                	ja     f01057c0 <__umoddi3+0xa0>$/;"	l
f010576e	obj/kern/kernel.asm	/^f010576e:	0f bd ea             	bsr    %edx,%ebp$/;"	l
f0105771	obj/kern/kernel.asm	/^f0105771:	83 f5 1f             	xor    $0x1f,%ebp$/;"	l
f0105774	obj/kern/kernel.asm	/^f0105774:	75 5a                	jne    f01057d0 <__umoddi3+0xb0>$/;"	l
f0105776	obj/kern/kernel.asm	/^f0105776:	3b 54 24 04          	cmp    0x4(%esp),%edx$/;"	l
f010577a	obj/kern/kernel.asm	/^f010577a:	0f 82 e0 00 00 00    	jb     f0105860 <__umoddi3+0x140>$/;"	l
f0105780	obj/kern/kernel.asm	/^f0105780:	39 0c 24             	cmp    %ecx,(%esp)$/;"	l
f0105783	obj/kern/kernel.asm	/^f0105783:	0f 86 d7 00 00 00    	jbe    f0105860 <__umoddi3+0x140>$/;"	l
f0105789	obj/kern/kernel.asm	/^f0105789:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f010578d	obj/kern/kernel.asm	/^f010578d:	8b 54 24 04          	mov    0x4(%esp),%edx$/;"	l
f0105791	obj/kern/kernel.asm	/^f0105791:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0105794	obj/kern/kernel.asm	/^f0105794:	5b                   	pop    %ebx$/;"	l
f0105795	obj/kern/kernel.asm	/^f0105795:	5e                   	pop    %esi$/;"	l
f0105796	obj/kern/kernel.asm	/^f0105796:	5f                   	pop    %edi$/;"	l
f0105797	obj/kern/kernel.asm	/^f0105797:	5d                   	pop    %ebp$/;"	l
f0105798	obj/kern/kernel.asm	/^f0105798:	c3                   	ret    $/;"	l
f0105799	obj/kern/kernel.asm	/^f0105799:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01057a0	obj/kern/kernel.asm	/^f01057a0:	85 ff                	test   %edi,%edi$/;"	l
f01057a2	obj/kern/kernel.asm	/^f01057a2:	89 fd                	mov    %edi,%ebp$/;"	l
f01057a4	obj/kern/kernel.asm	/^f01057a4:	75 0b                	jne    f01057b1 <__umoddi3+0x91>$/;"	l
f01057a6	obj/kern/kernel.asm	/^f01057a6:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01057ab	obj/kern/kernel.asm	/^f01057ab:	31 d2                	xor    %edx,%edx$/;"	l
f01057ad	obj/kern/kernel.asm	/^f01057ad:	f7 f7                	div    %edi$/;"	l
f01057af	obj/kern/kernel.asm	/^f01057af:	89 c5                	mov    %eax,%ebp$/;"	l
f01057b1	obj/kern/kernel.asm	/^f01057b1:	89 f0                	mov    %esi,%eax$/;"	l
f01057b3	obj/kern/kernel.asm	/^f01057b3:	31 d2                	xor    %edx,%edx$/;"	l
f01057b5	obj/kern/kernel.asm	/^f01057b5:	f7 f5                	div    %ebp$/;"	l
f01057b7	obj/kern/kernel.asm	/^f01057b7:	89 c8                	mov    %ecx,%eax$/;"	l
f01057b9	obj/kern/kernel.asm	/^f01057b9:	f7 f5                	div    %ebp$/;"	l
f01057bb	obj/kern/kernel.asm	/^f01057bb:	89 d0                	mov    %edx,%eax$/;"	l
f01057bd	obj/kern/kernel.asm	/^f01057bd:	eb 99                	jmp    f0105758 <__umoddi3+0x38>$/;"	l
f01057bf	obj/kern/kernel.asm	/^f01057bf:	90                   	nop$/;"	l
f01057c0	obj/kern/kernel.asm	/^f01057c0:	89 c8                	mov    %ecx,%eax$/;"	l
f01057c2	obj/kern/kernel.asm	/^f01057c2:	89 f2                	mov    %esi,%edx$/;"	l
f01057c4	obj/kern/kernel.asm	/^f01057c4:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01057c7	obj/kern/kernel.asm	/^f01057c7:	5b                   	pop    %ebx$/;"	l
f01057c8	obj/kern/kernel.asm	/^f01057c8:	5e                   	pop    %esi$/;"	l
f01057c9	obj/kern/kernel.asm	/^f01057c9:	5f                   	pop    %edi$/;"	l
f01057ca	obj/kern/kernel.asm	/^f01057ca:	5d                   	pop    %ebp$/;"	l
f01057cb	obj/kern/kernel.asm	/^f01057cb:	c3                   	ret    $/;"	l
f01057cc	obj/kern/kernel.asm	/^f01057cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01057d0	obj/kern/kernel.asm	/^f01057d0:	8b 34 24             	mov    (%esp),%esi$/;"	l
f01057d3	obj/kern/kernel.asm	/^f01057d3:	bf 20 00 00 00       	mov    $0x20,%edi$/;"	l
f01057d8	obj/kern/kernel.asm	/^f01057d8:	89 e9                	mov    %ebp,%ecx$/;"	l
f01057da	obj/kern/kernel.asm	/^f01057da:	29 ef                	sub    %ebp,%edi$/;"	l
f01057dc	obj/kern/kernel.asm	/^f01057dc:	d3 e0                	shl    %cl,%eax$/;"	d
f01057de	obj/kern/kernel.asm	/^f01057de:	89 f9                	mov    %edi,%ecx$/;"	l
f01057e0	obj/kern/kernel.asm	/^f01057e0:	89 f2                	mov    %esi,%edx$/;"	l
f01057e2	obj/kern/kernel.asm	/^f01057e2:	d3 ea                	shr    %cl,%edx$/;"	d
f01057e4	obj/kern/kernel.asm	/^f01057e4:	89 e9                	mov    %ebp,%ecx$/;"	l
f01057e6	obj/kern/kernel.asm	/^f01057e6:	09 c2                	or     %eax,%edx$/;"	l
f01057e8	obj/kern/kernel.asm	/^f01057e8:	89 d8                	mov    %ebx,%eax$/;"	l
f01057ea	obj/kern/kernel.asm	/^f01057ea:	89 14 24             	mov    %edx,(%esp)$/;"	l
f01057ed	obj/kern/kernel.asm	/^f01057ed:	89 f2                	mov    %esi,%edx$/;"	l
f01057ef	obj/kern/kernel.asm	/^f01057ef:	d3 e2                	shl    %cl,%edx$/;"	d
f01057f1	obj/kern/kernel.asm	/^f01057f1:	89 f9                	mov    %edi,%ecx$/;"	l
f01057f3	obj/kern/kernel.asm	/^f01057f3:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01057f7	obj/kern/kernel.asm	/^f01057f7:	8b 54 24 0c          	mov    0xc(%esp),%edx$/;"	l
f01057fb	obj/kern/kernel.asm	/^f01057fb:	d3 e8                	shr    %cl,%eax$/;"	d
f01057fd	obj/kern/kernel.asm	/^f01057fd:	89 e9                	mov    %ebp,%ecx$/;"	l
f01057ff	obj/kern/kernel.asm	/^f01057ff:	89 c6                	mov    %eax,%esi$/;"	l
f0105801	obj/kern/kernel.asm	/^f0105801:	d3 e3                	shl    %cl,%ebx$/;"	d
f0105803	obj/kern/kernel.asm	/^f0105803:	89 f9                	mov    %edi,%ecx$/;"	l
f0105805	obj/kern/kernel.asm	/^f0105805:	89 d0                	mov    %edx,%eax$/;"	l
f0105807	obj/kern/kernel.asm	/^f0105807:	d3 e8                	shr    %cl,%eax$/;"	d
f0105809	obj/kern/kernel.asm	/^f0105809:	89 e9                	mov    %ebp,%ecx$/;"	l
f010580b	obj/kern/kernel.asm	/^f010580b:	09 d8                	or     %ebx,%eax$/;"	l
f010580d	obj/kern/kernel.asm	/^f010580d:	89 d3                	mov    %edx,%ebx$/;"	l
f010580f	obj/kern/kernel.asm	/^f010580f:	89 f2                	mov    %esi,%edx$/;"	l
f0105811	obj/kern/kernel.asm	/^f0105811:	f7 34 24             	divl   (%esp)$/;"	l
f0105814	obj/kern/kernel.asm	/^f0105814:	89 d6                	mov    %edx,%esi$/;"	l
f0105816	obj/kern/kernel.asm	/^f0105816:	d3 e3                	shl    %cl,%ebx$/;"	d
f0105818	obj/kern/kernel.asm	/^f0105818:	f7 64 24 04          	mull   0x4(%esp)$/;"	l
f010581c	obj/kern/kernel.asm	/^f010581c:	39 d6                	cmp    %edx,%esi$/;"	l
f010581e	obj/kern/kernel.asm	/^f010581e:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0105822	obj/kern/kernel.asm	/^f0105822:	89 d1                	mov    %edx,%ecx$/;"	l
f0105824	obj/kern/kernel.asm	/^f0105824:	89 c3                	mov    %eax,%ebx$/;"	l
f0105826	obj/kern/kernel.asm	/^f0105826:	72 08                	jb     f0105830 <__umoddi3+0x110>$/;"	l
f0105828	obj/kern/kernel.asm	/^f0105828:	75 11                	jne    f010583b <__umoddi3+0x11b>$/;"	l
f010582a	obj/kern/kernel.asm	/^f010582a:	39 44 24 08          	cmp    %eax,0x8(%esp)$/;"	l
f010582e	obj/kern/kernel.asm	/^f010582e:	73 0b                	jae    f010583b <__umoddi3+0x11b>$/;"	l
f0105830	obj/kern/kernel.asm	/^f0105830:	2b 44 24 04          	sub    0x4(%esp),%eax$/;"	l
f0105834	obj/kern/kernel.asm	/^f0105834:	1b 14 24             	sbb    (%esp),%edx$/;"	l
f0105837	obj/kern/kernel.asm	/^f0105837:	89 d1                	mov    %edx,%ecx$/;"	l
f0105839	obj/kern/kernel.asm	/^f0105839:	89 c3                	mov    %eax,%ebx$/;"	l
f010583b	obj/kern/kernel.asm	/^f010583b:	8b 54 24 08          	mov    0x8(%esp),%edx$/;"	l
f010583f	obj/kern/kernel.asm	/^f010583f:	29 da                	sub    %ebx,%edx$/;"	l
f0105841	obj/kern/kernel.asm	/^f0105841:	19 ce                	sbb    %ecx,%esi$/;"	l
f0105843	obj/kern/kernel.asm	/^f0105843:	89 f9                	mov    %edi,%ecx$/;"	l
f0105845	obj/kern/kernel.asm	/^f0105845:	89 f0                	mov    %esi,%eax$/;"	l
f0105847	obj/kern/kernel.asm	/^f0105847:	d3 e0                	shl    %cl,%eax$/;"	d
f0105849	obj/kern/kernel.asm	/^f0105849:	89 e9                	mov    %ebp,%ecx$/;"	l
f010584b	obj/kern/kernel.asm	/^f010584b:	d3 ea                	shr    %cl,%edx$/;"	d
f010584d	obj/kern/kernel.asm	/^f010584d:	89 e9                	mov    %ebp,%ecx$/;"	l
f010584f	obj/kern/kernel.asm	/^f010584f:	d3 ee                	shr    %cl,%esi$/;"	d
f0105851	obj/kern/kernel.asm	/^f0105851:	09 d0                	or     %edx,%eax$/;"	l
f0105853	obj/kern/kernel.asm	/^f0105853:	89 f2                	mov    %esi,%edx$/;"	l
f0105855	obj/kern/kernel.asm	/^f0105855:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0105858	obj/kern/kernel.asm	/^f0105858:	5b                   	pop    %ebx$/;"	l
f0105859	obj/kern/kernel.asm	/^f0105859:	5e                   	pop    %esi$/;"	l
f010585a	obj/kern/kernel.asm	/^f010585a:	5f                   	pop    %edi$/;"	l
f010585b	obj/kern/kernel.asm	/^f010585b:	5d                   	pop    %ebp$/;"	l
f010585c	obj/kern/kernel.asm	/^f010585c:	c3                   	ret    $/;"	l
f010585d	obj/kern/kernel.asm	/^f010585d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0105860	obj/kern/kernel.asm	/^f0105860:	29 f9                	sub    %edi,%ecx$/;"	l
f0105862	obj/kern/kernel.asm	/^f0105862:	19 d6                	sbb    %edx,%esi$/;"	l
f0105864	obj/kern/kernel.asm	/^f0105864:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105868	obj/kern/kernel.asm	/^f0105868:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f010586c	obj/kern/kernel.asm	/^f010586c:	e9 18 ff ff ff       	jmp    f0105789 <__umoddi3+0x69>$/;"	l
false	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon5
feature	kern/mpconfig.c	/^	uint32_t feature;               \/\/ feature flags from CPUID instruction$/;"	m	struct:mpproc	file:
fileno	gradelib.py	/^    def fileno(self):$/;"	f
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient
first_free_page	obj/kern/kernel.asm	/^	first_free_page = (char *) boot_alloc(0);$/;"	d
fl	obj/kern/kernel.asm	/^	fl = page_free_list;$/;"	d
flags	kern/mpconfig.c	/^	uint8_t flags;                  \/\/ CPU flags$/;"	m	struct:mpproc	file:
fork	lib/fork.c	/^fork(void)$/;"	f
forkchild	user/forktree.c	/^forkchild(const char *cur, char branch)$/;"	f
forktree	user/forktree.c	/^forktree(const char *cur)$/;"	f
fs_test	fs/test.c	/^fs_test(void)$/;"	f
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc
gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc
gdt	boot/boot.S	/^gdt:$/;"	l
gdt	kern/env.c	/^struct Segdesc gdt[NCPU + 5] =$/;"	v	typeref:struct:Segdesc
gdt	kern/mpentry.S	/^gdt:$/;"	l
gdt_pd	kern/env.c	/^struct Pseudodesc gdt_pd = {$/;"	v	typeref:struct:Pseudodesc
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
gdtdesc	kern/mpentry.S	/^gdtdesc:$/;"	l
generation	obj/kern/kernel.asm	/^		generation = 1 << ENVGENSHIFT;$/;"	d
generation	obj/kern/kernel.asm	/^	generation = (e->env_id + (1 << ENVGENSHIFT)) & ~(NENV - 1);$/;"	d
get_caller_pcs	kern/spinlock.c	/^get_caller_pcs(uint32_t pcs[])$/;"	f	file:
get_current_test	gradelib.py	/^def get_current_test():$/;"	f
get_gdb_port	gradelib.py	/^    def get_gdb_port():$/;"	f
getchar	kern/console.c	/^getchar(void)$/;"	f
getchar	lib/console.c	/^getchar(void)$/;"	f
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:
handle_output	gradelib.py	/^        def handle_output(output):$/;"	f	function:call_on_line.setup_call_on_line
handle_read	gradelib.py	/^    def handle_read(self):$/;"	f
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient
handler	user/faultalloc.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultallocbad.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultdie.c	/^handler(struct UTrapframe *utf)$/;"	f
hello	user/buggyhello2.c	/^const char *hello = "hello, world\\n";$/;"	v
holding	kern/spinlock.c	/^holding(struct spinlock *lock)$/;"	f	file:
i	obj/kern/kernel.asm	/^			i = conf->entry;$/;"	d
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
i	obj/user/pingpongs.asm	/^	i = 0;$/;"	d
i	obj/user/primes.asm	/^		i = ipc_recv(&envid, 0, 0);$/;"	d
i386_detect_memory	kern/pmap.c	/^i386_detect_memory(void)$/;"	f	file:
i386_init	kern/init.c	/^i386_init(void)$/;"	f
id	obj/user/fairness.asm	/^	id = sys_getenvid();$/;"	d
idt	kern/trap.c	/^struct Gatedesc idt[256] = { { 0 } };$/;"	v	typeref:struct:Gatedesc
idt_pd	kern/trap.c	/^struct Pseudodesc idt_pd = {$/;"	v	typeref:struct:Pseudodesc
idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:
imcrp	kern/mpconfig.c	/^	uint8_t imcrp;$/;"	m	struct:mp	file:
inb	inc/x86.h	/^inb(int port)$/;"	f
inl	inc/x86.h	/^inl(int port)$/;"	f
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f
int	obj/kern/kernel.asm	/^int$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
int	obj/user/breakpoint.asm	/^int$/;"	l
int	obj/user/buggyhello.asm	/^int$/;"	l
int	obj/user/buggyhello2.asm	/^int$/;"	l
int	obj/user/divzero.asm	/^int zero;$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
int	obj/user/dumbfork.asm	/^int$/;"	l
int	obj/user/evilhello.asm	/^int$/;"	l
int	obj/user/fairness.asm	/^int$/;"	l
int	obj/user/faultalloc.asm	/^int$/;"	l
int	obj/user/faultallocbad.asm	/^int$/;"	l
int	obj/user/faultbadhandler.asm	/^int$/;"	l
int	obj/user/faultdie.asm	/^int$/;"	l
int	obj/user/faultevilhandler.asm	/^int$/;"	l
int	obj/user/faultnostack.asm	/^int$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
int	obj/user/faultregs.asm	/^int$/;"	l
int	obj/user/faultwrite.asm	/^int$/;"	l
int	obj/user/faultwritekernel.asm	/^int$/;"	l
int	obj/user/forktree.asm	/^int$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
int	obj/user/idle.asm	/^int$/;"	l
int	obj/user/pingpong.asm	/^int$/;"	l
int	obj/user/pingpongs.asm	/^int$/;"	l
int	obj/user/primes.asm	/^int$/;"	l
int	obj/user/sendpage.asm	/^int$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
int	obj/user/spin.asm	/^int$/;"	l
int	obj/user/stresssched.asm	/^int$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
int	obj/user/yield.asm	/^int$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t
int32_t	obj/kern/kernel.asm	/^int32_t$/;"	l
int32_t	obj/user/fairness.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpong.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpongs.asm	/^int32_t$/;"	l
int32_t	obj/user/primes.asm	/^int32_t$/;"	l
int32_t	obj/user/sendpage.asm	/^int32_t$/;"	l
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f
inw	inc/x86.h	/^inw(int port)$/;"	f
ipc_find_env	lib/ipc.c	/^ipc_find_env(enum EnvType type)$/;"	f
ipc_recv	lib/ipc.c	/^ipc_recv(envid_t *from_env_store, void *pg, int *perm_store)$/;"	f
ipc_send	lib/ipc.c	/^ipc_send(envid_t to_env, uint32_t val, void *pg, int perm)$/;"	f
irq_mask_8259A	kern/picirq.c	/^uint16_t irq_mask_8259A = 0xFFFF & ~(1<<IRQ_SLAVE);$/;"	v
irq_mask_8259A	obj/kern/kernel.asm	/^	irq_mask_8259A = mask;$/;"	d
irq_setmask_8259A	kern/picirq.c	/^irq_setmask_8259A(uint16_t mask)$/;"	f
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f
ismp	kern/mpconfig.c	/^int ismp;$/;"	v
ismp	obj/kern/kernel.asm	/^			ismp = 0;$/;"	d
ismp	obj/kern/kernel.asm	/^	ismp = 1;$/;"	d
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	file:
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	file:
kern_pgdir	kern/pmap.c	/^pde_t *kern_pgdir;		\/\/ Kernel's initial page directory$/;"	v
kern_pgdir	obj/kern/kernel.asm	/^	kern_pgdir = (pde_t *) boot_alloc(PGSIZE);$/;"	d
kernel_lock	kern/spinlock.c	/^struct spinlock kernel_lock = {$/;"	v	typeref:struct:spinlock
kill	gradelib.py	/^    def kill(self):$/;"	f
l	obj/kern/kernel.asm	/^			l = m;$/;"	d
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
lapic	kern/lapic.c	/^volatile uint32_t *lapic;$/;"	v
lapic	obj/kern/kernel.asm	/^	lapic = mmio_map_region(lapicaddr, 4096);$/;"	d
lapic_eoi	kern/lapic.c	/^lapic_eoi(void)$/;"	f
lapic_init	kern/lapic.c	/^lapic_init(void)$/;"	f
lapic_ipi	kern/lapic.c	/^lapic_ipi(int vector)$/;"	f
lapic_startap	kern/lapic.c	/^lapic_startap(uint8_t apicid, uint32_t addr)$/;"	f
lapicaddr	kern/lapic.c	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	v
lapicaddr	kern/mpconfig.c	/^	physaddr_t lapicaddr;           \/\/ address of local APIC$/;"	m	struct:mpconf	file:
lapicaddr	obj/kern/kernel.asm	/^		lapicaddr = 0;$/;"	d
lapicaddr	obj/kern/kernel.asm	/^	lapicaddr = conf->lapicaddr;$/;"	d
lapicw	kern/lapic.c	/^lapicw(int index, int value)$/;"	f	file:
last_tf	kern/trap.c	/^static struct Trapframe *last_tf;$/;"	v	typeref:struct:Trapframe	file:
last_tf	obj/kern/kernel.asm	/^	last_tf = tf;$/;"	d
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f
length	kern/mpconfig.c	/^	uint16_t length;                \/\/ total table length$/;"	m	struct:mpconf	file:
length	kern/mpconfig.c	/^	uint8_t length;                 \/\/ 1$/;"	m	struct:mp	file:
lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/badsegment.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/breakpoint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/divzero.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/dumbfork.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/evilhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/fairness.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultalloc.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultallocbad.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultbadhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultdie.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultevilhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultnostack.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultread.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultreadkernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultregs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwrite.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwritekernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/forktree.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/hello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/idle.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpong.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpongs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/primes.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/sendpage.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/softint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spin.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/stresssched.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testbss.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/yield.asm	/^		lflag = 0;$/;"	d
lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f
libmain	lib/libmain.c	/^libmain(int argc, char **argv)$/;"	f
lidt	inc/x86.h	/^lidt(void *p)$/;"	f
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
lline	obj/kern/kernel.asm	/^		lline = lfun;$/;"	d
load_icode	kern/env.c	/^load_icode(struct Env *e, uint8_t *binary)$/;"	f	file:
lock_kernel	kern/spinlock.h	/^lock_kernel(void)$/;"	f
locked	kern/spinlock.h	/^	unsigned locked;       \/\/ Is the lock held?$/;"	m	struct:spinlock
long	obj/kern/kernel.asm	/^long$/;"	l
long	obj/user/badsegment.asm	/^long$/;"	l
long	obj/user/breakpoint.asm	/^long$/;"	l
long	obj/user/buggyhello.asm	/^long$/;"	l
long	obj/user/buggyhello2.asm	/^long$/;"	l
long	obj/user/divzero.asm	/^long$/;"	l
long	obj/user/dumbfork.asm	/^long$/;"	l
long	obj/user/evilhello.asm	/^long$/;"	l
long	obj/user/fairness.asm	/^long$/;"	l
long	obj/user/faultalloc.asm	/^long$/;"	l
long	obj/user/faultallocbad.asm	/^long$/;"	l
long	obj/user/faultbadhandler.asm	/^long$/;"	l
long	obj/user/faultdie.asm	/^long$/;"	l
long	obj/user/faultevilhandler.asm	/^long$/;"	l
long	obj/user/faultnostack.asm	/^long$/;"	l
long	obj/user/faultread.asm	/^long$/;"	l
long	obj/user/faultreadkernel.asm	/^long$/;"	l
long	obj/user/faultregs.asm	/^long$/;"	l
long	obj/user/faultwrite.asm	/^long$/;"	l
long	obj/user/faultwritekernel.asm	/^long$/;"	l
long	obj/user/forktree.asm	/^long$/;"	l
long	obj/user/hello.asm	/^long$/;"	l
long	obj/user/idle.asm	/^long$/;"	l
long	obj/user/pingpong.asm	/^long$/;"	l
long	obj/user/pingpongs.asm	/^long$/;"	l
long	obj/user/primes.asm	/^long$/;"	l
long	obj/user/sendpage.asm	/^long$/;"	l
long	obj/user/softint.asm	/^long$/;"	l
long	obj/user/spin.asm	/^long$/;"	l
long	obj/user/stresssched.asm	/^long$/;"	l
long	obj/user/testbss.asm	/^long$/;"	l
long	obj/user/yield.asm	/^long$/;"	l
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	file:
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f
make	gradelib.py	/^def make(*target):$/;"	f
match	gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner
maybe_unlink	gradelib.py	/^def maybe_unlink(*paths):$/;"	f
mc146818_read	kern/kclock.c	/^mc146818_read(unsigned reg)$/;"	f
mc146818_write	kern/kclock.c	/^mc146818_write(unsigned reg, unsigned datum)$/;"	f
mem_init	kern/pmap.c	/^mem_init(void)$/;"	f
mem_init_mp	kern/pmap.c	/^mem_init_mp(void)$/;"	f	file:
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f
memcpy	lib/string.c	/^memcpy(void *dst, const void *src, size_t n)$/;"	f
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f
microdelay	kern/lapic.c	/^microdelay(int us)$/;"	f	file:
mismatch	obj/user/faultregs.asm	/^			mismatch = 1;					\\$/;"	d
mm1	obj/kern/kernel.asm	/^	mm1 = (uintptr_t) mmio_map_region(0, 4097);$/;"	d
mm2	obj/kern/kernel.asm	/^	mm2 = (uintptr_t) mmio_map_region(0, 4096);$/;"	d
mmio_map_region	kern/pmap.c	/^mmio_map_region(physaddr_t pa, size_t size)$/;"	f
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f
mp	kern/mpconfig.c	/^struct mp {             \/\/ floating pointer [MP 4.1]$/;"	s	file:
mp_init	kern/mpconfig.c	/^mp_init(void)$/;"	f
mp_main	kern/init.c	/^mp_main(void)$/;"	f
mpconf	kern/mpconfig.c	/^struct mpconf {         \/\/ configuration table header [MP 4.2]$/;"	s	file:
mpconfig	kern/mpconfig.c	/^mpconfig(struct mp **pmp)$/;"	f	file:
mpentry_end	kern/mpentry.S	/^mpentry_end:$/;"	l
mpentry_end	obj/kern/kernel.asm	/^mpentry_end:$/;"	l
mpentry_kstack	kern/init.c	/^void *mpentry_kstack;$/;"	v
mpentry_kstack	obj/kern/kernel.asm	/^		mpentry_kstack = percpu_kstacks[c - cpus] + KSTKSIZE;$/;"	d
mpentry_start	kern/mpentry.S	/^mpentry_start:$/;"	l
mpentry_start	obj/kern/kernel.asm	/^mpentry_start:$/;"	l
mpproc	kern/mpconfig.c	/^struct mpproc {         \/\/ processor table entry [MP 4.3.1]$/;"	s	file:
mpsearch	kern/mpconfig.c	/^mpsearch(void)$/;"	f	file:
mpsearch1	kern/mpconfig.c	/^mpsearch1(physaddr_t a, int len)$/;"	f	file:
msg	fs/test.c	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v	file:
n	obj/kern/kernel.asm	/^	n = ROUNDUP(NENV*sizeof(struct Env), PGSIZE);$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(npages*sizeof(struct PageInfo), PGSIZE);$/;"	d
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:
name	kern/spinlock.h	/^	char *name;            \/\/ Name of lock.$/;"	m	struct:spinlock
name	kern/trapentry.S	/^	name:								\\$/;"	l
name	kern/trapentry.S	/^	name:			\/* function starts here *\/		\\$/;"	l
ncpu	kern/mpconfig.c	/^int ncpu;$/;"	v
ncpu	obj/kern/kernel.asm	/^		ncpu = 1;$/;"	d
newfree	obj/kern/kernel.asm	/^		newfree = ROUNDUP(n+nextfree, PGSIZE);$/;"	d
nextfree	obj/kern/kernel.asm	/^			nextfree = newfree;$/;"	d
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP((char*)end, PGSIZE); $/;"	d
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	file:
npages	kern/pmap.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v
npages	obj/kern/kernel.asm	/^	npages = totalmem \/ (PGSIZE \/ 1024);$/;"	d
npages_basemem	kern/pmap.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	file:
npages_basemem	obj/kern/kernel.asm	/^	npages_basemem = basemem \/ (PGSIZE \/ 1024);$/;"	d
num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/kern/kernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/badsegment.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/badsegment.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/breakpoint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/breakpoint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/divzero.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/divzero.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/dumbfork.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/dumbfork.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/evilhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/evilhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/fairness.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/fairness.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultalloc.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultalloc.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultallocbad.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultdie.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultdie.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultnostack.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultnostack.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultread.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultread.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultregs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultregs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwrite.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwrite.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/forktree.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/forktree.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/hello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/hello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/idle.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/idle.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpong.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpong.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpongs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpongs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primes.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primes.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/sendpage.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/sendpage.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/sendpage.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/sendpage.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/softint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/softint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spin.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spin.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/stresssched.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/stresssched.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testbss.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testbss.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/yield.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/yield.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/kern/kernel.asm	/^		number:$/;"	l
number	obj/user/badsegment.asm	/^		number:$/;"	l
number	obj/user/breakpoint.asm	/^		number:$/;"	l
number	obj/user/buggyhello.asm	/^		number:$/;"	l
number	obj/user/buggyhello2.asm	/^		number:$/;"	l
number	obj/user/divzero.asm	/^		number:$/;"	l
number	obj/user/dumbfork.asm	/^		number:$/;"	l
number	obj/user/evilhello.asm	/^		number:$/;"	l
number	obj/user/fairness.asm	/^		number:$/;"	l
number	obj/user/faultalloc.asm	/^		number:$/;"	l
number	obj/user/faultallocbad.asm	/^		number:$/;"	l
number	obj/user/faultbadhandler.asm	/^		number:$/;"	l
number	obj/user/faultdie.asm	/^		number:$/;"	l
number	obj/user/faultevilhandler.asm	/^		number:$/;"	l
number	obj/user/faultnostack.asm	/^		number:$/;"	l
number	obj/user/faultread.asm	/^		number:$/;"	l
number	obj/user/faultreadkernel.asm	/^		number:$/;"	l
number	obj/user/faultregs.asm	/^		number:$/;"	l
number	obj/user/faultwrite.asm	/^		number:$/;"	l
number	obj/user/faultwritekernel.asm	/^		number:$/;"	l
number	obj/user/forktree.asm	/^		number:$/;"	l
number	obj/user/hello.asm	/^		number:$/;"	l
number	obj/user/idle.asm	/^		number:$/;"	l
number	obj/user/pingpong.asm	/^		number:$/;"	l
number	obj/user/pingpongs.asm	/^		number:$/;"	l
number	obj/user/primes.asm	/^		number:$/;"	l
number	obj/user/sendpage.asm	/^		number:$/;"	l
number	obj/user/softint.asm	/^		number:$/;"	l
number	obj/user/spin.asm	/^		number:$/;"	l
number	obj/user/stresssched.asm	/^		number:$/;"	l
number	obj/user/testbss.asm	/^		number:$/;"	l
number	obj/user/yield.asm	/^		number:$/;"	l
nvram_read	kern/pmap.c	/^nvram_read(int r)$/;"	f	file:
oemlength	kern/mpconfig.c	/^	uint16_t oemlength;             \/\/ OEM table length$/;"	m	struct:mpconf	file:
oemtable	kern/mpconfig.c	/^	physaddr_t oemtable;            \/\/ OEM table pointer$/;"	m	struct:mpconf	file:
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
offsetof	inc/types.h	73;"	d
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f
p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
p	obj/kern/kernel.asm	/^		p = *(uint16_t *) (bda + 0x13) * 1024;$/;"	d
p	obj/kern/kernel.asm	/^	p = (pte_t*) KADDR(PTE_ADDR(*pgdir));$/;"	d
p	obj/user/badsegment.asm	/^				p = "(null)";$/;"	d
p	obj/user/breakpoint.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello2.asm	/^				p = "(null)";$/;"	d
p	obj/user/divzero.asm	/^				p = "(null)";$/;"	d
p	obj/user/dumbfork.asm	/^				p = "(null)";$/;"	d
p	obj/user/evilhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/fairness.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultalloc.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultallocbad.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultbadhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultdie.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultevilhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultnostack.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultread.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultreadkernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultregs.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwrite.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwritekernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/forktree.asm	/^				p = "(null)";$/;"	d
p	obj/user/hello.asm	/^				p = "(null)";$/;"	d
p	obj/user/idle.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpong.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpongs.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^	p = ipc_recv(&envid, 0, 0);$/;"	d
p	obj/user/sendpage.asm	/^				p = "(null)";$/;"	d
p	obj/user/softint.asm	/^				p = "(null)";$/;"	d
p	obj/user/spin.asm	/^				p = "(null)";$/;"	d
p	obj/user/stresssched.asm	/^				p = "(null)";$/;"	d
p	obj/user/testbss.asm	/^				p = "(null)";$/;"	d
p	obj/user/yield.asm	/^				p = "(null)";$/;"	d
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr
pa	obj/kern/kernel.asm	/^		pa = PTE_ADDR(e->env_pgdir[pdeno]);$/;"	d
pa	obj/kern/kernel.asm	/^	pa = PADDR(e->env_pgdir);$/;"	d
pa	obj/kern/kernel.asm	/^	pa = ROUNDDOWN(pa, PGSIZE);$/;"	d
pa2page	kern/pmap.h	/^pa2page(physaddr_t pa)$/;"	f
padc	obj/kern/kernel.asm	/^			padc = '-';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '-';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '0';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '-';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '0';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '-';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '0';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '-';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '0';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '-';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '-';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '0';$/;"	d
padc	obj/user/hello.asm	/^			padc = '-';$/;"	d
padc	obj/user/hello.asm	/^			padc = '0';$/;"	d
padc	obj/user/idle.asm	/^			padc = '-';$/;"	d
padc	obj/user/idle.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '0';$/;"	d
padc	obj/user/primes.asm	/^			padc = '-';$/;"	d
padc	obj/user/primes.asm	/^			padc = '0';$/;"	d
padc	obj/user/sendpage.asm	/^			padc = '-';$/;"	d
padc	obj/user/sendpage.asm	/^			padc = '0';$/;"	d
padc	obj/user/softint.asm	/^			padc = '-';$/;"	d
padc	obj/user/softint.asm	/^			padc = '0';$/;"	d
padc	obj/user/spin.asm	/^			padc = '-';$/;"	d
padc	obj/user/spin.asm	/^			padc = '0';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '-';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '0';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '-';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '0';$/;"	d
padc	obj/user/yield.asm	/^			padc = '-';$/;"	d
padc	obj/user/yield.asm	/^			padc = '0';$/;"	d
page2kva	kern/pmap.h	/^page2kva(struct PageInfo *pp)$/;"	f
page2pa	kern/pmap.h	/^page2pa(struct PageInfo *pp)$/;"	f
page_alloc	kern/pmap.c	/^page_alloc(int alloc_flags)$/;"	f
page_decref	kern/pmap.c	/^page_decref(struct PageInfo* pp)$/;"	f
page_fault_handler	kern/trap.c	/^page_fault_handler(struct Trapframe *tf)$/;"	f
page_free	kern/pmap.c	/^page_free(struct PageInfo *pp)$/;"	f
page_free_list	kern/pmap.c	/^static struct PageInfo *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:PageInfo	file:
page_free_list	obj/kern/kernel.asm	/^			page_free_list = &pages[i];$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = pp1;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = 0;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = fl;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = page_free_list->pp_link;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = pp;	$/;"	d
page_init	kern/pmap.c	/^page_init(void)$/;"	f
page_insert	kern/pmap.c	/^page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)$/;"	f
page_lookup	kern/pmap.c	/^page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)$/;"	f
page_remove	kern/pmap.c	/^page_remove(pde_t *pgdir, void *va)$/;"	f
pages	kern/pmap.c	/^struct PageInfo *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:PageInfo
pages	obj/kern/kernel.asm	/^	pages = (struct PageInfo*) boot_alloc(npages * sizeof(struct PageInfo));$/;"	d
panic	inc/assert.h	12;"	d
panicstr	kern/init.c	/^const char *panicstr;$/;"	v
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
pcs	kern/spinlock.h	/^	uintptr_t pcs[10];     \/\/ The call stack (an array of program counters)$/;"	m	struct:spinlock
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t
percpu_kstacks	kern/mpconfig.c	/^unsigned char percpu_kstacks[NCPU][KSTKSIZE]$/;"	v
pgdir	obj/kern/kernel.asm	/^	pgdir = &pgdir[PDX(va)];$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = kern_pgdir;$/;"	d
pgdir_walk	kern/pmap.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f
pgfault	lib/fork.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
pgfault	user/faultregs.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
physaddr	kern/mpconfig.c	/^	physaddr_t physaddr;            \/\/ phys addr of MP config table$/;"	m	struct:mp	file:
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
physaddr_t	obj/kern/kernel.asm	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	l
pic_init	kern/picirq.c	/^pic_init(void)$/;"	f
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
post_make	gradelib.py	/^def post_make():$/;"	f
pp	obj/kern/kernel.asm	/^	pp = page_free_list;$/;"	d
pp0	obj/kern/kernel.asm	/^	pp0 = pp1 = pp2 = 0;$/;"	d
pp1	obj/kern/kernel.asm	/^	pp1 = pp2 = 0;$/;"	d
pp_link	inc/memlayout.h	/^	struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo::PageInfo
pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:PageInfo
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
pre_make	gradelib.py	/^def pre_make():$/;"	f
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/kern/kernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/badsegment.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badsegment.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/badsegment.asm	/^		precision = -1;$/;"	d
precision	obj/user/breakpoint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/breakpoint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/breakpoint.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello2.asm	/^		precision = -1;$/;"	d
precision	obj/user/divzero.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/divzero.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/divzero.asm	/^		precision = -1;$/;"	d
precision	obj/user/dumbfork.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/dumbfork.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/dumbfork.asm	/^		precision = -1;$/;"	d
precision	obj/user/evilhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/evilhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/evilhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/fairness.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/fairness.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/fairness.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultalloc.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultalloc.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultalloc.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultallocbad.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultallocbad.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultallocbad.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultbadhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultbadhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultbadhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultdie.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultdie.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultdie.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultevilhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultevilhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultevilhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultnostack.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultnostack.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultnostack.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultread.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultread.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultread.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultreadkernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultreadkernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultregs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultregs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultregs.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwrite.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwrite.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwrite.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwritekernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwritekernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwritekernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/forktree.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktree.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/forktree.asm	/^		precision = -1;$/;"	d
precision	obj/user/hello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/hello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/hello.asm	/^		precision = -1;$/;"	d
precision	obj/user/idle.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/idle.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/idle.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpong.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpong.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpong.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpongs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpongs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpongs.asm	/^		precision = -1;$/;"	d
precision	obj/user/primes.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primes.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/primes.asm	/^		precision = -1;$/;"	d
precision	obj/user/sendpage.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sendpage.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/sendpage.asm	/^		precision = -1;$/;"	d
precision	obj/user/softint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/softint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/softint.asm	/^		precision = -1;$/;"	d
precision	obj/user/spin.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spin.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spin.asm	/^		precision = -1;$/;"	d
precision	obj/user/stresssched.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/stresssched.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/stresssched.asm	/^		precision = -1;$/;"	d
precision	obj/user/testbss.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testbss.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testbss.asm	/^		precision = -1;$/;"	d
precision	obj/user/yield.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/yield.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/yield.asm	/^		precision = -1;$/;"	d
primeproc	user/primes.c	/^primeproc(void)$/;"	f
print_regs	kern/trap.c	/^print_regs(struct PushRegs *regs)$/;"	f
print_trapframe	kern/trap.c	/^print_trapframe(struct Trapframe *tf)$/;"	f
printbuf	lib/printf.c	/^struct printbuf {$/;"	s	file:
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:
proc	obj/kern/kernel.asm	/^			proc = (struct mpproc *)p;$/;"	d
process_precision	obj/kern/kernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/badsegment.asm	/^		process_precision:$/;"	l
process_precision	obj/user/breakpoint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/divzero.asm	/^		process_precision:$/;"	l
process_precision	obj/user/dumbfork.asm	/^		process_precision:$/;"	l
process_precision	obj/user/evilhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/fairness.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultalloc.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultallocbad.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultbadhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultdie.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultevilhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultnostack.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultread.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultreadkernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultregs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwrite.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwritekernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/forktree.asm	/^		process_precision:$/;"	l
process_precision	obj/user/hello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/idle.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpong.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpongs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/primes.asm	/^		process_precision:$/;"	l
process_precision	obj/user/sendpage.asm	/^		process_precision:$/;"	l
process_precision	obj/user/softint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/spin.asm	/^		process_precision:$/;"	l
process_precision	obj/user/stresssched.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testbss.asm	/^		process_precision:$/;"	l
process_precision	obj/user/yield.asm	/^		process_precision:$/;"	l
product	kern/mpconfig.c	/^	uint8_t product[20];            \/\/ product id$/;"	m	struct:mpconf	file:
protcseg	boot/boot.S	/^protcseg:$/;"	l
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
pt	obj/kern/kernel.asm	/^		pt = (pte_t*) KADDR(pa);$/;"	d
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t
pte_t	obj/kern/kernel.asm	/^pte_t *$/;"	l
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(PGSIZE)]));$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) page2kva(pp0);$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = pgdir_walk(kern_pgdir, va, 1);$/;"	d
ptep1	obj/kern/kernel.asm	/^	ptep1 = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(va)]));$/;"	d
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	file:
putch	lib/printf.c	/^putch(int ch, struct printbuf *b)$/;"	f	file:
r	grade-lab1	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab2	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab3	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab4	/^r = Runner(save("jos.out"),$/;"	v
r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/badsegment.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/breakpoint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/divzero.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/dumbfork.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/evilhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/fairness.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultalloc.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultallocbad.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultbadhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultdie.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultevilhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultnostack.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultread.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultreadkernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultregs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwrite.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwritekernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/forktree.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/hello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/idle.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpong.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpongs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primes.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/sendpage.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/softint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spin.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/stresssched.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testbss.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/yield.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rcr0	inc/x86.h	/^rcr0(void)$/;"	f
rcr2	inc/x86.h	/^rcr2(void)$/;"	f
rcr3	inc/x86.h	/^rcr3(void)$/;"	f
rcr4	inc/x86.h	/^rcr4(void)$/;"	f
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f
read_esp	inc/x86.h	/^read_esp(void)$/;"	f
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f
reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs
reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs
reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs
reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs
reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs
reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs
reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs
reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs
region_alloc	kern/env.c	/^region_alloc(struct Env *e, void *va, size_t len)$/;"	f	file:
register_test	gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test
regs	user/faultregs.c	/^	struct PushRegs regs;$/;"	m	struct:regs	typeref:struct:regs::PushRegs	file:
regs	user/faultregs.c	/^struct regs$/;"	s	file:
relocated	kern/entry.S	/^relocated:$/;"	l
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
reserved	kern/mpconfig.c	/^	uint8_t reserved;$/;"	m	struct:mpconf	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[3];$/;"	m	struct:mp	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[8];$/;"	m	struct:mpproc	file:
reset_fs	gradelib.py	/^def reset_fs():$/;"	f
result	obj/kern/kernel.asm	/^		result = nextfree;$/;"	d
reswitch	obj/kern/kernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/badsegment.asm	/^	reswitch:$/;"	l
reswitch	obj/user/breakpoint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/divzero.asm	/^	reswitch:$/;"	l
reswitch	obj/user/dumbfork.asm	/^	reswitch:$/;"	l
reswitch	obj/user/evilhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/fairness.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultalloc.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultallocbad.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultbadhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultdie.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultevilhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultnostack.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultread.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultreadkernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultregs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwrite.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwritekernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/forktree.asm	/^	reswitch:$/;"	l
reswitch	obj/user/hello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/idle.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpong.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpongs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/primes.asm	/^	reswitch:$/;"	l
reswitch	obj/user/sendpage.asm	/^	reswitch:$/;"	l
reswitch	obj/user/softint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/spin.asm	/^	reswitch:$/;"	l
reswitch	obj/user/stresssched.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testbss.asm	/^	reswitch:$/;"	l
reswitch	obj/user/yield.asm	/^	reswitch:$/;"	l
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/badsegment.asm	/^	ret = dst;$/;"	d
ret	obj/user/breakpoint.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello2.asm	/^	ret = dst;$/;"	d
ret	obj/user/divzero.asm	/^	ret = dst;$/;"	d
ret	obj/user/dumbfork.asm	/^	ret = dst;$/;"	d
ret	obj/user/evilhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/fairness.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultalloc.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultallocbad.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultbadhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultdie.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultevilhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultnostack.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultread.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultreadkernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultregs.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwrite.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwritekernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/forktree.asm	/^	ret = dst;$/;"	d
ret	obj/user/hello.asm	/^	ret = dst;$/;"	d
ret	obj/user/idle.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpong.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpongs.asm	/^	ret = dst;$/;"	d
ret	obj/user/primes.asm	/^	ret = dst;$/;"	d
ret	obj/user/sendpage.asm	/^	ret = dst;$/;"	d
ret	obj/user/softint.asm	/^	ret = dst;$/;"	d
ret	obj/user/spin.asm	/^	ret = dst;$/;"	d
ret	obj/user/stresssched.asm	/^	ret = dst;$/;"	d
ret	obj/user/testbss.asm	/^	ret = dst;$/;"	d
ret	obj/user/yield.asm	/^	ret = dst;$/;"	d
rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfun;$/;"	d
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon2	file:
run_qemu	gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner
run_qemu_kw	gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	function:Runner.run_qemu
run_test	gradelib.py	/^        def run_test():$/;"	f	function:test.register_test
run_tests	gradelib.py	/^def run_tests():$/;"	f
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	file:
s	obj/kern/kernel.asm	/^	s = src;$/;"	d
s	obj/user/badsegment.asm	/^	s = src;$/;"	d
s	obj/user/breakpoint.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello2.asm	/^	s = src;$/;"	d
s	obj/user/divzero.asm	/^	s = src;$/;"	d
s	obj/user/dumbfork.asm	/^	s = src;$/;"	d
s	obj/user/evilhello.asm	/^	s = src;$/;"	d
s	obj/user/fairness.asm	/^	s = src;$/;"	d
s	obj/user/faultalloc.asm	/^	s = src;$/;"	d
s	obj/user/faultallocbad.asm	/^	s = src;$/;"	d
s	obj/user/faultbadhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultdie.asm	/^	s = src;$/;"	d
s	obj/user/faultevilhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultnostack.asm	/^	s = src;$/;"	d
s	obj/user/faultread.asm	/^	s = src;$/;"	d
s	obj/user/faultreadkernel.asm	/^	s = src;$/;"	d
s	obj/user/faultregs.asm	/^	s = src;$/;"	d
s	obj/user/faultwrite.asm	/^	s = src;$/;"	d
s	obj/user/faultwritekernel.asm	/^	s = src;$/;"	d
s	obj/user/forktree.asm	/^	s = src;$/;"	d
s	obj/user/hello.asm	/^	s = src;$/;"	d
s	obj/user/idle.asm	/^	s = src;$/;"	d
s	obj/user/pingpong.asm	/^	s = src;$/;"	d
s	obj/user/pingpongs.asm	/^	s = src;$/;"	d
s	obj/user/primes.asm	/^	s = src;$/;"	d
s	obj/user/sendpage.asm	/^	s = src;$/;"	d
s	obj/user/softint.asm	/^	s = src;$/;"	d
s	obj/user/spin.asm	/^	s = src;$/;"	d
s	obj/user/stresssched.asm	/^	s = src;$/;"	d
s	obj/user/testbss.asm	/^	s = src;$/;"	d
s	obj/user/yield.asm	/^	s = src;$/;"	d
save	gradelib.py	/^def save(path):$/;"	f
save_on_finish	gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save
sched_halt	kern/sched.c	/^sched_halt(void)$/;"	f
sched_yield	kern/sched.c	/^sched_yield(void)$/;"	f
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	file:
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
serial_init	kern/console.c	/^serial_init(void)$/;"	f	file:
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	file:
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	file:
set_pgfault_handler	lib/pgfault.c	/^set_pgfault_handler(void (*handler)(struct UTrapframe *utf))$/;"	f
setup_breakpoint	gradelib.py	/^    def setup_breakpoint(runner):$/;"	f	function:stop_breakpoint
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line
setup_save	gradelib.py	/^    def setup_save(runner):$/;"	f	function:save
sfork	lib/fork.c	/^sfork(void)$/;"	f
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] =$/;"	v	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] =$/;"	v	file:
show_command	gradelib.py	/^def show_command(cmd):$/;"	f
show_part	gradelib.py	/^    def show_part():$/;"	f	function:end_part
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "PCMP"$/;"	m	struct:mpconf	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "_MP_"$/;"	m	struct:mp	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ CPU signature$/;"	m	struct:mpproc	file:
size	obj/kern/kernel.asm	/^	size = ROUNDUP(pa+size, PGSIZE);$/;"	d
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
size_t	obj/user/badsegment.asm	/^size_t$/;"	l
size_t	obj/user/breakpoint.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello2.asm	/^size_t$/;"	l
size_t	obj/user/divzero.asm	/^size_t$/;"	l
size_t	obj/user/dumbfork.asm	/^size_t$/;"	l
size_t	obj/user/evilhello.asm	/^size_t$/;"	l
size_t	obj/user/fairness.asm	/^size_t$/;"	l
size_t	obj/user/faultalloc.asm	/^size_t$/;"	l
size_t	obj/user/faultallocbad.asm	/^size_t$/;"	l
size_t	obj/user/faultbadhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultdie.asm	/^size_t$/;"	l
size_t	obj/user/faultevilhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultnostack.asm	/^size_t$/;"	l
size_t	obj/user/faultread.asm	/^size_t$/;"	l
size_t	obj/user/faultreadkernel.asm	/^size_t$/;"	l
size_t	obj/user/faultregs.asm	/^size_t$/;"	l
size_t	obj/user/faultwrite.asm	/^size_t$/;"	l
size_t	obj/user/faultwritekernel.asm	/^size_t$/;"	l
size_t	obj/user/forktree.asm	/^size_t$/;"	l
size_t	obj/user/hello.asm	/^size_t$/;"	l
size_t	obj/user/idle.asm	/^size_t$/;"	l
size_t	obj/user/pingpong.asm	/^size_t$/;"	l
size_t	obj/user/pingpongs.asm	/^size_t$/;"	l
size_t	obj/user/primes.asm	/^size_t$/;"	l
size_t	obj/user/sendpage.asm	/^size_t$/;"	l
size_t	obj/user/softint.asm	/^size_t$/;"	l
size_t	obj/user/spin.asm	/^size_t$/;"	l
size_t	obj/user/stresssched.asm	/^size_t$/;"	l
size_t	obj/user/testbss.asm	/^size_t$/;"	l
size_t	obj/user/yield.asm	/^size_t$/;"	l
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f
specrev	kern/mpconfig.c	/^	uint8_t specrev;                \/\/ [14]$/;"	m	struct:mp	file:
spin	boot/boot.S	/^spin:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
spin	kern/mpentry.S	/^spin:$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
spin	obj/kern/kernel.asm	/^spin:$/;"	l
spin_initlock	kern/spinlock.h	26;"	d
spin_lock	kern/spinlock.c	/^spin_lock(struct spinlock *lk)$/;"	f
spin_unlock	kern/spinlock.c	/^spin_unlock(struct spinlock *lk)$/;"	f
spinlock	kern/spinlock.h	/^struct spinlock {$/;"	s
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	file:
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	file:
stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stab_end	obj/kern/kernel.asm	/^		stab_end = __STAB_END__;$/;"	d
stab_end	obj/kern/kernel.asm	/^		stab_end = usd->stab_end;$/;"	d
stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stabs	obj/kern/kernel.asm	/^		stabs = __STAB_BEGIN__;$/;"	d
stabs	obj/kern/kernel.asm	/^		stabs = usd->stabs;$/;"	d
stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	file:
stabstr	obj/kern/kernel.asm	/^		stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr	obj/kern/kernel.asm	/^		stabstr = usd->stabstr;$/;"	d
stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	file:
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = __STABSTR_END__;$/;"	d
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = usd->stabstr_end;$/;"	d
start	boot/boot.S	/^start:$/;"	l
start	obj/boot/boot.asm	/^start:$/;"	l
start32	kern/mpentry.S	/^start32:$/;"	l
start32	obj/kern/kernel.asm	/^start32:$/;"	l
stat	obj/kern/kernel.asm	/^	stat = inb(KBSTATP);$/;"	d
static	obj/boot/boot.asm	/^static inline uint8_t$/;"	l
static	obj/boot/boot.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static bool didinit;$/;"	l
static	obj/kern/kernel.asm	/^static bool serial_exists;$/;"	l
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/kern/kernel.asm	/^static envid_t$/;"	l
static	obj/kern/kernel.asm	/^static inline physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static inline struct PageInfo*$/;"	l
static	obj/kern/kernel.asm	/^static inline uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static inline uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static inline void*$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static long long$/;"	l
static	obj/kern/kernel.asm	/^static physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static struct mp *$/;"	t
static	obj/kern/kernel.asm	/^static uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kern/kernel.asm	/^static void *$/;"	l
static	obj/kern/kernel.asm	/^static void boot_aps(void);$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
static	obj/user/badsegment.asm	/^static long long$/;"	l
static	obj/user/badsegment.asm	/^static unsigned long long$/;"	l
static	obj/user/badsegment.asm	/^static void$/;"	l
static	obj/user/breakpoint.asm	/^static long long$/;"	l
static	obj/user/breakpoint.asm	/^static unsigned long long$/;"	l
static	obj/user/breakpoint.asm	/^static void$/;"	l
static	obj/user/buggyhello.asm	/^static long long$/;"	l
static	obj/user/buggyhello.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello.asm	/^static void$/;"	l
static	obj/user/buggyhello2.asm	/^static long long$/;"	l
static	obj/user/buggyhello2.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello2.asm	/^static void$/;"	l
static	obj/user/divzero.asm	/^static long long$/;"	l
static	obj/user/divzero.asm	/^static unsigned long long$/;"	l
static	obj/user/divzero.asm	/^static void$/;"	l
static	obj/user/dumbfork.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/dumbfork.asm	/^static long long$/;"	l
static	obj/user/dumbfork.asm	/^static unsigned long long$/;"	l
static	obj/user/dumbfork.asm	/^static void$/;"	l
static	obj/user/evilhello.asm	/^static long long$/;"	l
static	obj/user/evilhello.asm	/^static unsigned long long$/;"	l
static	obj/user/evilhello.asm	/^static void$/;"	l
static	obj/user/fairness.asm	/^static long long$/;"	l
static	obj/user/fairness.asm	/^static unsigned long long$/;"	l
static	obj/user/fairness.asm	/^static void$/;"	l
static	obj/user/faultalloc.asm	/^static long long$/;"	l
static	obj/user/faultalloc.asm	/^static unsigned long long$/;"	l
static	obj/user/faultalloc.asm	/^static void$/;"	l
static	obj/user/faultallocbad.asm	/^static long long$/;"	l
static	obj/user/faultallocbad.asm	/^static unsigned long long$/;"	l
static	obj/user/faultallocbad.asm	/^static void$/;"	l
static	obj/user/faultbadhandler.asm	/^static long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static void$/;"	l
static	obj/user/faultdie.asm	/^static long long$/;"	l
static	obj/user/faultdie.asm	/^static unsigned long long$/;"	l
static	obj/user/faultdie.asm	/^static void$/;"	l
static	obj/user/faultevilhandler.asm	/^static long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static void$/;"	l
static	obj/user/faultnostack.asm	/^static long long$/;"	l
static	obj/user/faultnostack.asm	/^static unsigned long long$/;"	l
static	obj/user/faultnostack.asm	/^static void$/;"	l
static	obj/user/faultread.asm	/^static long long$/;"	l
static	obj/user/faultread.asm	/^static unsigned long long$/;"	l
static	obj/user/faultread.asm	/^static void$/;"	l
static	obj/user/faultreadkernel.asm	/^static long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static void$/;"	l
static	obj/user/faultregs.asm	/^static long long$/;"	l
static	obj/user/faultregs.asm	/^static struct regs before, during, after;$/;"	t
static	obj/user/faultregs.asm	/^static unsigned long long$/;"	l
static	obj/user/faultregs.asm	/^static void$/;"	l
static	obj/user/faultwrite.asm	/^static long long$/;"	l
static	obj/user/faultwrite.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwrite.asm	/^static void$/;"	l
static	obj/user/faultwritekernel.asm	/^static long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static void$/;"	l
static	obj/user/forktree.asm	/^static long long$/;"	l
static	obj/user/forktree.asm	/^static unsigned long long$/;"	l
static	obj/user/forktree.asm	/^static void$/;"	l
static	obj/user/hello.asm	/^static long long$/;"	l
static	obj/user/hello.asm	/^static unsigned long long$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
static	obj/user/idle.asm	/^static long long$/;"	l
static	obj/user/idle.asm	/^static unsigned long long$/;"	l
static	obj/user/idle.asm	/^static void$/;"	l
static	obj/user/pingpong.asm	/^static long long$/;"	l
static	obj/user/pingpong.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpong.asm	/^static void$/;"	l
static	obj/user/pingpongs.asm	/^static long long$/;"	l
static	obj/user/pingpongs.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpongs.asm	/^static void$/;"	l
static	obj/user/primes.asm	/^static long long$/;"	l
static	obj/user/primes.asm	/^static unsigned long long$/;"	l
static	obj/user/primes.asm	/^static void$/;"	l
static	obj/user/sendpage.asm	/^static long long$/;"	l
static	obj/user/sendpage.asm	/^static unsigned long long$/;"	l
static	obj/user/sendpage.asm	/^static void$/;"	l
static	obj/user/softint.asm	/^static long long$/;"	l
static	obj/user/softint.asm	/^static unsigned long long$/;"	l
static	obj/user/softint.asm	/^static void$/;"	l
static	obj/user/spin.asm	/^static long long$/;"	l
static	obj/user/spin.asm	/^static unsigned long long$/;"	l
static	obj/user/spin.asm	/^static void$/;"	l
static	obj/user/stresssched.asm	/^static long long$/;"	l
static	obj/user/stresssched.asm	/^static unsigned long long$/;"	l
static	obj/user/stresssched.asm	/^static void$/;"	l
static	obj/user/testbss.asm	/^static long long$/;"	l
static	obj/user/testbss.asm	/^static unsigned long long$/;"	l
static	obj/user/testbss.asm	/^static void$/;"	l
static	obj/user/yield.asm	/^static long long$/;"	l
static	obj/user/yield.asm	/^static unsigned long long$/;"	l
static	obj/user/yield.asm	/^static void$/;"	l
static_assert	inc/assert.h	18;"	d
stop	gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line
stop_breakpoint	gradelib.py	/^def stop_breakpoint(addr):$/;"	f
stop_on_line	gradelib.py	/^def stop_on_line(regexp):$/;"	f
str1	user/sendpage.c	/^const char *str1 = "hello child environment! how are you?";$/;"	v
str2	user/sendpage.c	/^const char *str2 = "hello parent environment! I'm good.";$/;"	v
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f
strlen	lib/string.c	/^strlen(const char *s)$/;"	f
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f
sum	kern/mpconfig.c	/^sum(void *addr, int len)$/;"	f	file:
sum	obj/kern/kernel.asm	/^	sum = 0;$/;"	d
sys_cgetc	kern/syscall.c	/^sys_cgetc(void)$/;"	f	file:
sys_cgetc	lib/syscall.c	/^sys_cgetc(void)$/;"	f
sys_cputs	kern/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	file:
sys_cputs	lib/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f
sys_env_destroy	kern/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	file:
sys_env_destroy	lib/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f
sys_env_set_pgfault_upcall	kern/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *func)$/;"	f	file:
sys_env_set_pgfault_upcall	lib/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *upcall)$/;"	f
sys_env_set_status	kern/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f	file:
sys_env_set_status	lib/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f
sys_exofork	inc/lib.h	/^sys_exofork(void)$/;"	f
sys_exofork	kern/syscall.c	/^sys_exofork(void)$/;"	f	file:
sys_getenvid	kern/syscall.c	/^sys_getenvid(void)$/;"	f	file:
sys_getenvid	lib/syscall.c	/^sys_getenvid(void)$/;"	f
sys_ipc_recv	kern/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f	file:
sys_ipc_recv	lib/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f
sys_ipc_try_send	kern/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, unsigned perm)$/;"	f	file:
sys_ipc_try_send	lib/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, int perm)$/;"	f
sys_page_alloc	kern/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f	file:
sys_page_alloc	lib/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f
sys_page_map	kern/syscall.c	/^sys_page_map(envid_t srcenvid, void *srcva,$/;"	f	file:
sys_page_map	lib/syscall.c	/^sys_page_map(envid_t srcenv, void *srcva, envid_t dstenv, void *dstva, int perm)$/;"	f
sys_page_unmap	kern/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f	file:
sys_page_unmap	lib/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f
sys_yield	kern/syscall.c	/^sys_yield(void)$/;"	f	file:
sys_yield	lib/syscall.c	/^sys_yield(void)$/;"	f
syscall	kern/syscall.c	/^syscall(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f
syscall	lib/syscall.c	/^syscall(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	file:
test	gradelib.py	/^def test(points, title=None, parent=None):$/;"	f
test_backtrace_arguments	grade-lab1	/^def test_backtrace_arguments():$/;"	f
test_backtrace_count	grade-lab1	/^def test_backtrace_count():$/;"	f
test_backtrace_lines	grade-lab1	/^def test_backtrace_lines():$/;"	f
test_backtrace_symbols	grade-lab1	/^def test_backtrace_symbols():$/;"	f
test_badsegment	grade-lab3	/^def test_badsegment():$/;"	f
test_breakpoint	grade-lab3	/^def test_breakpoint():$/;"	f
test_buggyhello	grade-lab3	/^def test_buggyhello():$/;"	f
test_buggyhello2	grade-lab3	/^def test_buggyhello2():$/;"	f
test_check_kern_pgdir	grade-lab2	/^def test_check_kern_pgdir():$/;"	f
test_check_page	grade-lab2	/^def test_check_page():$/;"	f
test_check_page_alloc	grade-lab2	/^def test_check_page_alloc():$/;"	f
test_check_page_installed_pgdir	grade-lab2	/^def test_check_page_installed_pgdir():$/;"	f
test_divzero	grade-lab3	/^def test_divzero():$/;"	f
test_dumbfork	grade-lab4	/^def test_dumbfork():$/;"	f
test_evilhello	grade-lab3	/^def test_evilhello():$/;"	f
test_faultalloc	grade-lab4	/^def test_faultalloc():$/;"	f
test_faultallocbad	grade-lab4	/^def test_faultallocbad():$/;"	f
test_faultbadhandler	grade-lab4	/^def test_faultbadhandler():$/;"	f
test_faultdie	grade-lab4	/^def test_faultdie():$/;"	f
test_faultevilhandler	grade-lab4	/^def test_faultevilhandler():$/;"	f
test_faultnostack	grade-lab4	/^def test_faultnostack():$/;"	f
test_faultread	grade-lab3	/^def test_faultread():$/;"	f
test_faultread	grade-lab4	/^def test_faultread():$/;"	f
test_faultreadkernel	grade-lab3	/^def test_faultreadkernel():$/;"	f
test_faultregs	grade-lab4	/^def test_faultregs():$/;"	f
test_faultwrite	grade-lab3	/^def test_faultwrite():$/;"	f
test_faultwrite	grade-lab4	/^def test_faultwrite():$/;"	f
test_faultwritekernel	grade-lab3	/^def test_faultwritekernel():$/;"	f
test_forktree	grade-lab4	/^def test_forktree():$/;"	f
test_hello	grade-lab3	/^def test_hello():$/;"	f
test_jos	grade-lab1	/^def test_jos():$/;"	f
test_jos	grade-lab2	/^def test_jos():$/;"	f
test_pingpong	grade-lab4	/^def test_pingpong():$/;"	f
test_primes	grade-lab4	/^def test_primes():$/;"	f
test_printf	grade-lab1	/^def test_printf():$/;"	f
test_sendpage	grade-lab4	/^def test_sendpage():$/;"	f
test_softint	grade-lab3	/^def test_softint():$/;"	f
test_spin	grade-lab4	/^def test_spin():$/;"	f
test_stresssched	grade-lab4	/^def test_stresssched():$/;"	f
test_testbss	grade-lab3	/^def test_testbss():$/;"	f
tf	obj/kern/kernel.asm	/^		tf = &curenv->env_tf;$/;"	d
tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe
tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe
tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe
tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe
tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe
tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe
tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe
tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe
tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe
tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe
tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe
tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs
tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe
tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe
thiscpu	kern/cpu.h	38;"	d
thisenv	lib/libmain.c	/^const volatile struct Env *thisenv;$/;"	v	typeref:struct:Env
thisenv	obj/user/badsegment.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/breakpoint.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/buggyhello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/buggyhello2.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/divzero.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/evilhello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/fairness.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultalloc.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultallocbad.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultbadhandler.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultdie.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultevilhandler.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultnostack.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultread.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultreadkernel.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultregs.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultwrite.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultwritekernel.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/forktree.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/hello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/idle.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpong.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpongs.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primes.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sendpage.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/softint.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spin.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/stresssched.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testbss.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/yield.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
tlb_invalidate	kern/pmap.c	/^tlb_invalidate(pde_t *pgdir, void *va)$/;"	f
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f
togglecode	kern/console.c	/^static uint8_t togglecode[256] =$/;"	v	file:
top	obj/user/primes.asm	/^top:$/;"	l
totalmem	obj/kern/kernel.asm	/^		totalmem = 1 * 1024 + extmem;$/;"	d
totalmem	obj/kern/kernel.asm	/^		totalmem = 16 * 1024 + ext16mem;$/;"	d
totalmem	obj/kern/kernel.asm	/^		totalmem = basemem;$/;"	d
trap	kern/trap.c	/^trap(struct Trapframe *tf)$/;"	f
trap_dispatch	kern/trap.c	/^trap_dispatch(struct Trapframe *tf)$/;"	f	file:
trap_init	kern/trap.c	/^trap_init(void)$/;"	f
trap_init_percpu	kern/trap.c	/^trap_init_percpu(void)$/;"	f
trapname	kern/trap.c	/^static const char *trapname(int trapno)$/;"	f	file:
true	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon5
ts	kern/trap.c	/^static struct Taskstate ts;$/;"	v	typeref:struct:Taskstate	file:
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ MP system config type$/;"	m	struct:mp	file:
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ entry type (0)$/;"	m	struct:mpproc	file:
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	obj/user/pingpongs.asm	/^uint32_t val;$/;"	l
uint32_t	obj/user/testbss.asm	/^uint32_t bigarray[ARRAYSIZE];$/;"	l
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
umain	user/badsegment.c	/^umain(int argc, char **argv)$/;"	f
umain	user/breakpoint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello2.c	/^umain(int argc, char **argv)$/;"	f
umain	user/divzero.c	/^umain(int argc, char **argv)$/;"	f
umain	user/dumbfork.c	/^umain(int argc, char **argv)$/;"	f
umain	user/evilhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/fairness.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultalloc.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultallocbad.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultbadhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultdie.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultevilhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultnostack.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultread.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultreadkernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultregs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwrite.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwritekernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/forktree.c	/^umain(int argc, char **argv)$/;"	f
umain	user/hello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/idle.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpong.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpongs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/primes.c	/^umain(int argc, char **argv)$/;"	f
umain	user/sendpage.c	/^umain(int argc, char **argv)$/;"	f
umain	user/softint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spin.c	/^umain(int argc, char **argv)$/;"	f
umain	user/stresssched.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testbss.c	/^umain(int argc, char **argv)$/;"	f
umain	user/yield.c	/^umain(int argc, char **argv)$/;"	f
unlock_kernel	kern/spinlock.h	/^unlock_kernel(void)$/;"	f
unsigned	obj/kern/kernel.asm	/^unsigned$/;"	l
unsigned	obj/user/primes.asm	/^unsigned$/;"	l
user_mem_assert	kern/pmap.c	/^user_mem_assert(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check	kern/pmap.c	/^user_mem_check(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check_addr	kern/pmap.c	/^static uintptr_t user_mem_check_addr;$/;"	v	file:
user_mem_check_addr	obj/kern/kernel.asm	/^			user_mem_check_addr = (uint32_t)va;$/;"	d
user_test	gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner
utf_eflags	inc/trap.h	/^	uint32_t utf_eflags;$/;"	m	struct:UTrapframe
utf_eip	inc/trap.h	/^	uintptr_t utf_eip;$/;"	m	struct:UTrapframe
utf_err	inc/trap.h	/^	uint32_t utf_err;$/;"	m	struct:UTrapframe
utf_esp	inc/trap.h	/^	uintptr_t utf_esp;$/;"	m	struct:UTrapframe
utf_fault_va	inc/trap.h	/^	uint32_t utf_fault_va;	\/* va for T_PGFLT, 0 otherwise *\/$/;"	m	struct:UTrapframe
utf_regs	inc/trap.h	/^	struct PushRegs utf_regs;$/;"	m	struct:UTrapframe	typeref:struct:UTrapframe::PushRegs
va	obj/kern/kernel.asm	/^	va = (void*)(PGSIZE * NPDENTRIES + PGSIZE);$/;"	d
va_arg	inc/stdarg.h	10;"	d
va_end	inc/stdarg.h	12;"	d
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	inc/stdarg.h	8;"	d
val	user/pingpongs.c	/^uint32_t val;$/;"	v
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
vcprintf	lib/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ [14]$/;"	m	struct:mpconf	file:
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ local APIC version$/;"	m	struct:mpproc	file:
void	obj/boot/boot.asm	/^void readsect(void*, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void$/;"	l
void	obj/kern/kernel.asm	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/kern/kernel.asm	/^void sched_halt(void);$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
void	obj/user/badsegment.asm	/^void *$/;"	l
void	obj/user/badsegment.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
void	obj/user/breakpoint.asm	/^void *$/;"	l
void	obj/user/breakpoint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/breakpoint.asm	/^void$/;"	l
void	obj/user/buggyhello.asm	/^void *$/;"	l
void	obj/user/buggyhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello.asm	/^void$/;"	l
void	obj/user/buggyhello2.asm	/^void *$/;"	l
void	obj/user/buggyhello2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello2.asm	/^void$/;"	l
void	obj/user/divzero.asm	/^void *$/;"	l
void	obj/user/divzero.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/divzero.asm	/^void$/;"	l
void	obj/user/dumbfork.asm	/^void *$/;"	l
void	obj/user/dumbfork.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/dumbfork.asm	/^void$/;"	l
void	obj/user/evilhello.asm	/^void *$/;"	l
void	obj/user/evilhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/evilhello.asm	/^void$/;"	l
void	obj/user/fairness.asm	/^void *$/;"	l
void	obj/user/fairness.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/fairness.asm	/^void$/;"	l
void	obj/user/faultalloc.asm	/^void *$/;"	l
void	obj/user/faultalloc.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultalloc.asm	/^void$/;"	l
void	obj/user/faultallocbad.asm	/^void *$/;"	l
void	obj/user/faultallocbad.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultallocbad.asm	/^void$/;"	l
void	obj/user/faultbadhandler.asm	/^void *$/;"	l
void	obj/user/faultbadhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultbadhandler.asm	/^void$/;"	l
void	obj/user/faultdie.asm	/^void *$/;"	l
void	obj/user/faultdie.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultdie.asm	/^void$/;"	l
void	obj/user/faultevilhandler.asm	/^void *$/;"	l
void	obj/user/faultevilhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultevilhandler.asm	/^void$/;"	l
void	obj/user/faultnostack.asm	/^void *$/;"	l
void	obj/user/faultnostack.asm	/^void _pgfault_upcall();$/;"	l
void	obj/user/faultnostack.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultnostack.asm	/^void$/;"	l
void	obj/user/faultread.asm	/^void *$/;"	l
void	obj/user/faultread.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultread.asm	/^void$/;"	l
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
void	obj/user/faultreadkernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultreadkernel.asm	/^void$/;"	l
void	obj/user/faultregs.asm	/^void *$/;"	l
void	obj/user/faultregs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultregs.asm	/^void$/;"	l
void	obj/user/faultwrite.asm	/^void *$/;"	l
void	obj/user/faultwrite.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwrite.asm	/^void$/;"	l
void	obj/user/faultwritekernel.asm	/^void *$/;"	l
void	obj/user/faultwritekernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwritekernel.asm	/^void$/;"	l
void	obj/user/forktree.asm	/^void *$/;"	l
void	obj/user/forktree.asm	/^void forktree(const char *cur);$/;"	l
void	obj/user/forktree.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/forktree.asm	/^void$/;"	l
void	obj/user/hello.asm	/^void *$/;"	l
void	obj/user/hello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
void	obj/user/idle.asm	/^void *$/;"	l
void	obj/user/idle.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/idle.asm	/^void$/;"	l
void	obj/user/pingpong.asm	/^void *$/;"	l
void	obj/user/pingpong.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpong.asm	/^void$/;"	l
void	obj/user/pingpongs.asm	/^void *$/;"	l
void	obj/user/pingpongs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpongs.asm	/^void$/;"	l
void	obj/user/primes.asm	/^void *$/;"	l
void	obj/user/primes.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primes.asm	/^void$/;"	l
void	obj/user/sendpage.asm	/^void *$/;"	l
void	obj/user/sendpage.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/sendpage.asm	/^void$/;"	l
void	obj/user/softint.asm	/^void *$/;"	l
void	obj/user/softint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
void	obj/user/spin.asm	/^void *$/;"	l
void	obj/user/spin.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spin.asm	/^void$/;"	l
void	obj/user/stresssched.asm	/^void *$/;"	l
void	obj/user/stresssched.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/stresssched.asm	/^void$/;"	l
void	obj/user/testbss.asm	/^void *$/;"	l
void	obj/user/testbss.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testbss.asm	/^void$/;"	l
void	obj/user/yield.asm	/^void *$/;"	l
void	obj/user/yield.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/yield.asm	/^void$/;"	l
volatile	obj/kern/kernel.asm	/^volatile uint32_t *lapic;$/;"	l
volatile	obj/user/stresssched.asm	/^volatile int counter;$/;"	l
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f
wait	gradelib.py	/^    def wait(self):$/;"	f
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f
warn	inc/assert.h	11;"	d
was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
who	obj/user/dumbfork.asm	/^	who = dumbfork();$/;"	d
width	obj/kern/kernel.asm	/^				width = 0;$/;"	d
width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/kern/kernel.asm	/^		width = -1;$/;"	d
width	obj/user/badsegment.asm	/^				width = 0;$/;"	d
width	obj/user/badsegment.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^		width = -1;$/;"	d
width	obj/user/breakpoint.asm	/^				width = 0;$/;"	d
width	obj/user/breakpoint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/breakpoint.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^		width = -1;$/;"	d
width	obj/user/divzero.asm	/^				width = 0;$/;"	d
width	obj/user/divzero.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/divzero.asm	/^		width = -1;$/;"	d
width	obj/user/dumbfork.asm	/^				width = 0;$/;"	d
width	obj/user/dumbfork.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/dumbfork.asm	/^		width = -1;$/;"	d
width	obj/user/evilhello.asm	/^				width = 0;$/;"	d
width	obj/user/evilhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/evilhello.asm	/^		width = -1;$/;"	d
width	obj/user/fairness.asm	/^				width = 0;$/;"	d
width	obj/user/fairness.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/fairness.asm	/^		width = -1;$/;"	d
width	obj/user/faultalloc.asm	/^				width = 0;$/;"	d
width	obj/user/faultalloc.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultalloc.asm	/^		width = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = 0;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^		width = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultdie.asm	/^				width = 0;$/;"	d
width	obj/user/faultdie.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultdie.asm	/^		width = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultnostack.asm	/^				width = 0;$/;"	d
width	obj/user/faultnostack.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultnostack.asm	/^		width = -1;$/;"	d
width	obj/user/faultread.asm	/^				width = 0;$/;"	d
width	obj/user/faultread.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultread.asm	/^		width = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^		width = -1;$/;"	d
width	obj/user/faultregs.asm	/^				width = 0;$/;"	d
width	obj/user/faultregs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultregs.asm	/^		width = -1;$/;"	d
width	obj/user/faultwrite.asm	/^				width = 0;$/;"	d
width	obj/user/faultwrite.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwrite.asm	/^		width = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^		width = -1;$/;"	d
width	obj/user/forktree.asm	/^				width = 0;$/;"	d
width	obj/user/forktree.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/forktree.asm	/^		width = -1;$/;"	d
width	obj/user/hello.asm	/^				width = 0;$/;"	d
width	obj/user/hello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/hello.asm	/^		width = -1;$/;"	d
width	obj/user/idle.asm	/^				width = 0;$/;"	d
width	obj/user/idle.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/idle.asm	/^		width = -1;$/;"	d
width	obj/user/pingpong.asm	/^				width = 0;$/;"	d
width	obj/user/pingpong.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpong.asm	/^		width = -1;$/;"	d
width	obj/user/pingpongs.asm	/^				width = 0;$/;"	d
width	obj/user/pingpongs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpongs.asm	/^		width = -1;$/;"	d
width	obj/user/primes.asm	/^				width = 0;$/;"	d
width	obj/user/primes.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/primes.asm	/^		width = -1;$/;"	d
width	obj/user/sendpage.asm	/^				width = 0;$/;"	d
width	obj/user/sendpage.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/sendpage.asm	/^		width = -1;$/;"	d
width	obj/user/softint.asm	/^				width = 0;$/;"	d
width	obj/user/softint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/softint.asm	/^		width = -1;$/;"	d
width	obj/user/spin.asm	/^				width = 0;$/;"	d
width	obj/user/spin.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spin.asm	/^		width = -1;$/;"	d
width	obj/user/stresssched.asm	/^				width = 0;$/;"	d
width	obj/user/stresssched.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/stresssched.asm	/^		width = -1;$/;"	d
width	obj/user/testbss.asm	/^				width = 0;$/;"	d
width	obj/user/testbss.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testbss.asm	/^		width = -1;$/;"	d
width	obj/user/yield.asm	/^				width = 0;$/;"	d
width	obj/user/yield.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/yield.asm	/^		width = -1;$/;"	d
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon2	file:
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f
wrv	obj/kern/kernel.asm	/^	wrv = (uint16_t *)KADDR((0x40 << 4 | 0x67));  \/\/ Warm reset vector$/;"	d
xchecksum	kern/mpconfig.c	/^	uint8_t xchecksum;              \/\/ extended table checksum$/;"	m	struct:mpconf	file:
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f
xlength	kern/mpconfig.c	/^	uint16_t xlength;               \/\/ extended table length$/;"	m	struct:mpconf	file:
zero	obj/user/divzero.asm	/^	zero = 0;$/;"	d
zero	user/divzero.c	/^int zero;$/;"	v
